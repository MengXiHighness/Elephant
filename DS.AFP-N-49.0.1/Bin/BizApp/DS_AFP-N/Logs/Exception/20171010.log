2017-10-10 10:55:51,398 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 10:56:14,935 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 10:56:14,951 线程ID:[11] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 10:56:14,959 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 10:56:14,962 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 10:56:14,963 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 10:56:14,976 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 10:56:14,977 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 10:56:14,979 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 10:56:14,979 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 10:56:14,980 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 10:56:14,980 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 10:56:14,989 线程ID:[6] 日志级别：ERROR 描述：WpfAddinApp插件，文件不存在。路径：file:///D:/WorkSpace/DS.AFP-N/Trunk/DS.AFP-N/Bin/BizApp/DS_AFP-N/Addin/WpfAddinApp/WpfAddinApp.dll
System.IO.FileNotFoundException: WpfAddinApp插件，文件不存在。路径：file:///D:/WorkSpace/DS.AFP-N/Trunk/DS.AFP-N/Bin/BizApp/DS_AFP-N/Addin/WpfAddinApp/WpfAddinApp.dll
2017-10-10 11:04:36,236 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:04:58,822 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:04:58,832 线程ID:[11] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 11:04:58,836 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:04:58,842 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:04:58,842 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:04:58,858 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:04:58,859 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:04:58,860 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:04:58,861 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:04:58,862 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:04:58,862 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:04:58,916 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:04:58,916 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:04:58,920 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:04:58,933 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:04:58,952 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:04:58,973 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:04:58,975 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:04:58,978 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:04:58,980 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:04:58,983 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:04:58,985 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:04:58,987 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:04:58,987 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:04:58,987 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:04:58,989 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:04:58,989 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:04:58,989 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:04:58,990 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:04:58,990 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:04:58,990 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:04:58,991 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:04:58,991 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:04:58,992 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:04:58,992 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:04:58,993 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:04:58,994 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:04:58,995 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:04:58,995 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:04:58,995 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:04:59,001 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:04:59,002 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:04:59,004 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:04:59,006 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:04:59,008 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:04:59,009 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:04:59,010 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:04:59,012 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:04:59,013 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:04:59,013 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:04:59,014 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:04:59,015 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:04:59,015 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:04:59,022 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:04:59,025 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:04:59,026 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:04:59,027 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:04:59,028 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:04:59,029 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:04:59,030 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:04:59,030 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:04:59,032 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:04:59,040 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:04:59,042 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:04:59,043 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:04:59,053 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:04:59,054 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:04:59,054 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:04:59,054 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:04:59,055 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:04:59,055 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:04:59,057 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:04:59,057 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:04:59,058 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:04:59,059 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:04:59,059 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:04:59,060 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:04:59,061 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:04:59,061 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:04:59,062 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:04:59,063 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:04:59,063 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:04:59,064 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:04:59,066 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:04:59,067 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:04:59,068 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:04:59,068 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:04:59,069 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:04:59,069 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:04:59,069 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:04:59,070 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:04:59,070 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:04:59,071 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:04:59,071 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:04:59,071 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:04:59,071 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:04:59,072 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:04:59,072 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:04:59,073 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:04:59,073 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:04:59,076 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:04:59,077 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:04:59,078 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:04:59,078 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:04:59,078 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:04:59,079 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:04:59,079 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:04:59,079 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:04:59,080 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:04:59,084 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:04:59,084 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:04:59,085 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:04:59,085 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:04:59,087 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:04:59,087 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:04:59,088 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:04:59,088 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:04:59,088 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:04:59,089 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:04:59,089 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:04:59,089 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:04:59,089 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:04:59,090 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:04:59,090 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:04:59,090 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:04:59,090 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:04:59,091 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:04:59,091 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:04:59,091 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:04:59,091 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:04:59,092 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:04:59,092 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:04:59,092 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:04:59,092 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:04:59,093 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:04:59,093 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:04:59,093 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:04:59,093 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:04:59,094 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:04:59,094 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:04:59,094 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:04:59,095 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:04:59,095 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:04:59,096 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:04:59,101 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:04:59,110 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:07:44,800 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:07:54,057 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:07:54,064 线程ID:[6] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 11:07:54,068 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:07:54,071 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:07:54,071 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:07:54,083 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:07:54,084 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:07:54,085 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:07:54,086 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:07:54,086 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:07:54,087 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:07:54,114 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:07:54,115 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:07:54,118 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:07:54,129 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:07:54,144 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:07:54,164 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:07:54,166 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:07:54,169 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:07:54,171 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:07:54,174 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:07:54,176 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:07:54,178 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:07:54,180 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:07:54,181 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:07:54,182 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:07:54,183 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:07:54,183 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:07:54,184 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:07:54,184 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:07:54,184 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:07:54,185 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:07:54,186 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:07:54,186 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:07:54,187 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:07:54,187 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:07:54,189 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:07:54,189 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:07:54,190 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:07:54,190 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:07:54,196 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:07:54,197 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:07:54,199 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:07:54,201 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:07:54,203 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:07:54,204 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:07:54,205 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:07:54,206 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:07:54,207 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:07:54,207 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:07:54,208 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:07:54,209 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:07:54,209 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:07:54,217 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:07:54,218 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:07:54,219 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:07:54,219 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:07:54,220 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:07:54,220 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:07:54,221 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:07:54,222 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:07:54,223 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:07:54,231 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:07:54,234 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:07:54,234 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:07:54,249 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:07:54,249 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:07:54,250 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:07:54,250 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:07:54,251 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:07:54,251 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:07:54,253 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:07:54,254 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:07:54,255 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:07:54,256 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:07:54,256 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:07:54,257 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:07:54,257 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:07:54,258 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:07:54,260 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:07:54,261 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:07:54,261 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:07:54,262 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:07:54,265 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:07:54,266 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:07:54,267 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:07:54,268 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:07:54,268 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:07:54,269 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:07:54,269 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:07:54,269 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:07:54,270 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:07:54,270 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:07:54,270 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:07:54,271 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:07:54,271 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:07:54,272 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:07:54,272 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:07:54,272 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:07:54,272 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:07:54,278 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:07:54,279 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:07:54,279 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:07:54,280 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:07:54,280 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:07:54,280 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:07:54,281 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:07:54,281 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:07:54,282 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:07:54,287 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:07:54,287 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:07:54,288 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:07:54,288 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:07:54,290 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:07:54,291 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:07:54,291 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:07:54,291 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:07:54,292 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:07:54,292 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:07:54,293 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:07:54,293 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:07:54,293 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:07:54,294 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:07:54,294 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:07:54,294 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:07:54,295 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:07:54,295 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:07:54,295 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:07:54,296 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:07:54,296 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:07:54,296 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:07:54,297 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:07:54,297 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:07:54,297 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:07:54,297 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:07:54,298 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:07:54,298 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:07:54,298 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:07:54,299 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:07:54,299 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:07:54,299 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:07:54,299 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:07:54,300 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:07:54,301 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:07:54,308 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:07:54,317 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:35:55,380 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:37:57,849 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:37:57,857 线程ID:[7] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 11:37:57,861 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:37:57,865 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:37:57,866 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:37:57,881 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:37:57,882 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:37:57,883 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:37:57,884 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:37:57,885 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:37:57,885 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:37:57,916 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:37:57,916 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:37:57,921 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:37:57,951 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:37:57,977 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:37:58,035 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:37:58,038 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:37:58,042 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:37:58,048 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:37:58,053 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:37:58,057 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:37:58,059 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:37:58,060 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:37:58,060 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:37:58,061 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:37:58,061 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:37:58,061 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:37:58,062 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:37:58,062 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:37:58,063 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:37:58,063 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:37:58,064 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:37:58,065 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:37:58,065 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:37:58,065 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:37:58,067 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:37:58,068 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:37:58,068 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:37:58,068 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:37:58,075 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:37:58,076 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:37:58,078 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:37:58,081 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:37:58,083 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:37:58,084 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:37:58,085 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:37:58,087 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:37:58,088 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:37:58,089 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:37:58,089 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:37:58,090 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:37:58,091 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:37:58,098 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:37:58,099 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:37:58,100 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:37:58,100 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:37:58,101 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:37:58,101 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:37:58,102 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:37:58,103 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:37:58,104 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:37:58,112 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:37:58,113 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:37:58,114 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:37:58,125 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:37:58,125 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:37:58,126 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:37:58,126 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:37:58,127 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:37:58,127 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:37:58,129 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:37:58,129 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:37:58,130 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:37:58,130 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:37:58,131 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:37:58,131 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:37:58,132 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:37:58,132 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:37:58,133 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:37:58,133 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:37:58,134 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:37:58,134 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:37:58,136 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:37:58,138 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:37:58,139 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:37:58,139 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:37:58,140 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:37:58,140 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:37:58,141 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:37:58,141 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:37:58,141 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:37:58,141 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:37:58,142 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:37:58,142 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:37:58,142 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:37:58,143 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:37:58,143 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:37:58,143 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:37:58,144 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:37:58,144 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:37:58,148 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:37:58,149 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:37:58,149 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:37:58,150 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:37:58,150 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:37:58,151 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:37:58,151 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:37:58,152 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:37:58,156 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:37:58,156 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:37:58,156 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:37:58,157 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:37:58,158 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:37:58,159 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:37:58,159 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:37:58,159 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:37:58,160 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:37:58,160 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:37:58,160 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:37:58,161 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:37:58,161 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:37:58,161 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:37:58,162 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:37:58,162 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:37:58,162 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:37:58,162 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:37:58,163 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:37:58,163 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:37:58,164 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:37:58,164 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:37:58,164 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:37:58,165 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:37:58,165 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:37:58,165 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:37:58,166 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:37:58,166 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:37:58,166 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:37:58,166 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:37:58,167 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:37:58,167 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:37:58,167 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:37:58,168 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:37:58,169 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:37:58,175 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:37:58,186 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:38:25,805 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:38:25,813 线程ID:[14] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 11:38:25,819 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:38:25,824 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:38:25,825 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:38:25,846 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:38:25,847 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:38:25,849 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:38:25,850 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:38:25,851 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:38:25,852 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:38:25,893 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:38:25,894 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:38:25,904 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:38:25,923 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:38:25,944 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:38:26,004 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:38:26,006 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:38:26,011 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:38:26,015 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:38:26,018 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:38:26,020 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:38:26,022 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:38:26,024 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:38:26,025 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:38:26,026 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:38:26,026 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:38:26,027 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:38:26,027 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:38:26,027 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:38:26,028 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:38:26,028 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:38:26,029 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:38:26,030 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:38:26,031 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:38:26,031 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:38:26,033 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:38:26,034 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:38:26,034 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:38:26,035 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:38:26,041 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:38:26,043 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:38:26,045 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:38:26,047 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:38:26,051 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:38:26,052 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:38:26,054 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:38:26,056 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:38:26,058 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:38:26,059 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:38:26,059 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:38:26,060 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:38:26,061 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:38:26,070 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:38:26,071 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:38:26,072 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:38:26,073 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:38:26,073 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:38:26,074 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:38:26,075 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:38:26,075 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:38:26,077 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:38:26,084 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:38:26,087 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:38:26,088 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:38:26,099 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:38:26,100 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:38:26,101 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:38:26,101 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:38:26,101 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:38:26,102 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:38:26,104 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:38:26,104 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:38:26,105 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:38:26,106 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:38:26,106 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:38:26,106 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:38:26,107 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:38:26,107 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:38:26,108 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:38:26,108 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:38:26,109 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:38:26,109 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:38:26,112 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:38:26,113 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:38:26,114 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:38:26,114 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:38:26,115 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:38:26,115 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:38:26,115 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:38:26,116 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:38:26,116 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:38:26,116 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:38:26,116 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:38:26,117 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:38:26,117 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:38:26,117 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:38:26,118 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:38:26,119 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:38:26,119 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:38:26,120 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:38:26,125 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:38:26,125 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:38:26,125 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:38:26,125 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:38:26,126 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:38:26,126 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:38:26,126 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:38:26,127 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:38:26,131 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:38:26,131 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:38:26,131 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:38:26,132 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:38:26,133 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:38:26,134 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:38:26,134 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:38:26,135 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:38:26,135 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:38:26,135 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:38:26,135 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:38:26,136 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:38:26,136 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:38:26,136 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:38:26,137 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:38:26,137 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:38:26,137 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:38:26,137 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:38:26,138 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:38:26,138 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:38:26,138 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:38:26,139 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:38:26,139 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:38:26,139 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:38:26,139 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:38:26,140 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:38:26,140 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:38:26,140 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:38:26,141 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:38:26,141 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:38:26,141 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:38:26,141 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:38:26,142 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:38:26,142 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:38:26,143 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:38:26,149 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:38:26,158 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:39:36,236 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:39:51,816 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:39:51,830 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:39:51,834 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:39:51,836 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:39:51,853 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:39:51,854 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:39:51,856 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:39:51,856 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:39:51,857 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:39:51,858 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:39:51,896 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:39:51,896 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:39:51,901 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:39:51,918 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:39:51,938 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:39:51,962 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:51,964 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:51,967 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:51,971 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:51,974 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:39:51,977 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:39:51,979 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:39:51,979 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:39:51,980 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:39:51,981 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:39:51,981 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:39:51,982 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:39:51,982 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:39:51,983 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:39:51,983 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:39:51,983 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:39:51,984 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:39:51,985 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:39:51,985 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:39:51,986 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:39:51,987 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:39:51,987 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:39:51,988 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:39:51,988 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:39:51,995 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:39:51,997 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:39:51,999 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:39:52,002 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:39:52,004 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:39:52,005 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:39:52,006 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:39:52,007 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:39:52,008 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:39:52,010 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:39:52,011 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:39:52,015 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:39:52,017 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:39:52,025 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:39:52,027 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:39:52,028 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:39:52,029 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:39:52,030 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:39:52,030 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:39:52,031 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:39:52,031 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:39:52,033 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:39:52,041 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:39:52,044 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:52,044 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:39:52,059 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:39:52,059 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:39:52,060 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:52,060 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:39:52,061 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:39:52,061 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:39:52,063 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:39:52,064 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:39:52,065 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:39:52,065 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:39:52,066 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:39:52,066 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:39:52,067 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:39:52,068 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:39:52,069 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:39:52,070 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:39:52,070 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:39:52,071 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:39:52,074 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:39:52,075 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:39:52,076 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:39:52,077 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:39:52,077 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:39:52,078 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:39:52,079 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:39:52,079 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:39:52,080 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:39:52,080 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:39:52,081 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:39:52,081 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:39:52,081 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:39:52,082 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:39:52,083 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:39:52,083 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:39:52,083 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:39:52,089 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:39:52,090 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:39:52,090 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:39:52,091 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:39:52,091 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:39:52,092 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:39:52,092 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:39:52,092 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:39:52,094 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:39:52,098 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:39:52,098 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:39:52,099 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:52,099 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:39:52,101 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:39:52,101 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:39:52,102 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:39:52,102 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:39:52,102 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:39:52,103 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:39:52,103 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:52,103 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:39:52,104 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:39:52,105 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:39:52,106 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:39:52,106 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:39:52,106 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:39:52,107 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:39:52,107 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:39:52,107 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:39:52,108 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:39:52,108 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:39:52,108 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:39:52,108 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:52,109 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:39:52,109 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:39:52,110 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:39:52,110 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:39:52,110 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:39:52,110 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:39:52,111 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:39:52,111 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:39:52,111 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:39:52,111 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:39:52,113 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:39:52,118 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:39:52,127 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:39:54,083 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:39:54,097 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:39:54,101 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:39:54,102 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:39:54,117 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:39:54,120 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:39:54,122 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:39:54,123 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:39:54,123 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:39:54,124 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:39:54,169 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:39:54,170 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:39:54,174 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:39:54,190 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:39:54,216 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:39:54,240 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:54,241 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:54,245 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:54,248 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:39:54,251 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:39:54,253 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:39:54,255 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:39:54,256 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:39:54,256 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:39:54,257 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:39:54,258 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:39:54,258 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:39:54,259 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:39:54,260 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:39:54,260 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:39:54,260 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:39:54,261 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:39:54,262 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:39:54,262 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:39:54,262 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:39:54,264 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:39:54,264 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:39:54,265 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:39:54,265 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:39:54,271 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:39:54,272 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:39:54,274 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:39:54,280 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:39:54,287 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:39:54,289 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:39:54,290 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:39:54,292 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:39:54,293 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:39:54,298 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:39:54,299 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:39:54,302 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:39:54,302 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:39:54,312 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:39:54,314 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:39:54,317 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:39:54,317 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:39:54,318 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:39:54,319 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:39:54,321 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:39:54,321 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:39:54,323 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:39:54,332 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:39:54,333 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:54,334 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:39:54,348 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:39:54,348 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:39:54,349 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:54,349 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:39:54,349 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:39:54,350 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:39:54,351 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:39:54,352 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:39:54,353 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:39:54,353 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:39:54,354 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:39:54,354 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:39:54,355 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:39:54,355 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:39:54,356 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:39:54,358 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:39:54,358 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:39:54,359 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:39:54,361 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:39:54,365 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:39:54,366 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:39:54,367 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:39:54,367 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:39:54,375 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:39:54,375 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:39:54,376 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:39:54,377 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:39:54,377 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:39:54,378 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:39:54,378 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:39:54,378 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:39:54,379 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:39:54,379 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:39:54,379 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:39:54,380 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:39:54,383 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:39:54,384 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:39:54,385 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:39:54,385 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:39:54,385 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:39:54,386 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:39:54,386 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:39:54,386 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:39:54,388 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:39:54,391 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:39:54,392 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:39:54,392 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:54,392 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:39:54,394 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:39:54,394 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:39:54,395 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:39:54,395 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:39:54,395 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:39:54,396 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:39:54,396 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:54,396 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:39:54,396 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:39:54,398 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:39:54,398 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:39:54,398 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:39:54,399 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:39:54,399 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:39:54,399 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:39:54,399 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:39:54,400 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:39:54,400 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:39:54,400 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:39:54,401 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:39:54,401 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:39:54,401 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:39:54,401 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:39:54,402 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:39:54,402 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:39:54,402 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:39:54,402 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:39:54,403 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:39:54,403 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:39:54,403 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:39:54,404 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:39:54,410 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:39:54,418 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:40:05,030 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 11:40:05,058 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 11:40:05,062 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 11:40:05,063 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 11:40:05,081 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 11:40:05,081 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 11:40:05,083 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 11:40:05,084 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 11:40:05,085 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 11:40:05,085 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 11:40:05,127 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 11:40:05,128 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 11:40:05,132 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 11:40:05,145 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 11:40:05,168 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 11:40:05,190 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:40:05,192 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:40:05,195 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:40:05,198 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 11:40:05,201 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 11:40:05,203 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 11:40:05,205 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 11:40:05,205 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 11:40:05,206 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 11:40:05,206 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 11:40:05,207 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 11:40:05,207 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:40:05,207 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:40:05,208 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 11:40:05,208 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 11:40:05,208 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 11:40:05,209 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 11:40:05,211 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 11:40:05,213 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 11:40:05,215 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 11:40:05,217 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 11:40:05,218 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 11:40:05,219 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 11:40:05,220 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 11:40:05,228 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:40:05,230 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 11:40:05,233 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 11:40:05,236 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 11:40:05,239 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 11:40:05,240 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 11:40:05,242 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 11:40:05,244 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 11:40:05,245 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 11:40:05,246 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 11:40:05,247 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 11:40:05,248 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 11:40:05,248 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 11:40:05,256 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 11:40:05,258 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 11:40:05,259 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 11:40:05,260 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 11:40:05,260 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 11:40:05,261 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 11:40:05,262 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 11:40:05,263 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 11:40:05,264 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 11:40:05,272 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 11:40:05,276 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:40:05,278 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 11:40:05,291 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 11:40:05,292 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:40:05,292 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:40:05,293 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 11:40:05,293 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 11:40:05,294 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 11:40:05,295 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 11:40:05,296 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 11:40:05,297 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:40:05,298 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:40:05,298 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:40:05,298 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:40:05,299 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 11:40:05,300 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 11:40:05,301 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 11:40:05,301 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 11:40:05,302 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 11:40:05,302 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 11:40:05,304 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 11:40:05,306 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 11:40:05,307 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 11:40:05,307 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 11:40:05,308 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 11:40:05,310 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 11:40:05,311 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 11:40:05,311 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 11:40:05,312 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 11:40:05,313 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 11:40:05,313 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 11:40:05,314 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 11:40:05,314 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 11:40:05,315 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 11:40:05,315 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 11:40:05,315 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 11:40:05,316 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 11:40:05,320 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 11:40:05,321 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 11:40:05,321 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 11:40:05,322 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 11:40:05,322 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 11:40:05,322 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 11:40:05,323 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 11:40:05,323 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 11:40:05,324 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 11:40:05,327 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 11:40:05,328 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 11:40:05,328 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:40:05,328 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 11:40:05,330 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 11:40:05,330 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 11:40:05,331 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 11:40:05,331 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 11:40:05,331 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 11:40:05,332 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 11:40:05,332 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:40:05,332 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 11:40:05,332 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 11:40:05,333 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 11:40:05,333 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 11:40:05,333 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 11:40:05,334 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 11:40:05,334 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 11:40:05,334 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 11:40:05,334 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 11:40:05,335 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 11:40:05,336 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 11:40:05,336 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:40:05,336 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 11:40:05,337 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 11:40:05,337 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 11:40:05,337 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 11:40:05,338 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 11:40:05,338 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 11:40:05,338 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 11:40:05,339 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 11:40:05,339 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 11:40:05,339 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 11:40:05,339 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 11:40:05,340 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 11:40:05,345 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 11:40:05,353 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 11:40:13,967 线程ID:[10] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 12:30:59,576 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 12:33:32,034 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 12:33:32,049 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 12:33:32,052 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 12:33:32,053 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 12:33:32,066 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 12:33:32,066 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 12:33:32,068 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 12:33:32,068 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 12:33:32,068 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 12:33:32,069 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 12:33:32,079 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 12:33:32,079 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 12:33:32,082 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 12:33:32,095 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 12:33:32,126 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 12:33:32,150 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 12:33:32,152 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 12:33:32,156 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 12:33:32,160 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 12:33:32,162 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 12:33:32,166 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 12:33:32,174 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 12:33:32,187 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 12:33:32,210 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 12:33:32,227 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 12:33:32,230 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 12:33:32,231 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 12:33:32,232 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 12:33:32,232 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 12:33:32,233 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 12:33:32,233 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 12:33:32,234 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 12:33:32,235 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 12:33:32,235 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 12:33:32,236 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 12:33:32,238 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 12:33:32,240 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 12:33:32,240 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 12:33:32,241 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 12:33:32,254 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 12:33:32,268 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 12:33:32,270 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 12:33:32,276 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 12:33:32,282 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 12:33:32,283 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 12:33:32,284 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 12:33:32,285 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 12:33:32,287 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 12:33:32,288 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 12:33:32,289 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 12:33:32,291 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 12:33:32,291 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 12:33:32,300 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 12:33:32,302 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 12:33:32,302 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 12:33:32,303 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 12:33:32,303 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 12:33:32,304 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 12:33:32,308 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 12:33:32,308 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 12:33:32,310 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 12:33:32,318 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 12:33:32,320 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 12:33:32,320 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 12:33:32,332 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 12:33:32,332 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 12:33:32,333 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 12:33:32,333 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 12:33:32,334 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 12:33:32,334 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 12:33:32,336 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 12:33:32,336 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 12:33:32,338 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 12:33:32,341 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 12:33:32,342 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 12:33:32,342 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 12:33:32,343 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 12:33:32,343 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 12:33:32,345 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 12:33:32,346 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 12:33:32,347 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 12:33:32,348 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 12:33:32,352 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 12:33:32,354 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 12:33:32,355 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 12:33:32,355 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 12:33:32,356 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 12:33:32,356 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 12:33:32,357 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 12:33:32,357 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 12:33:32,358 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 12:33:32,358 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 12:33:32,359 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 12:33:32,359 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 12:33:32,359 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 12:33:32,360 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 12:33:32,361 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 12:33:32,361 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 12:33:32,362 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3DD54CE'
2017-10-10 12:33:32,362 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 12:33:32,363 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 12:33:32,364 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 12:33:32,364 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 12:33:32,365 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 12:33:32,365 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 12:33:32,365 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 12:33:32,367 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 12:33:32,369 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 12:33:32,371 线程ID:[6] 日志级别：DEBUG 描述：Initialization module end.
2017-10-10 12:33:32,372 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 12:33:32,372 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 12:33:32,373 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 12:33:32,373 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 12:33:32,374 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 12:33:32,374 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 12:33:32,375 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 12:33:32,380 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 12:33:32,381 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 12:33:32,381 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 12:33:32,382 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 12:33:32,382 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 12:33:32,382 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 12:33:32,384 线程ID:[6] 日志级别：DEBUG 描述：Pre load program has been completed.
2017-10-10 12:33:32,384 线程ID:[6] 日志级别：INFO  描述：Platform loaded
2017-10-10 12:33:32,385 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动结束
2017-10-10 12:34:09,515 线程ID:[11] 日志级别：ERROR 描述：服务启动异常
System.InvalidOperationException: 无法启动计算机“.”上的服务 WpfAddinApp。 ---> System.ComponentModel.Win32Exception: 服务的实例已在运行中。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.ServiceProcess.ServiceController.Start(String[] args)
   在 System.ServiceProcess.ServiceController.Start()
   在 DS.AFP.WindowsService.App.ServiceManage.StartService(ServiceInfo serviceInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.WindowsService.App\ServiceManage.cs:行号 56
   在 DS.AFP.WindowsService.App.ServiceConsole.StartService() 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.WindowsService.App\SetupForm.cs:行号 436
2017-10-10 12:36:35,976 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 12:36:50,164 线程ID:[10] 日志级别：INFO  描述：服务“WpfAddinApp”停止开始
2017-10-10 12:36:50,166 线程ID:[10] 日志级别：INFO  描述：服务“WpfAddinApp”停止结束
2017-10-10 13:11:42,751 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 13:12:38,001 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 13:12:38,039 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 13:12:38,047 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 13:12:38,048 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 13:12:38,073 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 13:12:38,077 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 13:12:38,080 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 13:12:38,082 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 13:12:38,083 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 13:12:38,083 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 13:12:38,089 线程ID:[11] 日志级别：ERROR 描述：服务启动异常
System.InvalidOperationException: 无法启动计算机“.”上的服务 WpfAddinApp。 ---> System.ComponentModel.Win32Exception: 服务的实例已在运行中。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.ServiceProcess.ServiceController.Start(String[] args)
   在 System.ServiceProcess.ServiceController.Start()
   在 DS.AFP.WindowsService.App.ServiceManage.StartService(ServiceInfo serviceInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.WindowsService.App\ServiceManage.cs:行号 56
   在 DS.AFP.WindowsService.App.ServiceConsole.StartService() 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.WindowsService.App\SetupForm.cs:行号 436
2017-10-10 13:12:38,191 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 13:12:38,248 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:12:38,252 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:12:38,258 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:12:38,268 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:12:38,271 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 13:12:38,275 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 13:12:38,277 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 13:12:38,278 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 13:12:38,279 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 13:12:38,280 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 13:12:38,280 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 13:12:38,281 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 13:12:38,281 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 13:12:38,282 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 13:12:38,282 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 13:12:38,282 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 13:12:38,283 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 13:12:38,284 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 13:12:38,284 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 13:12:38,285 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 13:12:38,287 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 13:12:38,287 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 13:12:38,288 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 13:12:38,289 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 13:12:38,299 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 13:12:38,300 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 13:12:38,302 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 13:12:38,305 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 13:12:38,307 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 13:12:38,308 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 13:12:38,311 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 13:12:38,313 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 13:12:38,314 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 13:12:38,315 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 13:12:38,316 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 13:12:38,317 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 13:12:38,318 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 13:12:38,327 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 13:12:38,330 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 13:12:38,331 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 13:12:38,332 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 13:12:38,333 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 13:12:38,333 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 13:12:38,334 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 13:12:38,337 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 13:12:38,339 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 13:12:38,349 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 13:12:38,354 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:12:38,357 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 13:12:38,387 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 13:12:38,387 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 13:12:38,388 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:12:38,388 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 13:12:38,389 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 13:12:38,389 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 13:12:38,391 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 13:12:38,392 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 13:12:38,393 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 13:12:38,393 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 13:12:38,394 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 13:12:38,394 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 13:12:38,395 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 13:12:38,395 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 13:12:38,396 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 13:12:38,397 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 13:12:38,398 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 13:12:38,399 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 13:12:38,401 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 13:12:38,403 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 13:12:38,404 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 13:12:38,404 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 13:12:38,405 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 13:12:38,405 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 13:12:38,406 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 13:12:38,406 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 13:12:38,406 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 13:12:38,407 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 13:12:38,407 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 13:12:38,407 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 13:12:38,408 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 13:12:38,409 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 13:12:38,410 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 13:12:38,410 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 13:12:38,410 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3DD54CE'
2017-10-10 13:12:38,411 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 13:12:38,412 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 13:12:38,412 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 13:12:38,412 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 13:12:38,413 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 13:12:38,414 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 13:12:38,415 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 13:12:38,415 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 13:12:38,417 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 13:12:38,419 线程ID:[6] 日志级别：DEBUG 描述：Initialization module end.
2017-10-10 13:12:38,420 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 13:12:38,420 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 13:12:38,420 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:12:38,421 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 13:12:38,421 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 13:12:38,421 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 13:12:38,426 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 13:12:38,426 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 13:12:38,427 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 13:12:38,427 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 13:12:38,428 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 13:12:38,428 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 13:12:38,428 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 13:12:38,429 线程ID:[6] 日志级别：DEBUG 描述：Pre load program has been completed.
2017-10-10 13:12:38,430 线程ID:[6] 日志级别：INFO  描述：Platform loaded
2017-10-10 13:12:38,430 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动结束
2017-10-10 13:17:40,712 线程ID:[18] 日志级别：INFO  描述：服务“WpfAddinApp”停止开始
2017-10-10 13:17:40,713 线程ID:[18] 日志级别：INFO  描述：服务“WpfAddinApp”停止结束
2017-10-10 13:17:43,076 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 13:17:43,093 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 13:17:43,097 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 13:17:43,097 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 13:17:43,112 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 13:17:43,113 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 13:17:43,114 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 13:17:43,115 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 13:17:43,115 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 13:17:43,118 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 13:17:43,129 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 13:17:43,130 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 13:17:43,135 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 13:17:43,149 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 13:17:43,181 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 13:17:43,207 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:17:43,209 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:17:43,212 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:17:43,215 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 13:17:43,218 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 13:17:43,221 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 13:17:43,222 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 13:17:43,223 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 13:17:43,223 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 13:17:43,224 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 13:17:43,224 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 13:17:43,224 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 13:17:43,225 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 13:17:43,225 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 13:17:43,225 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 13:17:43,226 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 13:17:43,228 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 13:17:43,228 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 13:17:43,229 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 13:17:43,229 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 13:17:43,231 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 13:17:43,231 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 13:17:43,231 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 13:17:43,232 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 13:17:43,237 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 13:17:43,238 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 13:17:43,240 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 13:17:43,243 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 13:17:43,244 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 13:17:43,245 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 13:17:43,246 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 13:17:43,247 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 13:17:43,248 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 13:17:43,249 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 13:17:43,250 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 13:17:43,250 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 13:17:43,251 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 13:17:43,258 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 13:17:43,260 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 13:17:43,260 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 13:17:43,261 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 13:17:43,261 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 13:17:43,262 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 13:17:43,262 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 13:17:43,262 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 13:17:43,264 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 13:17:43,271 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 13:17:43,272 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:17:43,273 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 13:17:43,286 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 13:17:43,286 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 13:17:43,287 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:17:43,287 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 13:17:43,289 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 13:17:43,290 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 13:17:43,293 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 13:17:43,294 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 13:17:43,296 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 13:17:43,296 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 13:17:43,297 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 13:17:43,297 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 13:17:43,298 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 13:17:43,298 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 13:17:43,299 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 13:17:43,300 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 13:17:43,300 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 13:17:43,301 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 13:17:43,304 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 13:17:43,307 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 13:17:43,308 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 13:17:43,308 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 13:17:43,309 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 13:17:43,310 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 13:17:43,310 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 13:17:43,310 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 13:17:43,311 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 13:17:43,311 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 13:17:43,311 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 13:17:43,312 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 13:17:43,312 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 13:17:43,313 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 13:17:43,313 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 13:17:43,314 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 13:17:43,314 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3DD54CE'
2017-10-10 13:17:43,314 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 13:17:43,315 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 13:17:43,315 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 13:17:43,316 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 13:17:43,316 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 13:17:43,317 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 13:17:43,317 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 13:17:43,318 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 13:17:43,319 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 13:17:43,322 线程ID:[6] 日志级别：DEBUG 描述：Initialization module end.
2017-10-10 13:17:43,323 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 13:17:43,324 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 13:17:43,324 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 13:17:43,325 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 13:17:43,325 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 13:17:43,326 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 13:17:43,327 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 13:17:43,332 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 13:17:43,332 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 13:17:43,333 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 13:17:43,333 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 13:17:43,333 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 13:17:43,334 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 13:17:43,335 线程ID:[6] 日志级别：DEBUG 描述：Pre load program has been completed.
2017-10-10 13:17:43,336 线程ID:[6] 日志级别：INFO  描述：Platform loaded
2017-10-10 13:17:43,337 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动结束
2017-10-10 15:08:39,598 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 15:10:17,909 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 15:10:17,929 线程ID:[10] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 15:10:17,998 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 15:10:18,076 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 15:10:18,077 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 15:10:18,150 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 15:10:18,173 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 15:10:18,180 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 15:10:18,182 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 15:10:18,184 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 15:10:18,184 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 15:10:18,631 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 15:10:18,632 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 15:10:18,724 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 15:10:18,786 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 15:10:18,873 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 15:10:18,949 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:18,953 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:18,984 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:18,998 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:19,000 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 15:10:19,003 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 15:10:19,004 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 15:10:19,004 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 15:10:19,005 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 15:10:19,005 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 15:10:19,006 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 15:10:19,006 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 15:10:19,007 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 15:10:19,007 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 15:10:19,008 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 15:10:19,009 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 15:10:19,010 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 15:10:19,010 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 15:10:19,011 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 15:10:19,012 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 15:10:19,013 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 15:10:19,013 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 15:10:19,014 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 15:10:19,014 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 15:10:19,020 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 15:10:19,021 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 15:10:19,031 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 15:10:19,034 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 15:10:19,036 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 15:10:19,036 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 15:10:19,037 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 15:10:19,038 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 15:10:19,039 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 15:10:19,040 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 15:10:19,041 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 15:10:19,042 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 15:10:19,043 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 15:10:19,080 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 15:10:19,081 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 15:10:19,082 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 15:10:19,082 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 15:10:19,083 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 15:10:19,083 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 15:10:19,084 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 15:10:19,084 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 15:10:19,086 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 15:10:19,092 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 15:10:19,094 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:19,095 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 15:10:19,106 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 15:10:19,107 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 15:10:19,107 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:19,108 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 15:10:19,108 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 15:10:19,108 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 15:10:19,110 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 15:10:19,110 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 15:10:19,112 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 15:10:19,112 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 15:10:19,112 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 15:10:19,113 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 15:10:19,113 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 15:10:19,114 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 15:10:19,115 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 15:10:19,115 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 15:10:19,116 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 15:10:19,117 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 15:10:19,120 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 15:10:19,122 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 15:10:19,123 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 15:10:19,123 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 15:10:19,124 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 15:10:19,124 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 15:10:19,125 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 15:10:19,125 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 15:10:19,125 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 15:10:19,125 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 15:10:19,126 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 15:10:19,126 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 15:10:19,126 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 15:10:19,127 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 15:10:19,127 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 15:10:19,128 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 15:10:19,128 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 15:10:19,132 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 15:10:19,133 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 15:10:19,133 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 15:10:19,134 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 15:10:19,135 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 15:10:19,135 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 15:10:19,136 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 15:10:19,136 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 15:10:19,138 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 15:10:19,144 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 15:10:19,145 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 15:10:19,145 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:19,146 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 15:10:19,166 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 15:10:19,167 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 15:10:19,168 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 15:10:19,168 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 15:10:19,168 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 15:10:19,169 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 15:10:19,169 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:19,170 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 15:10:19,170 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 15:10:19,170 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 15:10:19,171 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 15:10:19,171 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 15:10:19,171 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 15:10:19,172 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 15:10:19,172 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 15:10:19,172 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 15:10:19,172 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 15:10:19,173 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 15:10:19,173 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 15:10:19,173 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:19,174 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 15:10:19,174 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 15:10:19,174 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 15:10:19,174 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 15:10:19,175 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 15:10:19,175 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 15:10:19,175 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 15:10:19,175 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 15:10:19,176 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 15:10:19,176 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 15:10:19,177 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 15:10:19,184 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 15:10:19,634 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
2017-10-10 15:10:43,418 线程ID:[1] 日志级别：DEBUG 描述：WpfAddinApp 服务已经创建并开始Run，该服务路径：D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe
2017-10-10 15:10:43,434 线程ID:[9] 日志级别：ERROR 描述：WpfAddinApp服务启动异常
2017-10-10 15:10:43,443 线程ID:[6] 日志级别：INFO  描述：服务“WpfAddinApp”启动开始
2017-10-10 15:10:43,446 线程ID:[6] 日志级别：INFO  描述：----------------------------------------------------------------------------
2017-10-10 15:10:43,447 线程ID:[6] 日志级别：INFO  描述：Platform began to load and initialize each plug-in
2017-10-10 15:10:43,462 线程ID:[6] 日志级别：DEBUG 描述：Log creation success.
2017-10-10 15:10:43,470 线程ID:[6] 日志级别：DEBUG 描述：Create the module directory to start.
2017-10-10 15:10:43,486 线程ID:[6] 日志级别：DEBUG 描述：Create module directory end.
2017-10-10 15:10:43,487 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory.
2017-10-10 15:10:43,487 线程ID:[6] 日志级别：DEBUG 描述：Configuration module directory end.
2017-10-10 15:10:43,489 线程ID:[6] 日志级别：DEBUG 描述：Pre initialization module.
2017-10-10 15:10:43,550 线程ID:[6] 日志级别：DEBUG 描述：End of pre initialization module.
2017-10-10 15:10:43,551 线程ID:[6] 日志级别：DEBUG 描述：Create the Spring container to start.
2017-10-10 15:10:43,559 线程ID:[6] 日志级别：DEBUG 描述：creating context 'spring.root'
2017-10-10 15:10:43,575 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Refreshing object factory 
2017-10-10 15:10:43,596 线程ID:[6] 日志级别：DEBUG 描述：Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WindowsService.App.exe.Config#spring/objects]
2017-10-10 15:10:43,622 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:43,624 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:43,629 线程ID:[6] 日志级别：TRACE 描述：instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:43,634 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]
2017-10-10 15:10:43,638 线程ID:[6] 日志级别：DEBUG 描述：Using the following XmlReader implementation : System.Xml.XsdValidatingReader
2017-10-10 15:10:43,641 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions.
2017-10-10 15:10:43,644 线程ID:[6] 日志级别：DEBUG 描述：Loading object definitions...
2017-10-10 15:10:43,644 线程ID:[6] 日志级别：DEBUG 描述：Default lazy init ''.
2017-10-10 15:10:43,645 线程ID:[6] 日志级别：DEBUG 描述：Default dependency check ''.
2017-10-10 15:10:43,646 线程ID:[6] 日志级别：DEBUG 描述：Default autowire ''.
2017-10-10 15:10:43,646 线程ID:[6] 日志级别：DEBUG 描述：Default merge ''.
2017-10-10 15:10:43,647 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 15:10:43,650 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 15:10:43,652 线程ID:[6] 日志级别：DEBUG 描述：Default autowire candidates ''.
2017-10-10 15:10:43,654 线程ID:[6] 日志级别：DEBUG 描述：Default init method ''.
2017-10-10 15:10:43,654 线程ID:[6] 日志级别：DEBUG 描述：Default destroy method ''.
2017-10-10 15:10:43,655 线程ID:[6] 日志级别：DEBUG 描述：Found 0 <object> elements defining objects.
2017-10-10 15:10:43,656 线程ID:[6] 日志级别：DEBUG 描述：Loaded 0 object definitions from location [config://spring/objects]
2017-10-10 15:10:43,657 线程ID:[6] 日志级别：DEBUG 描述：Refreshed ObjectFactory for application context 'spring.root'.
2017-10-10 15:10:43,657 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Registering well-known processors and objects
2017-10-10 15:10:43,659 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Custom post processing object factory
2017-10-10 15:10:43,660 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using pre-registered processors
2017-10-10 15:10:43,660 线程ID:[6] 日志级别：DEBUG 描述：No objects defined in application context [spring.root].
2017-10-10 15:10:43,660 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Post processing object factory using defined processors
2017-10-10 15:10:43,668 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].
2017-10-10 15:10:43,670 线程ID:[6] 日志级别：DEBUG 描述：processed 0 IObjectPostProcessors defined in application context [spring.root].
2017-10-10 15:10:43,672 线程ID:[6] 日志级别：DEBUG 描述：No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.
2017-10-10 15:10:43,676 线程ID:[6] 日志级别：DEBUG 描述：No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.
2017-10-10 15:10:43,683 线程ID:[6] 日志级别：DEBUG 描述：ApplicationContext Refresh: Preinstantiating singletons
2017-10-10 15:10:43,684 线程ID:[6] 日志级别：DEBUG 描述：Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]
2017-10-10 15:10:43,686 线程ID:[6] 日志级别：DEBUG 描述：Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]
2017-10-10 15:10:43,687 线程ID:[6] 日志级别：INFO  描述：ApplicationContext Refresh: Completed
2017-10-10 15:10:43,688 线程ID:[6] 日志级别：DEBUG 描述：Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.
2017-10-10 15:10:43,689 线程ID:[6] 日志级别：DEBUG 描述：context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root'
2017-10-10 15:10:43,689 线程ID:[6] 日志级别：DEBUG 描述：Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.
2017-10-10 15:10:43,690 线程ID:[6] 日志级别：DEBUG 描述：Create Spring container end.
2017-10-10 15:10:43,691 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container to start.
2017-10-10 15:10:43,700 线程ID:[6] 日志级别：DEBUG 描述：Configure the container to start running.
2017-10-10 15:10:43,702 线程ID:[6] 日志级别：DEBUG 描述：Configuration container end run.
2017-10-10 15:10:43,702 线程ID:[6] 日志级别：DEBUG 描述：Configure Spring container end.
2017-10-10 15:10:43,703 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service loader to start.
2017-10-10 15:10:43,703 线程ID:[6] 日志级别：DEBUG 描述：The allocation of the singleton service end loader.
2017-10-10 15:10:43,704 线程ID:[6] 日志级别：DEBUG 描述：Register frame exception type start.
2017-10-10 15:10:43,705 线程ID:[6] 日志级别：DEBUG 描述：The end of the abnormal type of registration framework.
2017-10-10 15:10:43,705 线程ID:[6] 日志级别：DEBUG 描述：Initialization module.
2017-10-10 15:10:43,707 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager
2017-10-10 15:10:43,716 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleManager'
2017-10-10 15:10:43,718 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:43,719 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.
2017-10-10 15:10:43,730 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer
2017-10-10 15:10:43,730 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IModuleInitializer'
2017-10-10 15:10:43,731 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:43,732 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.
2017-10-10 15:10:43,732 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator
2017-10-10 15:10:43,732 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IServiceLocator'.
2017-10-10 15:10:43,734 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IServiceLocator'.
2017-10-10 15:10:43,734 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname IServiceLocator
2017-10-10 15:10:43,736 线程ID:[6] 日志级别：DEBUG 描述：         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 15:10:43,736 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 15:10:43,736 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 15:10:43,736 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 15:10:43,737 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator'
2017-10-10 15:10:43,737 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade'
2017-10-10 15:10:43,738 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]
2017-10-10 15:10:43,739 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].
2017-10-10 15:10:43,739 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references
2017-10-10 15:10:43,740 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleInitializer'
2017-10-10 15:10:43,744 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer'
2017-10-10 15:10:43,748 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer'
2017-10-10 15:10:43,749 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleInitializer'
2017-10-10 15:10:43,749 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleInitializer'.
2017-10-10 15:10:43,751 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleInitializer
2017-10-10 15:10:43,751 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog
2017-10-10 15:10:43,752 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IModuleCatalog'.
2017-10-10 15:10:43,752 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleCatalog'.
2017-10-10 15:10:43,753 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IModuleCatalog
2017-10-10 15:10:43,754 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade
2017-10-10 15:10:43,754 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'ILoggerFacade'.
2017-10-10 15:10:43,754 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoggerFacade'.
2017-10-10 15:10:43,755 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoggerFacade
2017-10-10 15:10:43,755 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer'
2017-10-10 15:10:43,756 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog'
2017-10-10 15:10:43,756 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade'
2017-10-10 15:10:43,756 线程ID:[6] 日志级别：DEBUG 描述：Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1205DF3'
2017-10-10 15:10:43,761 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]
2017-10-10 15:10:43,762 线程ID:[6] 日志级别：DEBUG 描述：Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].
2017-10-10 15:10:43,763 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IModuleManager' to allow for resolving potential circular references
2017-10-10 15:10:43,763 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IModuleManager'
2017-10-10 15:10:43,764 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IModuleManager'
2017-10-10 15:10:43,764 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IModuleManager'
2017-10-10 15:10:43,764 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IModuleManager'
2017-10-10 15:10:43,765 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IModuleManager'.
2017-10-10 15:10:43,766 线程ID:[6] 日志级别：DEBUG 描述：GetObjectInternal: returning instance for objectname IModuleManager
2017-10-10 15:10:43,771 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule
2017-10-10 15:10:43,771 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'WpfAddinAppModule'
2017-10-10 15:10:43,772 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:43,772 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.
2017-10-10 15:10:43,774 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection
2017-10-10 15:10:43,775 线程ID:[6] 日志级别：DEBUG 描述：Returning cached instance of singleton object 'IDsConfigurationSection'.
2017-10-10 15:10:43,775 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsConfigurationSection'.
2017-10-10 15:10:43,776 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsConfigurationSection
2017-10-10 15:10:43,776 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage
2017-10-10 15:10:43,777 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'ILoadingManage'
2017-10-10 15:10:43,777 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:43,777 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.
2017-10-10 15:10:43,778 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]
2017-10-10 15:10:43,778 线程ID:[6] 日志级别：DEBUG 描述：Object 'ILoadingManage' instantiated via constructor [Void .ctor()].
2017-10-10 15:10:43,779 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references
2017-10-10 15:10:43,779 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'ILoadingManage'
2017-10-10 15:10:43,779 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'ILoadingManage'
2017-10-10 15:10:43,780 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'ILoadingManage'
2017-10-10 15:10:43,780 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'ILoadingManage'
2017-10-10 15:10:43,780 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'ILoadingManage'.
2017-10-10 15:10:43,781 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname ILoadingManage
2017-10-10 15:10:43,782 线程ID:[6] 日志级别：DEBUG 描述：      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment
2017-10-10 15:10:43,782 线程ID:[6] 日志级别：DEBUG 描述：Creating shared instance of singleton object 'IDsEnvironment'
2017-10-10 15:10:43,782 线程ID:[6] 日志级别：DEBUG 描述：Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].
2017-10-10 15:10:43,783 线程ID:[6] 日志级别：DEBUG 描述：Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.
2017-10-10 15:10:43,784 线程ID:[6] 日志级别：TRACE 描述：instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]
2017-10-10 15:10:43,784 线程ID:[6] 日志级别：DEBUG 描述：Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].
2017-10-10 15:10:43,784 线程ID:[6] 日志级别：DEBUG 描述：Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references
2017-10-10 15:10:43,785 线程ID:[6] 日志级别：DEBUG 描述：Configuring object using definition 'IDsEnvironment'
2017-10-10 15:10:43,785 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment'
2017-10-10 15:10:43,785 线程ID:[6] 日志级别：DEBUG 描述：Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment'
2017-10-10 15:10:43,786 线程ID:[6] 日志级别：DEBUG 描述：Cached shared instance of singleton object 'IDsEnvironment'
2017-10-10 15:10:43,786 线程ID:[6] 日志级别：DEBUG 描述：Calling code asked for normal instance for name 'IDsEnvironment'.
2017-10-10 15:10:43,786 线程ID:[6] 日志级别：DEBUG 描述：   GetObjectInternal: returning instance for objectname IDsEnvironment
2017-10-10 15:10:43,788 线程ID:[6] 日志级别：ERROR 描述：GetObjectInternal: error obtaining object WpfAddinAppModule
2017-10-10 15:10:43,795 线程ID:[6] 日志级别：ERROR 描述：Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly
Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
2017-10-10 15:10:43,804 线程ID:[6] 日志级别：ERROR 描述：DS.AFP.Framework.Modularity.ModuleNotFoundException: Error：Container noWpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null The type, may be due to the plug-in configuration is not correct, please note that the plug-in set the version number and the name of the assembly ---> Microsoft.Practices.ServiceLocation.ActivationException: Activation error occured while trying to get instance of type WpfAddinAppModule, key "" ---> Spring.Objects.Factory.UnsatisfiedDependencyException: Error creating object with name 'WpfAddinAppModule' : Unsatisfied dependency expressed through constructor argument with index 4 of type [DS.AFP.Framework.Regions.IRegionManager] : No unique object of type [DS.AFP.Framework.Regions.IRegionManager] is defined : Unsatisfied dependency of type [DS.AFP.Framework.Regions.IRegionManager]: expected at least 1 matching object to wire the [regionManager] parameter on the constructor of object [WpfAddinAppModule]
   在 Spring.Objects.Factory.Support.ConstructorResolver.GetConstructorInstantiationInfo(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.ConstructorResolver.AutowireConstructor(String objectName, RootObjectDefinition rod, ConstructorInfo[] chosenCtors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.AutowireConstructor(String name, RootObjectDefinition definition, ConstructorInfo[] ctors, Object[] explicitArgs)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.CreateObjectInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory.InstantiateObject(String name, RootObjectDefinition definition, Object[] arguments, Boolean allowEagerCaching, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.CreateAndCacheSingletonInstance(String objectName, RootObjectDefinition objectDefinition, Object[] arguments)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObjectInternal(String name, Type requiredType, Object[] arguments, Boolean suppressConfigure)
   在 Spring.Objects.Factory.Support.AbstractObjectFactory.GetObject(String name)
   在 Spring.Context.Support.AbstractApplicationContext.GetObject(String name)
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.TryResolve(Type type, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 57
   在 DS.AFP.Framework.SpringServiceLocatorAdapter.DoGetInstance(Type serviceType, String key) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.Spring\Container\SpringServiceLocatorAdapter.cs:行号 33
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType, String key)
   在 Microsoft.Practices.ServiceLocation.ServiceLocatorImplBase.GetInstance(Type serviceType)
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 143
   --- 内部异常堆栈跟踪的结尾 ---
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(String typeName) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 150
   在 DS.AFP.Framework.Modularity.ModuleInitializer.CreateModule(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 126
   在 DS.AFP.Framework.Modularity.ModuleInitializer.Initialize(ModuleInfo moduleInfo) 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework\Modularity\ModuleInitializer.cs:行号 65
