2017-09-25 20:22:30,802 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:22:30,914 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:22:30,923 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:22:30,923 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:22:30,925 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:22:30,925 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:22:30,926 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:22:30,926 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:22:36,765 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:22:36,765 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:22:36,829 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:22:36,909 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:22:36,935 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:22:36,966 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:22:36,996 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:22:37,012 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:22:37,110 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:22:37,112 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:22:37,115 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:22:37,121 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:22:37,122 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:22:37,122 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:22:37,123 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:22:37,123 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:22:37,123 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:37,124 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:37,124 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:22:37,124 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:37,125 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:37,126 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:22:37,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:22:37,127 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:22:37,128 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:22:37,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:22:37,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:22:37,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:22:37,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:22:37,139 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:22:37,140 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:22:37,143 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:22:37,146 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:22:37,148 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:22:37,148 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:22:37,150 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:22:37,153 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:22:37,154 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:22:37,155 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:22:37,155 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:22:37,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:22:37,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:22:37,174 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:22:37,192 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:22:37,192 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:22:37,193 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:22:37,193 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:22:37,193 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:22:37,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:37,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:22:37,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:22:37,211 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:22:37,212 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:22:37,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:22:37,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:22:37,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:22:37,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:22:37,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:37,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:37,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:22:37,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:22:37,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:22:37,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:22:37,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:22:37,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,229 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:22:37,230 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:22:37,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:22:37,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:22:37,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:22:37,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:22:37,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:22:37,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:22:37,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:22:37,233 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:22:37,233 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:22:37,233 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:22:37,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:22:37,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:22:37,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:22:37,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:22:37,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:22:37,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:22:37,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:22:37,236 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:22:37,237 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:22:37,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:22:37,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:22:37,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:22:37,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:22:37,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:22:37,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:22:37,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:22:37,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:22:37,240 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:22:37,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:22:37,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:22:37,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:22:37,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:22:37,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:22:37,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:22:37,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:22:37,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:22:37,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:22:37,244 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:22:37,244 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:22:37,244 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:22:37,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:22:37,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:22:37,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:22:37,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:22:37,245 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:22:37,246 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:22:37,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:22:37,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:22:37,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:22:37,247 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:22:37,247 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:22:37,248 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:22:37,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:22:37,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:22:37,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:22:37,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:22:37,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:22:37,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:22:37,262 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:22:37,263 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:22:37,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:22:37,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:22:37,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:22:37,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:22:37,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:22:37,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:22:37,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:22:37,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:22:37,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:22:37,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:22:37,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:22:37,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:22:37,265 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:22:37,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:22:37,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:22:37,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:37,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:22:37,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:37,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:37,389 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:22:37,389 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:22:37,390 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:22:37,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:22:37,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:22:37,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:22:37,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:37,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:22:37,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:37,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:37,435 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:22:37,436 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:22:37,436 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:22:37,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:22:37,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:22:37,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:22:37,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:37,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:22:37,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:37,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:37,449 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:22:37,450 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:22:37,450 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:22:37,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,452 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,452 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:22:37,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:22:37,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:22:37,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:37,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:22:37,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:37,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:37,463 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:22:37,464 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:22:37,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:22:37,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:37,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:22:37,708 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:22:37,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:22:37,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:22:37,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:22:37,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:22:37,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:22:37,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:22:37,716 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:22:37,717 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:22:37,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:22:37,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:22:37,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:22:37,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:22:37,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:22:37,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:22:37,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:22:37,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:22:37,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:37,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:22:37,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:22:37,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,768 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:22:37,768 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:22:37,769 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:22:37,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:22:37,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:22:37,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:22:37,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:22:37,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:22:37,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:37,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:37,771 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:22:37,771 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:22:37,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:22:37,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:22:37,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:22:37,777 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,777 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:22:37,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:22:37,781 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,781 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:22:37,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:22:37,784 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,784 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:22:37,787 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,788 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:22:37,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:22:37,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:37,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:22:37,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:37,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:37,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:22:37,795 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:22:37,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:22:37,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:22:37,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:22:37,798 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,798 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:22:37,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:22:37,800 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,800 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:22:37,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:22:37,802 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:22:37,805 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:22:37,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:22:37,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:37,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:22:37,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:37,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:37,813 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:22:37,813 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:22:37,813 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:22:37,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:22:37,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:22:37,817 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,817 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:22:37,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:22:37,821 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:22:37,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:22:37,825 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:22:37,828 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,828 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:22:37,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:22:37,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:37,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:22:37,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:37,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:37,834 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:22:37,834 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:22:37,835 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:22:37,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:37,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:22:37,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:22:37,842 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:37,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:37,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:22:37,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:22:37,846 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,847 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:37,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:22:37,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:22:37,850 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:37,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:22:37,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:22:37,855 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,855 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:37,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:22:37,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:22:37,860 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:22:37,865 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,866 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:22:37,870 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,870 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:22:37,874 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,875 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:22:37,878 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,878 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:22:37,887 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,887 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:22:37,889 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:22:37,891 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:37,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:37,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:22:37,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:37,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:22:37,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:22:37,893 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:22:37,894 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:22:37,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:22:37,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:22:37,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:22:37,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:22:37,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:37,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:37,895 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:22:37,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:22:37,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:22:37,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:22:37,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:22:37,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:22:37,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:22:37,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:37,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:37,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:37,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:37,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:37,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:37,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:37,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:37,899 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:22:37,899 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:22:37,900 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:22:37,900 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:22:37,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:22:37,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:37,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:37,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:37,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:37,903 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:22:37,903 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:22:37,904 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:22:37,904 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:22:37,904 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:22:37,904 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:22:37,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:22:37,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:22:37,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:22:37,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:22:37,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:22:37,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:22:37,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:22:37,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:22:37,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:22:37,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:22:37,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:22:37,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:22:37,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:22:37,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:22:37,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:22:37,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:22:37,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:22:37,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:22:37,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:22:37,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:22:37,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:37,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:22:37,927 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:22:37,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:37,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:22:37,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:22:37,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:22:37,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:22:37,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:22:37,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:22:37,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:22:37,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:37,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:37,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:37,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:37,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:22:37,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:22:37,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:22:37,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:22:37,933 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:22:37,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:22:37,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:22:37,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:22:37,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:22:37,960 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:22:37,992 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:22:37,994 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:22:37,994 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:22:37,995 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:22:37,995 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:22:37,996 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:22:37,996 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:22:37,996 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:22:37,997 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:22:37,997 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:22:37,997 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:37,997 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:37,998 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:22:37,998 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:37,998 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:37,998 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:22:37,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:22:38,000 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:22:38,000 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:22:38,001 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:22:38,001 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:22:38,001 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:22:38,002 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:22:38,002 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:22:38,002 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:22:38,002 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:22:38,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,011 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:22:38,011 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:22:38,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:22:38,012 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:22:38,012 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:22:38,012 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:22:38,013 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:22:38,013 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:22:38,013 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:22:38,015 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:22:38,015 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:22:38,016 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:22:38,016 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:22:38,017 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:22:38,017 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:22:38,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:22:38,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:22:38,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:22:38,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:22:38,019 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:22:38,019 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:38,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:22:38,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:22:38,031 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:22:38,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:22:38,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:22:38,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:22:38,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:22:38,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:22:38,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:22:38,068 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:22:38,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:38,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:38,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:38,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:38,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:38,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:38,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:22:38,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:22:38,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:22:38,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:22:38,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:22:38,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:22:38,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:22:38,081 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:22:38,081 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:22:38,081 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:22:38,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:22:38,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:22:38,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:22:38,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:22:38,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:22:38,210 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:22:38,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:22:38,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:22:38,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:22:38,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:22:38,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:22:38,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:22:38,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:22:38,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:22:38,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:22:38,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:38,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:22:38,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:22:38,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:22:38,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:22:38,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:22:38,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:22:38,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:22:38,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:38,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:22:38,219 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:22:38,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:38,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:22:38,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:22:38,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:22:38,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:22:38,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:22:38,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:22:38,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:22:38,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:22:38,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:22:38,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:22:38,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:22:38,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:22:38,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:22:38,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:22:38,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:22:38,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:38,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:38,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:38,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:38,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:38,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:38,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:38,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:38,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:22:38,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:22:38,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:22:38,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:22:38,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:22:38,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:22:38,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:22:38,228 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:22:38,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:22:38,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:22:38,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:22:38,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:22:38,232 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:22:38,243 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:22:38,243 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:22:38,244 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:22:38,244 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:22:38,244 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:22:38,245 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:22:38,245 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:22:38,245 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:22:38,245 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:22:38,246 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:22:38,246 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,246 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,246 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:22:38,247 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,247 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,247 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:22:38,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:22:38,249 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:22:38,249 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:22:38,249 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:22:38,250 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:22:38,250 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:22:38,250 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:22:38,250 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:22:38,251 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:22:38,251 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,251 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,251 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:22:38,252 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:22:38,252 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:22:38,283 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:22:38,284 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:22:38,284 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:22:38,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:22:38,285 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:22:38,285 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:22:38,285 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:22:38,286 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:22:38,286 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:22:38,286 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:22:38,288 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:22:38,289 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:22:38,289 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:22:38,290 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:22:38,291 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:22:38,291 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:22:38,292 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:22:38,292 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:22:38,292 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:22:38,293 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:22:38,293 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:22:38,407 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:22:41,695 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:22:41,716 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:22:41,732 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:22:41,733 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:22:41,734 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:22:41,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:22:41,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:22:41,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:22:41,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:22:41,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:22:41,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:22:41,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:22:41,769 INFO  [9] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,692,928.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:22:41,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:41,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:41,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:41,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:41,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:41,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:22:41,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:41,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:41,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:22:41,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:22:41,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:41,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:22:41,794 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:22:41,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:22:41,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:22:41,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:22:41,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:22:41,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:22:41,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:41,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:22:41,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:22:41,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:22:41,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:22:41,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:22:41,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:22:41,803 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:22:41,804 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:22:41,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:22:41,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:41,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:22:41,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:22:43,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:43,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:43,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:43,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:43,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:43,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:43,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:43,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:43,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:22:43,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:22:43,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:22:43,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:22:43,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:43,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:43,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:43,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:43,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:22:43,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:22:43,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:22:43,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:22:43,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:22:43,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:22:43,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:22:43,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:22:43,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:22:43,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:22:43,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:22:43,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:22:43,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:22:43,856 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:22:43,857 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:22:43,857 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:22:43,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:22:43,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:43,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:22:43,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:22:43,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:43,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:22:43,861 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:43,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:43,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:22:43,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:22:43,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:22:43,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:22:43,864 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:22:43,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:43,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:22:43,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:22:43,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:22:43,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:22:43,867 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,867 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:43,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:43,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:22:43,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:22:43,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:22:43,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:22:43,870 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,871 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:43,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:43,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:22:43,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:22:43,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:22:43,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:22:43,873 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,873 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:43,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:43,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:22:43,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:22:43,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:22:43,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:43,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:22:43,876 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:22:43,876 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:43,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:43,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:43,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:22:43,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:22:43,878 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:22:43,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:22:43,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:22:43,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:22:43,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:22:44,206 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:22:44,207 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:22:44,207 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:22:44,738 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:22:44,758 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:22:44,758 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:22:44,758 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:22:44,760 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:22:44,761 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:44,778 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:44,779 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:44,780 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:44,780 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:44,780 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:44,780 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:22:44,781 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:22:44,782 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:22:44,782 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:22:44,782 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:22:44,782 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:22:44,782 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:22:45,899 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:22:45,900 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:22:45,900 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:22:45,900 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:23:02,103 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:23:02,138 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:23:02,148 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:23:02,149 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:23:02,151 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:23:02,151 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:23:02,151 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:23:02,151 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:23:08,303 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:23:08,304 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:23:08,309 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:23:08,328 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:23:08,349 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:23:08,377 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:23:08,379 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:23:08,386 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:23:08,421 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:23:08,424 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:23:08,427 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:23:08,428 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:23:08,429 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:23:08,429 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:23:08,430 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:23:08,430 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:23:08,430 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,431 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,431 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:23:08,432 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,432 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,433 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:23:08,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:23:08,434 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:23:08,434 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:23:08,436 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:23:08,436 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:23:08,437 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:23:08,437 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:23:08,443 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:23:08,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:23:08,446 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:23:08,449 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:23:08,451 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:23:08,452 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:23:08,453 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:23:08,454 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:23:08,454 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:23:08,455 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:23:08,455 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:23:08,456 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:23:08,456 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:23:08,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:23:08,478 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:23:08,478 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:23:08,479 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:23:08,479 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:23:08,479 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:23:08,481 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:08,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:23:08,492 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:23:08,500 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:23:08,500 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:23:08,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:23:08,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:23:08,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:23:08,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:23:08,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:08,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:08,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:23:08,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:23:08,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:23:08,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:23:08,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:23:08,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,518 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:23:08,519 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:23:08,519 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:23:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:23:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:23:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:23:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:23:08,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:23:08,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:23:08,520 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:23:08,520 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:23:08,520 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:23:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:23:08,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:23:08,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:23:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:23:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:23:08,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:23:08,524 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:23:08,524 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:23:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:23:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:23:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:23:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:23:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:23:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:23:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:23:08,528 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:23:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:23:08,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:23:08,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:23:08,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:23:08,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:23:08,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:23:08,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:23:08,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:23:08,531 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:23:08,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:23:08,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:23:08,532 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:23:08,532 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:23:08,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:23:08,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:23:08,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:23:08,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:23:08,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:23:08,535 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:23:08,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:23:08,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:23:08,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:23:08,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:23:08,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:23:08,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:23:08,549 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:23:08,549 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:23:08,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:23:08,551 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:23:08,552 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:23:08,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:23:08,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:23:08,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:08,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:23:08,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:08,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:08,599 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:23:08,599 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:23:08,600 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:23:08,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:23:08,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:23:08,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:23:08,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:08,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:23:08,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:08,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:08,625 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:23:08,625 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:23:08,625 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:23:08,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:23:08,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:23:08,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:23:08,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:08,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:23:08,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:08,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:08,629 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:23:08,630 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:23:08,630 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:23:08,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:23:08,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:23:08,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:23:08,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:08,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:23:08,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:08,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:08,640 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:23:08,640 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:23:08,641 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:23:08,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:08,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:23:08,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:23:08,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:23:08,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:23:08,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:23:08,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:23:08,721 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:23:08,721 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:23:08,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:23:08,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:23:08,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:23:08,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:08,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:23:08,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:23:08,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,737 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:23:08,737 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:23:08,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:23:08,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:23:08,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:23:08,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:23:08,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:23:08,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:23:08,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:08,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:08,739 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:23:08,739 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:23:08,740 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:23:08,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:23:08,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:23:08,744 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,744 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:23:08,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:23:08,747 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,748 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:23:08,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:23:08,750 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,750 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:23:08,753 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,753 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:23:08,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:23:08,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:08,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:23:08,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:08,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:08,759 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:23:08,759 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:23:08,760 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:23:08,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:23:08,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:23:08,762 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,762 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:23:08,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:23:08,765 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,765 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:23:08,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:23:08,767 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:23:08,770 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,770 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:23:08,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:23:08,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:08,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:23:08,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:08,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:08,776 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:23:08,776 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:23:08,777 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:23:08,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:23:08,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:23:08,780 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,780 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:23:08,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:23:08,783 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:23:08,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:23:08,787 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,787 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:23:08,790 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:23:08,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:23:08,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:08,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:23:08,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:08,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:08,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:23:08,799 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:23:08,800 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:23:08,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:08,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:23:08,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:23:08,806 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:08,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:08,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:23:08,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:23:08,810 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,810 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:08,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:23:08,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:23:08,814 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:08,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:23:08,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:23:08,818 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:08,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:23:08,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:23:08,823 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,824 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:23:08,829 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,829 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:23:08,833 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,834 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:23:08,836 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,838 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:23:08,843 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:23:08,850 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:23:08,854 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,854 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:08,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:23:08,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:23:08,856 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:08,856 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:23:08,858 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:23:08,858 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:08,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:08,860 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:23:08,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:23:08,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:23:08,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:23:08,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:23:08,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:23:08,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:23:08,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:08,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:08,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:08,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:23:08,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:23:08,863 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:23:08,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:23:08,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:23:08,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:23:08,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:23:08,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:23:08,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:23:08,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:23:08,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:23:08,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:23:08,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:08,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:08,867 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:23:08,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:23:08,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:23:08,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:23:08,869 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:23:08,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:23:08,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:23:08,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:23:08,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:23:08,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:23:08,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:23:08,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:23:08,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:23:08,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:23:08,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:23:08,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:23:08,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:23:08,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:23:08,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:23:08,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:23:08,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:23:08,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:23:08,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:23:08,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:23:08,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:23:08,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:23:08,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:08,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:23:08,883 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:23:08,884 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:23:08,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:23:08,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:23:08,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:23:08,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:23:08,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:23:08,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:23:08,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:08,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:08,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:08,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:08,887 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:23:08,888 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:23:08,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:23:08,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:23:08,889 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:23:08,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:23:08,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:23:08,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:23:08,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:23:08,901 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:23:08,904 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:23:08,906 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:23:08,906 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:23:08,906 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:23:08,907 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:23:08,907 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:23:08,907 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:23:08,908 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:23:08,908 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:23:08,908 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:23:08,908 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,909 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,909 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:23:08,909 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,909 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,910 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:23:08,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:23:08,911 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:23:08,912 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:23:08,913 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:23:08,913 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:23:08,913 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:23:08,914 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:23:08,914 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:23:08,914 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:23:08,914 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,915 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,915 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:23:08,915 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:08,915 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:08,922 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:23:08,923 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:23:08,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:23:08,924 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:23:08,924 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:23:08,924 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:23:08,924 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:23:08,925 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:23:08,925 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:23:08,927 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:23:08,928 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:23:08,928 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:23:08,929 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:23:08,929 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:23:08,930 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:23:08,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:23:08,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:23:08,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:23:08,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:23:08,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:23:08,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:08,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:23:08,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:23:08,934 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:23:08,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:23:08,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:23:08,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:23:08,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:23:08,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:23:08,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:23:08,970 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:23:08,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:08,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:08,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:08,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:08,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:08,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:08,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:23:08,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:23:08,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:23:08,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:23:08,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:23:08,981 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:23:08,981 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:23:08,981 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:23:08,981 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:23:08,982 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:23:09,003 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:23:09,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:23:09,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:23:09,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:23:09,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:23:09,063 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:23:09,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:23:09,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:23:09,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:23:09,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:23:09,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:23:09,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:23:09,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:23:09,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:23:09,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:23:09,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:09,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:23:09,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:23:09,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:23:09,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:23:09,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:23:09,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:23:09,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:23:09,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:09,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:23:09,073 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:23:09,073 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:09,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:23:09,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:23:09,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:23:09,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:23:09,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:23:09,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:23:09,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:23:09,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:23:09,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:23:09,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:23:09,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:23:09,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:23:09,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:23:09,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:23:09,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:23:09,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:09,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:09,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:09,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:09,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:09,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:09,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:09,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:09,081 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2017-09-25 20:23:09,081 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:23:09,081 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:23:09,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:23:09,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:23:09,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:23:09,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:23:09,082 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:23:09,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:23:09,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:23:09,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:23:09,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:23:09,086 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:23:09,089 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:23:09,090 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:23:09,090 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:23:09,090 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:23:09,091 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:23:09,092 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:23:09,092 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:23:09,093 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:23:09,093 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:23:09,093 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:23:09,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:09,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:09,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:23:09,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:09,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:09,095 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:23:09,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:23:09,097 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:23:09,097 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:23:09,098 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:23:09,098 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:23:09,099 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:23:09,099 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:23:09,099 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:23:09,099 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:23:09,100 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:09,100 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:09,100 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:23:09,101 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:23:09,101 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:23:09,122 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:23:09,123 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:23:09,123 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:23:09,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:23:09,124 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:23:09,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:23:09,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:23:09,125 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:23:09,125 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:23:09,125 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:23:09,127 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:23:09,128 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:23:09,128 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:23:09,129 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:23:09,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:23:09,130 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:23:09,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:23:09,131 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:23:09,131 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:23:09,131 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:23:09,132 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:23:09,202 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:23:10,519 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:23:10,520 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:23:10,536 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:23:10,540 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:23:10,541 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:23:10,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:23:10,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:23:10,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:23:10,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:23:10,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:23:10,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:23:10,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:23:10,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:10,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:10,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:10,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:10,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:10,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:23:10,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:10,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:10,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:23:10,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:23:10,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:10,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:23:10,570 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:23:10,571 INFO  [8] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,758,464.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:23:10,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:23:10,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:23:10,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:23:10,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:23:10,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:23:10,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:10,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:23:10,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:23:10,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:23:10,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:23:10,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:23:10,580 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:23:10,580 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:23:10,581 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:23:10,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:23:10,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:10,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:23:10,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:23:11,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:11,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:11,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:11,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:11,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:23:11,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:23:11,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:23:11,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:23:11,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,181 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:23:11,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:23:11,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:23:11,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:23:11,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:23:11,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:23:11,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:23:11,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:23:11,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:23:11,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:23:11,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:23:11,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:23:11,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:23:11,194 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:23:11,194 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:23:11,195 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:23:11,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:23:11,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:11,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:23:11,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:23:11,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:11,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:23:11,198 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:23:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:23:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:23:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:23:11,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,201 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:23:11,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:11,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:23:11,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:23:11,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:23:11,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:23:11,203 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,203 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:11,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:11,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:23:11,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:23:11,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:23:11,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:23:11,205 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,206 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:11,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:23:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:23:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:23:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:23:11,208 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,208 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:11,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:11,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:23:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:23:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:23:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:23:11,210 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:23:11,210 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:23:11,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:23:11,212 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:23:11,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:23:11,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:23:11,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:23:11,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:23:11,420 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:23:11,421 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:23:11,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:23:11,842 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:23:11,843 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:23:11,843 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:23:11,843 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:23:11,843 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:23:11,844 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,844 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,844 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,845 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,845 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,845 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,845 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,845 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:23:11,846 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:23:11,847 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:23:11,848 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:23:11,848 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:23:11,848 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:23:12,405 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:23:12,405 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:23:12,405 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:23:12,405 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:26:35,935 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:26:35,987 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:26:35,996 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:26:35,997 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:26:35,999 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:26:35,999 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:26:35,999 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:26:36,000 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:26:36,214 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:26:36,214 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:26:36,228 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:26:36,250 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:36,282 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:36,316 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:36,318 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:36,333 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:36,394 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:36,405 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:36,410 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:36,412 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:36,413 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:36,413 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:36,413 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:36,414 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:36,415 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:36,415 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:36,416 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:36,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:36,418 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:36,419 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:36,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:36,420 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:26:36,420 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:36,423 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:36,423 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:36,424 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:26:36,424 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:36,432 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:26:36,433 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:26:36,435 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:36,437 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:26:36,439 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:36,439 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:36,440 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:36,441 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:36,442 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:26:36,443 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:26:36,445 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:26:36,447 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:26:36,447 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:26:36,559 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:26:36,562 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:26:36,562 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:26:36,562 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:26:36,563 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:26:36,563 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:26:36,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:36,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:26:36,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:26:36,589 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:26:36,590 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:26:36,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:26:36,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:26:36,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:26:36,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:26:36,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:36,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:36,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:26:36,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:26:36,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:26:36,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:36,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:26:36,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,618 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:36,618 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:26:36,618 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:26:36,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:36,620 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:36,620 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:36,620 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:36,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:26:36,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:26:36,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:26:36,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:26:36,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:26:36,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:36,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:36,624 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:36,624 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:36,624 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:36,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:36,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:26:36,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:26:36,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:26:36,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:26:36,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:26:36,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:26:36,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:26:36,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:26:36,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:26:36,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:36,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:36,627 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:36,628 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:36,628 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:36,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:36,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:26:36,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:26:36,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:26:36,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:26:36,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:26:36,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:26:36,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:26:36,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:26:36,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:36,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:36,635 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:36,636 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:36,636 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:36,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:26:36,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:26:36,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:26:36,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:26:36,637 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:26:36,640 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:26:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:36,644 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:26:36,644 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:26:36,644 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:26:36,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:26:36,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:26:36,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:26:36,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:36,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:26:36,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:26:36,682 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:26:36,682 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:26:36,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:26:36,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:26:36,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:26:36,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:26:36,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:36,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:26:36,686 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:36,687 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:26:36,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:36,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:36,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:36,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:36,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:36,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:36,770 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:36,770 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:36,771 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:36,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:36,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:36,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:36,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:36,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:36,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:36,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:36,808 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:36,809 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:36,809 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:36,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:36,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:36,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:36,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:36,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:36,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:36,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:36,814 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:36,815 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:36,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:36,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:36,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:36,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:36,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:36,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:36,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:36,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:36,827 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:36,827 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:36,827 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:36,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:36,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:26:36,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:36,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:36,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:26:36,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:26:36,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:26:36,896 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:26:36,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:26:36,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:26:36,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:26:36,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:36,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:36,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:36,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:26:36,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:26:36,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:36,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:36,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:36,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:36,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:36,914 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:26:36,915 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:26:36,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:26:36,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:26:36,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:26:36,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:26:36,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:26:36,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:36,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:36,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:36,918 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:36,919 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:36,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:36,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:36,923 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,924 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:36,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:36,928 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,929 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:36,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:36,932 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,933 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:36,936 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,936 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:36,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:36,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:36,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:36,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:36,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:36,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:36,944 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:36,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:36,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:36,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:36,947 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,947 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:36,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:36,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,952 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:36,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:36,955 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,955 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:36,958 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,959 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:36,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:36,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:36,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:36,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:36,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:36,964 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:36,965 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:36,965 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:36,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:36,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:36,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:36,968 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:36,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:36,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:36,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:36,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,974 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:36,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:36,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:36,981 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,981 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:36,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:36,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:36,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:36,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:36,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:36,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:36,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:36,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:36,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:36,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:36,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:36,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:37,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:37,001 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:37,007 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:37,012 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:37,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:37,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:37,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:37,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:37,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:37,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:37,018 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,019 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:37,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:37,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:37,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:37,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:37,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:37,023 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,024 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:37,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:37,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:37,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:37,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:37,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:37,029 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:37,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:37,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:37,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:37,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:37,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:37,034 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:37,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:37,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:37,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:37,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:37,041 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,043 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:37,049 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,050 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:37,058 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:37,063 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,064 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:37,066 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,067 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:37,076 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,077 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:37,079 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,079 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:37,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:37,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:37,081 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:37,081 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:37,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:37,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:37,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:26:37,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:26:37,083 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:37,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:37,087 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:26:37,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:26:37,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:26:37,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:26:37,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:26:37,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:26:37,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:26:37,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:37,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:37,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,090 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:37,091 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:37,091 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:37,091 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:37,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:26:37,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:26:37,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:26:37,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:26:37,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:26:37,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:26:37,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:37,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:37,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:26:37,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:26:37,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:37,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:37,095 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:26:37,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:26:37,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:26:37,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:26:37,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:26:37,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:26:37,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:26:37,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:26:37,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:26:37,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:26:37,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:26:37,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:26:37,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:26:37,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:26:37,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:26:37,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:26:37,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:37,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:37,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:37,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:37,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:37,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:26:37,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:26:37,107 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:26:37,108 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:26:37,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:26:37,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:26:37,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:26:37,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:26:37,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:26:37,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:37,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:37,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:37,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:37,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:37,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:26:37,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:37,118 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:37,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:37,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:37,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:37,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:37,128 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:26:37,133 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:26:37,134 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:37,135 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:37,137 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:37,137 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:37,138 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:37,138 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:37,138 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:37,139 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:37,139 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:37,139 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,139 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,140 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:37,140 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,140 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,140 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:37,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:37,142 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:26:37,143 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:37,144 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:37,145 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:37,145 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:26:37,147 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:26:37,147 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:26:37,147 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:26:37,148 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,148 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,148 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:37,148 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,149 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,156 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:26:37,157 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:26:37,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:26:37,158 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:26:37,158 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:37,158 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:37,159 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:37,159 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:26:37,159 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:37,161 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:26:37,162 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:26:37,162 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:37,163 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:26:37,164 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:37,165 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:37,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:26:37,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:26:37,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:26:37,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:26:37,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:26:37,167 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:26:37,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:26:37,170 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:26:37,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:37,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:37,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:26:37,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:26:37,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:37,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:37,217 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:26:37,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:37,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:37,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:26:37,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:26:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:26:37,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:26:37,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:26:37,231 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:37,231 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:37,232 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:37,232 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:26:37,232 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:26:37,262 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:26:37,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:26:37,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:26:37,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:26:37,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:26:37,338 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:37,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:26:37,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:26:37,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:26:37,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:26:37,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:26:37,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:26:37,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:26:37,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:26:37,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:26:37,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:26:37,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:37,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:37,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:37,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:37,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:26:37,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:26:37,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:37,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:26:37,347 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:26:37,347 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:37,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:26:37,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:26:37,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:26:37,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:26:37,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:26:37,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:26:37,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:26:37,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:37,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:37,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:37,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:37,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:26:37,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:26:37,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:26:37,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:26:37,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:37,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:37,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:37,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:37,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:37,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:37,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:37,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:37,355 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:37,355 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:37,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:26:37,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:26:37,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:26:37,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:26:37,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:37,357 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:37,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:37,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:37,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:37,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:37,360 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:26:37,362 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:26:37,362 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:37,363 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:37,363 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:37,364 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:37,364 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:37,364 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:37,365 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:37,365 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:37,365 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:37,365 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,366 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,366 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:37,366 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,367 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,367 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:37,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:37,369 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:26:37,369 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:37,370 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:37,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:37,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:26:37,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:26:37,371 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:26:37,371 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:26:37,371 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,371 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,372 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:37,372 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:37,372 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:37,390 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:26:37,391 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:26:37,391 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:26:37,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:26:37,393 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:26:37,393 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:37,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:37,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:37,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:26:37,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:37,396 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:26:37,398 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:26:37,399 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:37,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:26:37,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:37,402 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:37,402 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:37,402 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:37,402 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:37,403 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:26:37,403 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:26:37,519 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:26:38,914 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:26:38,915 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:26:38,949 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:26:38,952 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:26:38,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:38,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:26:38,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:26:38,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:26:38,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:26:38,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:26:38,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:26:38,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:26:38,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:38,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:38,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:38,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:38,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:38,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:38,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:38,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:38,980 INFO  [5] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,733,888.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:26:38,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:26:38,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:38,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:38,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:26:38,982 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:26:38,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:38,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:38,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:38,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:38,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:38,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:38,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:38,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:38,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:38,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:38,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:38,991 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:38,991 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:38,992 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:38,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:38,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:38,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:38,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:39,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:39,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:39,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:39,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:39,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:39,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:39,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:39,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:39,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:26:39,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:26:39,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:39,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:39,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:39,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:26:39,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:26:39,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:39,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:39,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:39,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:39,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:39,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:39,378 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:39,378 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:39,379 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:39,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:39,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:39,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:39,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:39,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:39,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:39,381 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:39,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:39,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:39,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:39,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:39,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:39,384 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,384 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:39,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:39,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:39,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:39,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:39,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:39,387 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,388 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:39,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:39,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:39,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:39,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:39,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:39,390 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,390 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:39,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:39,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:39,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:39,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:39,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:39,393 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,393 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:39,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:39,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:39,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:39,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:39,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:39,394 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:39,395 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:39,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:39,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:39,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:39,396 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:26:39,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:26:39,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:26:39,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:26:39,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:26:39,543 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:26:39,543 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:26:39,543 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:39,544 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:26:39,544 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:26:39,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,546 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,546 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,546 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,546 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,546 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:39,547 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:26:39,548 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:26:39,549 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:26:39,549 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:26:39,614 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:26:39,614 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:26:39,614 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:26:39,614 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:26:39,644 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:26:39,644 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:26:39,644 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:26:54,088 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:26:54,122 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:26:54,129 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:26:54,129 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:26:54,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:26:54,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:26:54,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:26:54,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:26:54,411 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:26:54,411 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:26:54,421 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:26:54,440 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:54,466 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:54,537 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:54,540 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:54,550 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:54,603 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:26:54,610 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:54,621 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:54,623 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:54,623 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:54,624 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:54,624 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:54,625 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:54,625 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:54,626 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:54,626 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:54,626 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:54,626 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:54,627 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:54,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:54,628 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:26:54,628 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:54,630 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:54,630 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:54,630 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:26:54,630 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:54,638 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:26:54,640 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:26:54,643 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:54,646 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:26:54,650 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:54,651 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:54,652 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:54,653 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:54,654 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:26:54,654 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:26:54,655 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:26:54,655 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:26:54,656 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:26:54,678 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:26:54,680 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:26:54,681 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:26:54,681 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:26:54,681 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:26:54,682 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:26:54,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:54,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:26:54,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:26:54,708 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:26:54,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:54,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:26:54,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:26:54,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:26:54,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:26:54,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:26:54,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:54,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:54,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:26:54,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:26:54,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:26:54,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:54,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:26:54,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:54,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:54,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:54,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:54,734 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:54,734 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:26:54,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:26:54,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:26:54,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:26:54,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:26:54,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:26:54,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:26:54,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:54,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:54,738 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:54,739 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:54,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:54,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:26:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:26:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:26:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:26:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:26:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:26:54,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:26:54,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:26:54,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:26:54,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:54,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:54,744 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:54,744 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:54,744 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:54,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:54,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:26:54,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:26:54,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:26:54,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:26:54,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:26:54,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:26:54,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:26:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:26:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:26:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:54,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:54,751 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:54,751 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:26:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:26:54,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:26:54,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:26:54,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:26:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:54,755 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:26:54,755 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:26:54,756 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:26:54,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:26:54,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:26:54,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:26:54,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:26:54,757 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:26:54,757 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:26:54,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:26:54,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:26:54,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:26:54,763 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:26:54,763 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:26:54,764 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:26:54,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:26:54,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:26:54,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:26:54,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:54,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:26:54,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:26:54,822 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:26:54,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:26:54,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:54,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:54,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:54,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:54,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:54,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:54,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:26:54,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:54,826 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:26:54,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:54,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:54,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:54,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:54,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:54,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:54,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:54,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:54,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:54,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:54,901 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:54,901 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:54,902 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:54,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:54,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:54,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:54,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:54,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:54,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:54,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:54,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:54,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:54,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:54,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:54,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:54,950 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:54,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:54,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:54,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:54,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:54,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:54,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:54,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:54,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:54,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:54,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:54,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:54,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:54,955 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:54,955 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:54,956 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:54,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:54,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:54,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:54,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:54,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:54,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:54,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:54,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:54,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:54,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:54,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:54,968 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:54,969 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:54,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:54,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:54,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:55,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:26:55,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:26:55,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:55,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:55,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:55,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:55,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:26:55,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:26:55,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:26:55,105 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:26:55,107 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:26:55,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:26:55,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:26:55,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:26:55,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:26:55,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:26:55,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:26:55,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:55,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:55,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:55,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:26:55,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:26:55,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:55,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:55,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:55,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:55,159 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:55,159 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:26:55,161 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:26:55,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:26:55,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:26:55,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:26:55,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:26:55,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:26:55,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:55,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:55,165 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:55,165 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:55,167 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:55,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:55,171 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:55,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:55,177 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,177 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:55,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:55,180 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,180 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:55,184 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,185 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:55,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:55,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:55,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:55,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:55,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:55,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:55,194 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:55,194 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:55,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:55,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:55,197 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:55,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:55,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:55,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:55,203 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,203 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:55,207 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:55,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:55,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:55,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:55,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:55,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:55,216 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:55,217 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:55,217 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:55,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:55,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:55,221 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,223 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:55,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:55,233 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,233 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:55,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:55,237 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,238 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:55,254 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,254 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:55,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:55,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:55,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:55,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:55,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:55,263 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:55,264 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:55,264 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:55,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:55,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:55,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:55,274 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,274 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:55,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:55,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:55,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:55,282 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,282 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:55,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:55,293 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,293 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:55,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:55,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:55,300 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,301 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:55,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:55,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:55,311 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,312 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:55,326 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:55,333 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,333 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:55,339 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,340 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:55,344 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:55,360 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,361 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:55,363 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,364 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:55,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:55,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:55,366 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:55,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:55,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:55,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:55,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:26:55,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:26:55,370 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:26:55,370 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:26:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:55,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:55,372 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:26:55,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:26:55,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:26:55,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:26:55,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:26:55,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:26:55,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:26:55,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:55,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:55,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:55,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:55,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:55,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:55,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:26:55,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:55,377 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:55,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:26:55,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:26:55,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:26:55,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:26:55,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:26:55,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:26:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:26:55,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:26:55,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:55,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:55,381 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:26:55,382 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:26:55,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:26:55,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:26:55,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:26:55,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:26:55,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:26:55,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:26:55,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:26:55,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:26:55,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:26:55,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:26:55,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:26:55,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:26:55,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:26:55,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:26:55,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:55,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:55,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:55,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:55,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:55,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:26:55,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:26:55,394 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:26:55,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:26:55,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:26:55,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:26:55,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:26:55,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:26:55,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:26:55,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:55,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:55,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:55,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,421 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:55,421 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:55,421 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:26:55,422 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:55,423 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:55,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:55,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:55,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:55,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:55,441 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:26:55,447 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:26:55,449 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:55,450 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:55,450 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:55,451 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:55,451 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:55,451 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:55,452 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:55,452 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:55,452 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:55,452 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,453 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,453 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:55,453 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,454 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,454 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:55,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:55,456 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:26:55,456 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:55,457 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:55,457 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:55,457 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:26:55,458 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:26:55,458 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:26:55,459 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:26:55,459 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:55,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,461 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,470 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:26:55,471 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:26:55,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:26:55,471 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:26:55,472 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:55,472 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:55,472 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:55,473 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:26:55,473 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:55,475 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:26:55,477 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:26:55,479 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:55,480 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:26:55,481 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:55,481 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:55,481 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:26:55,482 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:26:55,482 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:26:55,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:26:55,484 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:26:55,485 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:26:55,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:26:55,488 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:26:55,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:55,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:26:55,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:26:55,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:26:55,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:55,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:26:55,533 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:26:55,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:55,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:55,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:26:55,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:26:55,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:26:55,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:26:55,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:26:55,545 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:55,545 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:55,546 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:55,546 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:26:55,546 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:26:55,575 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:26:55,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:26:55,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:26:55,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:26:55,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:26:55,665 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:55,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:26:55,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:26:55,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:26:55,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:26:55,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:26:55,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:26:55,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:26:55,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:26:55,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:26:55,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:26:55,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:26:55,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:26:55,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:26:55,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:26:55,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:26:55,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:26:55,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:55,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:26:55,676 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:26:55,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:55,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:26:55,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:26:55,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:26:55,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:26:55,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:26:55,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:26:55,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:26:55,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:55,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:55,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:55,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:55,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:26:55,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:26:55,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:26:55,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:26:55,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:55,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:55,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:55,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:55,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:55,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:55,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:55,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:55,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:26:55,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:26:55,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:26:55,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:26:55,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:26:55,688 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:26:55,689 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:26:55,689 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:26:55,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:26:55,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:26:55,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:26:55,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:26:55,694 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:26:55,695 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:26:55,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:26:55,696 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:26:55,696 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:55,697 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:55,697 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:55,697 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:26:55,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:26:55,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:26:55,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:26:55,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:55,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,700 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:26:55,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:26:55,702 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:26:55,702 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:26:55,702 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:26:55,703 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:26:55,703 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:26:55,704 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:26:55,704 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:26:55,705 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:26:55,706 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,707 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,708 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:26:55,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:26:55,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:26:55,744 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:26:55,745 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:26:55,746 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:26:55,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:26:55,746 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:26:55,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:26:55,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:26:55,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:26:55,748 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:26:55,748 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:26:55,750 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:26:55,751 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:26:55,751 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:26:55,752 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:26:55,752 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:26:55,753 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:26:55,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:55,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:26:55,754 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:26:55,754 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:26:55,754 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:26:55,840 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:26:57,169 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:26:57,170 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:26:57,185 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:26:57,189 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:26:57,190 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:26:57,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:26:57,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:26:57,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:57,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:57,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:57,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:57,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:57,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:57,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:57,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:57,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:26:57,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:57,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:26:57,220 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:26:57,218 INFO  [5] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,967,360.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:26:57,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:26:57,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:26:57,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:26:57,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:26:57,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:26:57,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:26:57,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:26:57,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:26:57,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:26:57,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:26:57,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:26:57,228 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:26:57,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:26:57,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:26:57,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:57,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:26:57,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:26:57,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:57,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:57,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:57,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:57,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:26:57,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:26:57,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:26:57,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:26:57,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,412 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:26:57,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:26:57,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:57,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:57,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:26:57,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:26:57,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:26:57,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:26:57,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:26:57,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:26:57,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:26:57,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:26:57,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:26:57,422 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:26:57,423 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:26:57,423 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:26:57,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:26:57,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:57,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:26:57,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:26:57,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:57,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:26:57,426 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,426 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:57,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:57,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:26:57,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:26:57,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:26:57,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:26:57,429 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,429 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:26:57,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:57,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:26:57,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:26:57,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:26:57,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:26:57,432 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,432 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:57,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:57,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:26:57,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:26:57,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:26:57,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:26:57,434 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,435 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:57,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:57,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:26:57,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:26:57,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:26:57,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:26:57,437 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,437 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:57,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:57,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:26:57,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:26:57,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:26:57,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:26:57,440 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:26:57,440 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:57,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:57,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:26:57,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:26:57,442 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:26:57,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:26:57,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:26:57,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:26:57,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:26:57,528 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:26:57,529 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:26:57,529 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:26:57,529 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:26:57,529 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:26:57,530 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,531 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,532 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:26:57,533 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:26:57,534 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:26:57,534 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:26:57,534 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:26:57,554 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:26:57,555 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:26:57,555 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:26:57,555 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:26:57,765 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:26:57,766 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:26:57,766 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:27:23,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:27:23,213 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:27:23,222 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:27:23,222 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:27:23,224 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:27:23,224 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:27:23,224 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:27:23,225 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:27:23,393 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:27:23,394 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:27:23,400 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:27:23,424 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:27:23,446 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:27:23,484 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:27:23,487 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:27:23,517 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:27:23,844 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:27:23,852 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:27:23,855 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:27:23,857 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:27:23,859 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:27:23,860 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:27:23,861 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:27:23,862 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:27:23,862 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:23,863 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:23,864 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:27:23,865 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:23,865 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:23,866 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:27:23,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:27:23,866 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:27:23,868 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:27:23,870 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:27:23,871 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:27:23,871 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:27:23,872 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:27:23,881 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:27:23,884 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:27:23,886 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:27:23,889 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:27:23,891 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:27:23,891 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:27:23,893 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:27:23,894 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:27:23,895 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:27:23,895 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:27:23,896 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:27:23,897 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:27:23,897 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:27:23,922 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:27:23,925 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:27:23,925 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:27:23,926 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:27:23,926 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:27:23,926 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:27:23,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:23,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:27:23,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:23,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:27:23,956 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:27:23,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:23,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:27:23,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:27:23,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:27:23,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:27:23,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:27:23,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:23,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:23,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:27:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:27:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:23,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:27:23,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:27:23,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:27:23,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:23,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:27:23,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:23,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:23,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:23,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:23,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:27:23,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:27:23,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:27:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:27:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:27:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:27:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:27:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:27:23,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:27:23,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:27:23,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:27:23,989 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:27:23,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:27:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:27:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:27:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:27:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:27:23,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:27:23,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:27:23,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:27:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:27:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:27:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:23,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:27:23,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:27:23,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:27:23,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:27:23,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:27:23,998 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:27:23,998 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:27:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:27:24,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:27:24,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:27:24,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:27:24,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:27:24,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:27:24,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:27:24,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:27:24,003 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:27:24,003 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:27:24,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:27:24,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:27:24,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:27:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:27:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:27:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:27:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:27:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:27:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:27:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:27:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:27:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:27:24,008 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:27:24,009 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:27:24,012 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:27:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:27:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:27:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:27:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:27:24,013 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:27:24,014 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:27:24,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:27:24,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:27:24,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:27:24,016 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:27:24,017 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:27:24,018 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:27:24,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:27:24,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:27:24,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:27:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:27:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:27:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:27:24,040 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:27:24,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:27:24,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:27:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:27:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:27:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:27:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:27:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:27:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:27:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:27:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:27:24,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:27:24,044 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:27:24,044 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:27:24,044 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:27:24,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:27:24,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:27:24,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:24,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:27:24,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:24,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:24,105 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:27:24,106 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:27:24,107 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:27:24,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:27:24,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:27:24,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:27:24,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:24,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:27:24,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:24,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:24,141 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:27:24,142 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:27:24,142 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:27:24,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:27:24,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:27:24,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:27:24,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:24,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:27:24,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:24,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:24,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:27:24,147 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:27:24,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:27:24,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:27:24,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:27:24,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:27:24,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:24,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:27:24,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:24,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:24,161 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:27:24,161 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:27:24,162 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:27:24,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:24,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:27:24,232 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:27:24,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:27:24,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:27:24,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:27:24,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:27:24,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:27:24,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:27:24,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:27:24,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:27:24,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:27:24,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:27:24,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:27:24,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:27:24,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:27:24,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:27:24,245 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:27:24,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:27:24,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:27:24,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:27:24,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:27:24,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:27:24,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:24,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:27:24,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:27:24,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,279 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:27:24,280 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:27:24,281 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:27:24,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:27:24,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:27:24,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:27:24,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:27:24,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:27:24,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:24,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:24,283 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:27:24,283 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:27:24,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:27:24,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:27:24,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:27:24,298 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,300 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:27:24,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:27:24,303 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,303 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:27:24,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:27:24,305 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,306 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:27:24,309 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,309 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:27:24,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:27:24,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:24,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:27:24,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:24,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:24,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:27:24,327 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:27:24,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:27:24,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:27:24,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:27:24,331 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,337 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:27:24,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:27:24,340 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,340 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:27:24,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:27:24,345 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,346 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:27:24,349 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,349 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:27:24,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:27:24,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:24,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:27:24,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:24,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:24,362 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:27:24,362 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:27:24,363 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:27:24,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:27:24,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:27:24,368 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,368 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:27:24,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:27:24,372 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,373 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:27:24,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:27:24,378 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,378 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:27:24,382 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,383 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:27:24,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:27:24,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:24,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:27:24,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:24,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:24,393 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:27:24,394 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:27:24,395 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:27:24,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:24,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:27:24,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:27:24,405 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,405 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:24,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:24,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:27:24,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:27:24,411 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,412 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:24,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:27:24,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,417 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:27:24,417 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,418 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:24,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:27:24,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:27:24,423 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,423 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:24,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:27:24,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:27:24,431 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,432 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:27:24,437 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,438 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:27:24,443 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,443 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:27:24,449 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,449 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,452 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,452 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:27:24,452 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,453 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:27:24,462 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,476 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:27:24,485 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,488 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:24,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:27:24,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,491 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:27:24,494 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:24,494 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:24,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:27:24,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:24,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:27:24,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:27:24,496 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:24,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:24,498 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:27:24,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:27:24,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:27:24,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:27:24,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:27:24,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:27:24,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:27:24,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:24,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:24,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:24,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:27:24,501 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:27:24,502 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:27:24,502 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:27:24,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:27:24,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:27:24,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:27:24,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:27:24,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:27:24,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:27:24,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:27:24,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:27:24,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:27:24,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:27:24,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:27:24,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:24,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:24,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,505 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:27:24,505 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:27:24,506 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:27:24,506 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:27:24,506 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:27:24,506 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:27:24,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:27:24,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:27:24,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:27:24,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:27:24,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:27:24,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:27:24,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:27:24,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:27:24,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:27:24,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:27:24,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:27:24,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:27:24,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:27:24,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:27:24,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:27:24,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:27:24,520 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:27:24,520 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:27:24,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:27:24,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:27:24,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:27:24,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:27:24,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:27:24,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:27:24,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:24,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:24,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,525 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:27:24,525 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:27:24,526 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:27:24,526 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:27:24,527 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:27:24,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:27:24,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:27:24,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:27:24,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:27:24,536 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:27:24,541 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:27:24,542 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:27:24,543 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:27:24,543 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:27:24,543 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:27:24,544 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:27:24,544 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:27:24,544 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:27:24,544 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:27:24,545 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:27:24,545 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,545 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,545 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:27:24,546 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,546 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,546 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:27:24,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:27:24,548 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:27:24,549 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:27:24,550 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:27:24,550 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:27:24,551 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:27:24,552 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:27:24,552 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:27:24,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:27:24,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:27:24,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,567 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:27:24,568 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:27:24,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:27:24,569 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:27:24,570 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:27:24,571 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:27:24,571 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:27:24,572 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:27:24,572 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:27:24,575 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:27:24,577 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:27:24,577 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:27:24,579 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:27:24,579 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:27:24,580 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:27:24,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:27:24,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:27:24,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:27:24,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:27:24,582 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:27:24,582 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:27:24,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:27:24,588 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:27:24,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:27:24,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:27:24,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:27:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:27:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:27:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:27:24,627 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:27:24,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:24,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:24,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:27:24,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:27:24,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:27:24,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:27:24,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:27:24,638 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:27:24,638 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:27:24,638 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:27:24,639 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:27:24,639 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:27:24,663 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:27:24,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:27:24,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:27:24,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:27:24,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:27:24,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:27:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:27:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:27:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:27:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:27:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:27:24,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:27:24,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:27:24,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:27:24,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:27:24,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:27:24,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:27:24,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:27:24,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:27:24,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:27:24,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:27:24,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:27:24,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:24,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:27:24,727 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:27:24,728 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:24,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:27:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:27:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:27:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:27:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:27:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:27:24,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:27:24,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:27:24,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:27:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:27:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:27:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:27:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:27:24,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:27:24,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:27:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:24,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@283F772']
2017-09-25 20:27:24,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:27:24,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:27:24,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:27:24,736 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:27:24,736 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:27:24,736 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:27:24,736 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:27:24,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:27:24,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:27:24,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:27:24,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:27:24,740 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:27:24,743 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:27:24,743 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:27:24,744 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:27:24,745 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:27:24,745 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:27:24,745 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:27:24,746 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:27:24,746 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:27:24,746 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:27:24,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:27:24,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:27:24,748 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,748 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,749 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:27:24,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:27:24,750 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:27:24,751 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:27:24,751 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:27:24,752 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:27:24,752 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:27:24,752 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:27:24,753 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:27:24,753 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:27:24,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:27:24,755 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:27:24,755 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:27:24,772 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:27:24,775 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:27:24,776 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:27:24,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:27:24,777 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:27:24,777 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:27:24,778 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:27:24,778 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:27:24,778 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:27:24,779 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:27:24,780 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:27:24,781 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:27:24,782 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:27:24,782 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:27:24,783 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:27:24,784 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:27:24,784 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:27:24,784 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:27:24,784 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:27:24,785 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:27:24,785 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:27:24,856 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:27:26,123 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:27:26,124 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:27:26,135 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:27:26,137 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:27:26,138 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:27:26,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:27:26,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:27:26,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:27:26,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:27:26,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:27:26,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:27:26,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:27:26,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:26,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:26,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:26,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:26,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:26,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:27:26,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:26,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:26,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:27:26,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:27:26,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:27:26,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:27:26,166 INFO  [8] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,717,504.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:27:26,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:27:26,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:27:26,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:27:26,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:27:26,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:27:26,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:27:26,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:27:26,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:27:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:27:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:27:26,174 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:27:26,175 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:27:26,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:27:26,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:27:26,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:26,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:27:26,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:27:26,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:26,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:26,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:26,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:26,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:27:26,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:27:26,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:27:26,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:27:26,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,351 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:27:26,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:27:26,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:27:26,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:27:26,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:27:26,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:27:26,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:27:26,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:27:26,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:27:26,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:27:26,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:27:26,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:27:26,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:27:26,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:27:26,366 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:27:26,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:27:26,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:27:26,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:26,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:27:26,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:27:26,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:26,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:27:26,369 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,369 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:26,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:26,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:27:26,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:27:26,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:27:26,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:27:26,372 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,372 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:27:26,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:26,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:27:26,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:27:26,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:27:26,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:27:26,374 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,374 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:26,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:26,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:27:26,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:27:26,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:27:26,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:27:26,377 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:26,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:26,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:27:26,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:27:26,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:27:26,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:27:26,379 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,379 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:26,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:26,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:27:26,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:27:26,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:27:26,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:27:26,381 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:27:26,382 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:26,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:26,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:27:26,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:27:26,384 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:27:26,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:27:26,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:27:26,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:27:26,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:27:26,481 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:27:26,482 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:27:26,482 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:27:26,482 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:27:26,482 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:27:26,484 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,485 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,486 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,486 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,486 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,486 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,486 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:27:26,487 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:27:26,488 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:27:26,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:27:26,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:27:26,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:27:26,545 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:27:26,743 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:27:26,743 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:27:26,744 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:27:59,687 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:27:59,732 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:27:59,744 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:27:59,745 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:27:59,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:27:59,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:27:59,747 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:27:59,747 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:27:59,942 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:27:59,942 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:27:59,946 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:27:59,967 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:27:59,987 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:00,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:00,030 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:00,039 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:00,075 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:00,088 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:00,093 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:00,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:00,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:00,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:00,096 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:00,096 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:00,096 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,096 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,097 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:00,097 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,097 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,098 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:00,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:00,098 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:28:00,099 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:00,100 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:00,100 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:00,101 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:28:00,101 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:00,109 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:28:00,111 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:28:00,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:00,115 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:28:00,119 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:00,120 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:00,121 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:00,122 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:00,123 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:28:00,124 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:28:00,125 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:28:00,125 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:28:00,126 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:28:00,152 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:28:00,154 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:28:00,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:28:00,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:28:00,157 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:28:00,158 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:28:00,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:00,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:28:00,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:28:00,190 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:28:00,191 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:28:00,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:28:00,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:28:00,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:28:00,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:28:00,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:00,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:00,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:28:00,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:28:00,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:28:00,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:00,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:28:00,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,229 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:00,229 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:28:00,230 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:28:00,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:28:00,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:00,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:00,231 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:00,232 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:00,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:00,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:28:00,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:28:00,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:28:00,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:28:00,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:28:00,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:28:00,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:28:00,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:28:00,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:28:00,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:00,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:00,237 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:00,237 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:00,238 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:00,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:00,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:28:00,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:28:00,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:28:00,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:28:00,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:28:00,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:28:00,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:28:00,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:28:00,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:28:00,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:00,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:00,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:00,246 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:00,248 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:00,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:00,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:28:00,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:28:00,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:28:00,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:28:00,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:28:00,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:28:00,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:28:00,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:28:00,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:00,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:00,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:00,255 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:00,256 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:00,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:28:00,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:28:00,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:28:00,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:28:00,257 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:28:00,257 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:28:00,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:00,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:00,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:00,260 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:28:00,260 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:28:00,262 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:28:00,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:28:00,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:28:00,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:28:00,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:00,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:28:00,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:28:00,285 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:28:00,285 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:28:00,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:28:00,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:28:00,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:28:00,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:28:00,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:00,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:00,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:00,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:00,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:00,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:00,287 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:28:00,288 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:00,288 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:28:00,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:00,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:00,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:00,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:00,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:00,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:00,378 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:00,378 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:00,379 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:00,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:00,417 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,417 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:00,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:00,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:00,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:00,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:00,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:00,420 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:00,421 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:00,421 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:00,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:00,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:00,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:00,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:00,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:00,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:00,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:00,425 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:00,426 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:00,426 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:00,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:00,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:00,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:00,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:00,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:00,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:00,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:00,442 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:00,442 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:00,442 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:00,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:00,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:00,572 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:28:00,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:28:00,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:28:00,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:28:00,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:28:00,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:28:00,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:28:00,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:28:00,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:00,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:00,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:00,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:00,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:28:00,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:28:00,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:28:00,581 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:28:00,582 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:28:00,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:28:00,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:28:00,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:28:00,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:28:00,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:28:00,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:28:00,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:00,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:00,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:00,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:28:00,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:28:00,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,601 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:00,601 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:28:00,610 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:28:00,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:28:00,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:28:00,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:28:00,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:28:00,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:28:00,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:00,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:00,618 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:00,618 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:00,619 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:00,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:00,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:00,630 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,631 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:00,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:00,635 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,635 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:00,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:00,638 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,638 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:00,656 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,657 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:00,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:00,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:00,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:00,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:00,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:00,667 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:00,667 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:00,667 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:00,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:00,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:00,671 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,671 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:00,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:00,674 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,674 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:00,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:00,678 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,678 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:00,684 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,684 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:00,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:00,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:00,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:00,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:00,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:00,694 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:00,697 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:00,697 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:00,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:00,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:00,701 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,701 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:00,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:00,709 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:00,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:00,725 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,726 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:00,730 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,731 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:00,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:00,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:00,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:00,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:00,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:00,752 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:00,753 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:00,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:00,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:00,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:00,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:00,769 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,770 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:00,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:00,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:00,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:00,777 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,779 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:00,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:00,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:00,785 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,787 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:00,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:00,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:00,795 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:00,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:00,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:00,820 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:00,829 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,830 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:00,851 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,852 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:00,861 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:00,867 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:00,894 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:00,903 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,903 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:00,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:00,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:00,906 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:00,906 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:00,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:00,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:00,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:28:00,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:28:00,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:28:00,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:28:00,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:00,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:00,910 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:28:00,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:28:00,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:28:00,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:28:00,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:28:00,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:28:00,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:28:00,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:00,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:00,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:00,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:00,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:00,914 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:00,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:00,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:28:00,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:28:00,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:28:00,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:28:00,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:28:00,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:28:00,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:00,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:00,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:00,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:00,919 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:28:00,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:28:00,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:00,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:00,921 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:28:00,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:28:00,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:28:00,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:28:00,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:28:00,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:28:00,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:28:00,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:28:00,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:28:00,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:28:00,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:28:00,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:28:00,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:28:00,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:28:00,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:28:00,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:28:00,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:00,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:00,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:00,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:00,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:00,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:28:00,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:00,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:28:00,943 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:28:00,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:00,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:28:00,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:28:00,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:28:00,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:28:00,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:28:00,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:28:00,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:00,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:00,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:00,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:00,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:00,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:00,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:00,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:28:00,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:00,949 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:00,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:00,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:00,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:00,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:00,965 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:28:00,971 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:28:00,972 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:28:00,973 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:00,973 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:00,973 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:00,974 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:00,974 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:00,974 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:00,975 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:00,975 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:00,978 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,978 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,978 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:00,979 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,979 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,979 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:00,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:00,981 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:28:00,981 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:00,982 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:00,983 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:00,983 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:28:00,983 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:28:00,983 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:28:00,984 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:28:00,984 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,984 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,984 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:00,985 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:00,985 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:00,994 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:28:00,994 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:28:00,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:28:00,995 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:28:00,995 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:00,995 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:00,996 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:00,996 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:28:00,996 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:00,998 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:28:01,001 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:28:01,001 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:01,002 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:28:01,003 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:01,003 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:01,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:28:01,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:28:01,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:28:01,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:28:01,005 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:28:01,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:01,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:28:01,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:28:01,008 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:28:01,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:01,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:01,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:28:01,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:28:01,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:01,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:01,047 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:28:01,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:01,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:01,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:01,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:01,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:01,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:01,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:28:01,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:28:01,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:28:01,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:28:01,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:28:01,060 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:01,060 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:01,060 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:01,061 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:28:01,061 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:28:01,097 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:28:01,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:28:01,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:28:01,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:28:01,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:28:01,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:01,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:28:01,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:28:01,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:28:01,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:28:01,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:28:01,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:28:01,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:28:01,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:28:01,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:28:01,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:01,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:28:01,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:01,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:01,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:01,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:01,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:28:01,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:28:01,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:01,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:28:01,198 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:28:01,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:01,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:28:01,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:28:01,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:28:01,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:28:01,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:28:01,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:28:01,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:28:01,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:01,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:01,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:01,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:01,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:28:01,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:28:01,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:28:01,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:28:01,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:01,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:01,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:01,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:01,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:01,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:01,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:01,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:01,205 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:01,206 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:01,206 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:28:01,206 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:28:01,206 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:28:01,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:28:01,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:01,207 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:01,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:01,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:01,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:01,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:01,213 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:28:01,260 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:28:01,260 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:28:01,260 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:01,261 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:01,261 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:01,261 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:01,261 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:01,262 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:01,262 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:01,262 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:01,262 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:01,263 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:01,263 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:01,263 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:01,263 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:01,264 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:01,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:01,266 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:28:01,266 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:01,267 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:01,267 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:01,267 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:28:01,269 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:28:01,269 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:28:01,269 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:28:01,270 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:01,271 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:01,271 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:01,271 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:01,271 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:01,301 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:28:01,301 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:28:01,302 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:28:01,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:28:01,302 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:28:01,303 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:01,303 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:01,303 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:01,306 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:28:01,306 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:01,307 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:28:01,309 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:28:01,309 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:01,310 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:28:01,311 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:01,311 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:01,312 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:01,312 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:01,312 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:01,313 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:28:01,313 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:28:01,440 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:28:03,101 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:28:03,102 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:28:03,119 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:28:03,119 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:28:03,120 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:03,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:28:03,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:28:03,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:28:03,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:28:03,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:28:03,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:28:03,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:28:03,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:03,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:03,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:03,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:03,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:03,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:03,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:03,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:03,148 INFO  [7] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,905,920.00, Total Thread Count: 38
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:28:03,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:28:03,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:03,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:28:03,151 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:28:03,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:03,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:03,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:03,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:03,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:03,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:03,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:03,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:03,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:03,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:03,160 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:03,161 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:03,161 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:03,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:03,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:03,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:03,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:03,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:03,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:03,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:03,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:03,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:03,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:03,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:03,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:03,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,596 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:28:03,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:28:03,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:03,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:03,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:03,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:28:03,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:28:03,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:03,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:03,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:03,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:03,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:03,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:03,608 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:03,608 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:03,609 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:03,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:03,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:03,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:03,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:03,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:03,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:03,611 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,611 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:03,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:03,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:03,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:03,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:03,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:03,613 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,614 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:03,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:03,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:03,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:03,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:03,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:03,616 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,617 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:03,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:03,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:03,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:03,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:03,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:03,620 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,620 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:03,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:03,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:03,623 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,623 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:03,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:03,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:03,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:03,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:03,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:03,626 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:03,626 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:03,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:03,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:03,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:03,628 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:28:03,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:28:03,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:28:03,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:28:03,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:28:03,753 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:28:03,753 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:28:03,753 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:03,753 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:28:03,753 TRACE [15] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:28:03,763 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,763 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,765 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,766 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,766 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,766 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,766 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,766 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:28:03,767 DEBUG [15] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:28:03,768 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:28:03,768 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:28:03,768 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:28:03,869 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:28:03,869 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:28:03,869 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:28:03,869 DEBUG [15] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:28:03,880 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:28:03,880 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:28:03,880 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:28:16,143 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:28:16,182 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:28:16,191 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:28:16,192 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:28:16,193 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:28:16,193 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:28:16,194 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:28:16,194 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:28:16,420 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:28:16,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:28:16,428 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:28:16,469 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:28:16,525 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:16,591 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:16,594 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:16,604 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:16,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:28:16,672 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:16,687 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:16,689 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:16,692 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:16,693 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:16,693 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:16,693 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:16,694 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:16,694 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:16,694 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:16,695 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:16,695 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:16,696 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:16,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:16,697 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:28:16,698 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:16,700 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:16,700 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:16,701 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:28:16,701 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:16,745 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:28:16,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:28:16,750 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:16,754 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:28:16,756 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:16,757 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:16,759 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:16,760 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:16,761 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:28:16,762 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:28:16,762 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:28:16,763 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:28:16,763 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:28:16,790 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:28:16,793 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:28:16,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:28:16,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:28:16,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:28:16,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:28:16,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:16,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:28:16,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:28:16,825 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:28:16,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:16,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:28:16,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:28:16,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:28:16,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:28:16,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:28:16,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:16,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:16,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:28:16,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:28:16,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:28:16,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:16,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:28:16,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:16,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:16,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:16,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:16,847 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:16,848 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:28:16,848 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:28:16,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:28:16,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:28:16,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:28:16,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:28:16,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:28:16,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:16,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:16,851 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:16,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:16,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:16,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:28:16,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:28:16,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:28:16,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:28:16,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:28:16,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:28:16,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:28:16,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:28:16,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:28:16,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:16,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:16,856 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:16,856 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:16,856 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:28:16,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:28:16,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:28:16,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:28:16,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:28:16,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:16,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:16,860 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:16,860 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:28:16,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:28:16,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:28:16,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:28:16,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:28:16,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:28:16,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:16,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:16,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:28:16,864 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:28:16,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:28:16,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:28:16,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:28:16,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:28:16,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:28:16,865 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:28:16,865 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:28:16,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:28:16,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:28:16,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:28:16,868 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:28:16,868 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:28:16,870 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:28:16,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:28:16,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:28:16,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:28:16,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:16,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:28:16,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:28:16,906 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:28:16,907 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:16,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:28:16,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:28:16,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:28:16,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:28:16,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:28:16,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:16,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:16,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:16,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:16,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:16,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:16,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:28:16,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:16,911 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:28:16,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:16,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:16,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:16,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:16,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:16,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:16,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:16,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:16,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:16,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:16,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:16,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:16,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:16,988 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:16,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:16,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:16,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:16,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:17,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:17,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:17,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:17,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:17,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:17,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:17,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:17,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:17,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:17,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:17,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:17,021 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:17,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:17,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:17,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:17,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:17,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:17,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:17,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:17,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:17,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:17,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:17,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:17,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:17,026 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:17,027 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:17,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:17,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:17,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:17,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:17,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:17,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:17,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:17,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:17,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:17,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:17,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:17,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:17,038 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:17,038 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:17,038 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:17,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:17,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:17,115 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:28:17,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:28:17,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:17,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:17,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:28:17,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:28:17,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:28:17,121 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:28:17,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:28:17,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:28:17,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:28:17,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:17,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:17,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:17,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:28:17,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:28:17,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:17,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:17,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:17,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:17,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:17,140 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:28:17,142 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:28:17,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:28:17,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:28:17,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:28:17,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:28:17,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:28:17,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:17,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:17,145 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:17,145 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:17,146 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:17,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:17,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:17,149 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,150 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:17,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:17,153 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,154 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:17,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:17,156 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:17,159 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,159 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:17,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:17,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:17,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:17,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:17,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:17,166 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:17,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:17,168 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:17,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:17,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:17,173 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,173 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:17,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:17,176 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,177 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:17,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:17,179 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,179 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:17,182 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,183 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:17,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:17,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:17,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:17,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:17,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:17,191 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:17,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:17,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:17,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:17,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:17,197 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:17,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:17,201 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,201 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:17,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:17,204 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,204 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:17,207 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,208 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:17,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:17,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:17,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:17,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:17,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:17,215 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:17,216 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:17,216 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:17,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:17,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:17,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:17,222 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,222 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:17,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:17,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:17,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:17,227 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:17,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:17,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:17,231 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:17,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:17,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:17,235 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,236 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:17,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:17,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:17,243 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,244 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:17,251 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,251 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:17,255 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:17,259 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,260 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:17,264 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:17,276 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:17,280 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,280 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:17,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:17,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:17,281 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:17,282 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:17,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:17,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:17,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:28:17,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:28:17,283 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:28:17,284 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:28:17,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:28:17,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:28:17,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:28:17,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:28:17,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:17,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:17,285 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:28:17,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:28:17,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:28:17,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:28:17,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:28:17,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:28:17,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:28:17,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:17,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:17,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:17,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:17,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:17,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:17,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,290 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:28:17,291 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:17,291 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:17,292 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:17,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:28:17,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:28:17,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:28:17,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:28:17,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:28:17,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:28:17,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:17,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:17,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,296 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:28:17,296 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:28:17,296 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:17,296 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:17,296 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:28:17,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:28:17,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:28:17,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:28:17,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:28:17,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:28:17,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:28:17,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:28:17,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:28:17,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:28:17,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:17,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:17,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:17,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:17,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:17,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:28:17,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:28:17,311 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:28:17,312 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:28:17,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:28:17,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:28:17,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:28:17,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:28:17,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:28:17,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:17,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:17,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:17,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,315 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:17,315 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:17,315 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:28:17,315 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:17,316 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:17,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:17,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:17,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:17,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:17,328 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:28:17,332 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:28:17,333 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:28:17,334 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:17,334 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:17,334 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:17,335 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:17,335 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:17,335 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:17,335 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:17,336 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:17,337 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,337 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,338 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:17,338 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,338 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,338 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:17,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:17,340 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:28:17,340 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:17,341 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:17,341 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:17,342 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:28:17,342 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:28:17,342 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:28:17,343 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:28:17,343 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,343 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,343 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:17,343 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,344 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,350 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:28:17,351 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:28:17,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:28:17,352 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:28:17,352 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:17,352 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:17,352 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:17,353 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:28:17,353 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:17,354 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:28:17,355 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:28:17,356 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:17,356 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:28:17,357 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:17,357 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:17,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:28:17,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:28:17,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:28:17,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:28:17,359 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:28:17,360 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:28:17,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:28:17,362 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:28:17,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:17,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:28:17,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:28:17,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:28:17,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:17,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:28:17,412 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:28:17,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:17,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:17,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:28:17,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:28:17,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:28:17,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:28:17,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:28:17,424 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:17,424 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:17,425 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:17,425 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:28:17,426 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:28:17,456 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:28:17,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:28:17,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:28:17,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:28:17,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:28:17,525 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:17,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:28:17,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:28:17,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:28:17,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:28:17,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:28:17,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:28:17,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:28:17,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2017-09-25 20:28:17,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:28:17,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2017-09-25 20:28:17,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:28:17,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:28:17,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:28:17,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:28:17,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:28:17,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:28:17,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:17,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:28:17,535 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:28:17,537 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:17,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:28:17,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:28:17,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:28:17,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:28:17,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:28:17,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:28:17,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:28:17,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:17,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:17,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:17,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:17,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:28:17,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-09-25 20:28:17,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:28:17,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:28:17,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:17,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:17,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:17,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:17,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:17,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:17,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:17,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:17,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@363FF0C']
2017-09-25 20:28:17,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:28:17,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2017-09-25 20:28:17,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2017-09-25 20:28:17,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2017-09-25 20:28:17,546 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2017-09-25 20:28:17,546 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2017-09-25 20:28:17,546 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:28:17,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:28:17,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:28:17,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:28:17,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:28:17,549 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2017-09-25 20:28:17,551 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2017-09-25 20:28:17,551 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:28:17,552 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:28:17,552 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:17,552 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:17,552 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:17,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:28:17,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:28:17,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:28:17,553 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:28:17,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:17,554 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,555 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,555 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:28:17,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:28:17,556 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2017-09-25 20:28:17,557 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:28:17,557 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:28:17,558 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:28:17,558 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:28:17,559 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:28:17,559 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:28:17,559 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:28:17,559 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,560 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,560 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:28:17,560 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:28:17,561 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:28:17,577 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2017-09-25 20:28:17,578 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'WpfAddinApp.RestService'.]
2017-09-25 20:28:17,579 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 2 <object> elements defining objects.]
2017-09-25 20:28:17,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 2 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2017-09-25 20:28:17,580 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2017-09-25 20:28:17,580 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:28:17,580 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:28:17,580 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:28:17,581 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [2 objects defined in application context [wpfaddinapp].]
2017-09-25 20:28:17,581 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:28:17,583 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:28:17,584 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2017-09-25 20:28:17,584 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:28:17,585 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:28:17,586 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:28:17,587 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:28:17,587 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:17,587 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:28:17,588 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:28:17,588 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2017-09-25 20:28:17,588 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2017-09-25 20:28:17,665 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'wpfaddinapp'.]
2017-09-25 20:28:18,931 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2017-09-25 20:28:18,932 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2017-09-25 20:28:18,944 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2017-09-25 20:28:18,947 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2017-09-25 20:28:18,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:28:18,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2017-09-25 20:28:18,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2017-09-25 20:28:18,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2017-09-25 20:28:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2017-09-25 20:28:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2017-09-25 20:28:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2017-09-25 20:28:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2017-09-25 20:28:18,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:18,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:18,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:18,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:18,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:18,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:18,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:18,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:18,974 INFO  [8] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 77,996,032.00, Total Thread Count: 37
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2017-09-25 20:28:18,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl4 => canonical name WpfAddinApp.UserControl4]
2017-09-25 20:28:18,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:18,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl4' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl4]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:18,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl4'.]
2017-09-25 20:28:18,977 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl4] using constructor [Void .ctor()]]
2017-09-25 20:28:18,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:28:18,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:28:18,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:28:18,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:28:18,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:28:18,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:18,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:28:18,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:28:18,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:28:18,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:28:18,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:28:18,985 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:28:18,986 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:28:18,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:28:18,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:28:18,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:18,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:28:18,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:28:19,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:19,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:19,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:19,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:19,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:28:19,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:28:19,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:28:19,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:28:19,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,173 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl4' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl4' to allow for resolving potential circular references]
2017-09-25 20:28:19,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl4']
2017-09-25 20:28:19,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:19,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:19,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl4']
2017-09-25 20:28:19,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl4'.]
2017-09-25 20:28:19,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl4]
2017-09-25 20:28:19,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:28:19,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:28:19,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:28:19,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:28:19,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:28:19,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:28:19,184 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:28:19,184 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:28:19,184 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:28:19,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:28:19,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:19,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:28:19,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:28:19,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:19,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:28:19,186 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:19,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:19,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:28:19,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:28:19,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:28:19,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:28:19,189 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:28:19,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:19,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:28:19,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:28:19,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:28:19,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:28:19,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:19,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:19,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:28:19,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:28:19,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:28:19,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:28:19,194 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,195 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:19,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:19,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:28:19,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:28:19,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:28:19,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:28:19,197 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:19,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:19,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:28:19,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:28:19,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:28:19,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:28:19,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:28:19,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:19,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:19,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:28:19,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:28:19,202 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:28:19,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:28:19,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-09-25 20:28:19,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:28:19,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:28:19,283 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:28:19,283 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:28:19,284 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:28:19,284 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-09-25 20:28:19,284 TRACE [14] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-09-25 20:28:19,285 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,285 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,285 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,285 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,285 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,286 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-09-25 20:28:19,287 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-09-25 20:28:19,288 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-09-25 20:28:19,288 DEBUG [14] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-09-25 20:28:19,288 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-09-25 20:28:19,288 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:28:19,288 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:28:19,338 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-09-25 20:28:19,339 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-09-25 20:28:19,339 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-09-25 20:28:19,339 DEBUG [14] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-09-25 20:28:19,495 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:28:19,496 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:28:19,496 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:32:06,021 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:32:06,082 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:32:06,109 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:32:06,109 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:32:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:32:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:32:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:32:06,112 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:32:06,359 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:32:06,359 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:32:06,363 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:32:06,381 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:32:06,410 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:32:06,543 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:32:06,549 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:32:06,582 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:32:06,669 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:32:06,678 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:32:06,684 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:32:06,686 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:32:06,687 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:32:06,688 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:32:06,689 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:32:06,689 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:32:06,690 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:06,690 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:06,690 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:32:06,691 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:06,691 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:06,693 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:32:06,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:32:06,694 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:32:06,694 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:32:06,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:32:06,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:32:06,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:32:06,697 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:32:06,707 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:32:06,709 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:32:06,712 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:32:06,716 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:32:06,718 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:32:06,719 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:32:06,721 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:32:06,722 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:32:06,723 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:32:06,723 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:32:06,724 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:32:06,725 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:32:06,725 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:32:06,745 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:32:06,747 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:32:06,747 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:32:06,748 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:32:06,748 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:32:06,748 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:32:06,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:32:06,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:32:06,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:32:06,780 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:32:06,781 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:06,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:32:06,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:32:06,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:32:06,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:32:06,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:32:06,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:32:06,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:32:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:32:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:32:06,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:32:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:32:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:32:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:06,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:32:06,806 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:32:06,807 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:32:06,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:32:06,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:32:06,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:32:06,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:32:06,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:32:06,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:32:06,810 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:32:06,810 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:32:06,811 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:32:06,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:32:06,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:32:06,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:32:06,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:32:06,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:32:06,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:32:06,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:32:06,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:32:06,815 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:32:06,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:32:06,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:32:06,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:32:06,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:32:06,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:32:06,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:32:06,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:32:06,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:32:06,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:32:06,819 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:32:06,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:32:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:32:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:32:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:32:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:32:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:32:06,824 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:32:06,824 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:32:06,824 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:32:06,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:32:06,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:32:06,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:32:06,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:32:06,826 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:32:06,826 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:32:06,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:32:06,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:32:06,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:32:06,828 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:32:06,828 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:32:06,829 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:32:06,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:32:06,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:32:06,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:32:06,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:32:06,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:32:06,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:32:06,859 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:32:06,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:32:06,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:32:06,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:32:06,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:32:06,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:32:06,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:32:06,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:32:06,862 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:32:06,862 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:32:06,862 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:32:06,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:06,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:06,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:06,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:06,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:32:06,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:32:06,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:32:06,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:32:06,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:32:06,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:32:06,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:32:06,958 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:32:06,959 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:32:06,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:32:06,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:06,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:06,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:06,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:06,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:32:06,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:06,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:32:06,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:32:06,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:32:06,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:32:06,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:32:06,995 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:32:06,995 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:32:06,996 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:32:06,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:06,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:32:07,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:07,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:07,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:07,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:07,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:32:07,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:32:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:32:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:32:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:32:07,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:32:07,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:32:07,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:32:07,012 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:32:07,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:32:07,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:07,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:07,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:07,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:07,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:32:07,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:32:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:32:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:32:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:32:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:32:07,071 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:32:07,071 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:32:07,071 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:32:07,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:32:07,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:32:07,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:32:07,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:32:07,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:32:07,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:32:07,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:32:07,144 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:32:07,145 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:32:07,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:32:07,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:32:07,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:32:07,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:32:07,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:32:07,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:32:07,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:07,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:07,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:07,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:07,164 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:32:07,164 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:32:07,165 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:32:07,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:32:07,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:32:07,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:32:07,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:32:07,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:32:07,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:32:07,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:32:07,168 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:32:07,168 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:32:07,169 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:32:07,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:32:07,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:32:07,176 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,176 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:32:07,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:32:07,182 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,182 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:32:07,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:32:07,185 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,186 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:32:07,190 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,191 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:32:07,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:32:07,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:32:07,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:32:07,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:32:07,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:32:07,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:32:07,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:32:07,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:32:07,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:32:07,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:32:07,203 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,203 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:32:07,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:32:07,206 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:32:07,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:32:07,210 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,217 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:32:07,222 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,223 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:32:07,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:32:07,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:32:07,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:32:07,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:32:07,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:32:07,229 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:32:07,230 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:32:07,230 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:32:07,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:32:07,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:32:07,233 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,234 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:32:07,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:32:07,238 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,238 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:32:07,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:32:07,242 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,243 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:32:07,248 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,249 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:32:07,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:32:07,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:32:07,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:32:07,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:32:07,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:32:07,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:32:07,256 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:32:07,256 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:32:07,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:32:07,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:32:07,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:32:07,263 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,264 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:32:07,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:32:07,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:32:07,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:32:07,268 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,268 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:32:07,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:32:07,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:32:07,273 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,273 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:32:07,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:32:07,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:32:07,279 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,280 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:32:07,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:32:07,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:32:07,284 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,285 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:32:07,291 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,293 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:32:07,297 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:32:07,301 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,301 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:32:07,304 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,304 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:32:07,319 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,320 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:32:07,326 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,326 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:32:07,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:32:07,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:32:07,328 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:32:07,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:32:07,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:32:07,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:32:07,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:32:07,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:32:07,331 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:32:07,331 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:32:07,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:32:07,333 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:32:07,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:32:07,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:32:07,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:32:07,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:32:07,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:32:07,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:32:07,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:32:07,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:32:07,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:32:07,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:32:07,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:32:07,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:32:07,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:32:07,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:32:07,338 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:32:07,338 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:32:07,338 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:32:07,339 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:32:07,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:32:07,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:32:07,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:32:07,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:32:07,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:32:07,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:32:07,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:32:07,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:32:07,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:32:07,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:32:07,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:32:07,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:32:07,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:32:07,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:32:07,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:32:07,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:32:07,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:32:07,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:32:07,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@2A93513']
2017-09-25 20:32:07,344 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:32:07,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:32:07,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:32:07,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:32:07,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:32:07,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:32:07,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:32:07,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:32:07,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:32:07,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:32:07,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:32:07,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:32:07,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:32:07,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:32:07,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:32:07,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:32:07,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:32:07,355 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:32:07,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:32:07,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:32:07,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:32:07,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:32:07,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:32:07,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:32:07,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:32:07,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:32:07,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:32:07,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:32:07,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:32:07,359 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@2A93513']
2017-09-25 20:32:07,360 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:32:07,360 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:32:07,360 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:32:07,360 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:32:07,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:32:07,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:32:07,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:32:07,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:32:07,371 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:32:07,375 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:32:07,376 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:32:07,376 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:32:07,377 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:32:07,377 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:32:07,377 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:32:07,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:32:07,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:32:07,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:32:07,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:32:07,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:07,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:07,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:32:07,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:07,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:07,380 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:32:07,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:32:07,381 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:32:07,382 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:32:07,382 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:32:07,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:32:07,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:32:07,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:32:07,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:32:07,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:32:07,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:07,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:07,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:32:07,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:32:07,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:32:07,393 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:32:07,393 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:32:07,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:32:07,394 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:32:07,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:32:07,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:32:07,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:32:07,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:32:07,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:32:07,397 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:32:07,399 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:32:07,399 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:32:07,400 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:32:07,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:32:07,401 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:32:07,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:32:07,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:32:07,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:32:07,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:32:07,403 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:32:07,403 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:32:07,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:32:07,406 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:32:07,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:32:07,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:32:07,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:32:07,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:32:07,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:32:07,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:32:07,447 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:32:07,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:32:07,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:32:07,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:32:07,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:32:07,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:32:07,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:32:07,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:32:07,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:32:07,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:32:07,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:32:07,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:32:07,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:32:07,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:32:07,458 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:32:07,458 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:32:07,460 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:32:07,504 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:32:07,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:32:07,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:32:07,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:32:07,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:32:07,602 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:32:07,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:32:07,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:32:07,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:32:07,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:32:07,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:32:07,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:32:07,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:32:07,606 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:32:07,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:32:07,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:32:07,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:32:07,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:32:07,607 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:32:07,607 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:32:07,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:32:07,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:32:07,863 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:32:07,863 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:32:07,863 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-09-25 20:54:08,501 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-09-25 20:54:08,539 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-09-25 20:54:08,548 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-09-25 20:54:08,549 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-09-25 20:54:08,550 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-09-25 20:54:08,550 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-09-25 20:54:08,551 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-09-25 20:54:08,552 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-09-25 20:54:08,851 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-09-25 20:54:08,851 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-09-25 20:54:08,856 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-09-25 20:54:08,878 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:54:08,913 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:54:08,971 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:54:08,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:54:09,044 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:54:09,186 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-09-25 20:54:09,195 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:54:09,200 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:54:09,203 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:54:09,204 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:54:09,205 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:54:09,205 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:54:09,205 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:54:09,205 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:09,206 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:09,206 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:54:09,206 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:09,206 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:09,207 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:54:09,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:54:09,209 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-09-25 20:54:09,210 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:54:09,212 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:54:09,212 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:54:09,212 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-09-25 20:54:09,213 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:54:09,227 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:54:09,229 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-09-25 20:54:09,231 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:54:09,234 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-09-25 20:54:09,236 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:54:09,237 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:54:09,246 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:54:09,262 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:54:09,263 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-09-25 20:54:09,264 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-09-25 20:54:09,264 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-09-25 20:54:09,265 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-09-25 20:54:09,265 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-09-25 20:54:09,297 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-09-25 20:54:09,300 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-09-25 20:54:09,300 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-09-25 20:54:09,301 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-09-25 20:54:09,301 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-09-25 20:54:09,302 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-09-25 20:54:09,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:54:09,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:54:09,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-09-25 20:54:09,334 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-09-25 20:54:09,335 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-09-25 20:54:09,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-09-25 20:54:09,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-09-25 20:54:09,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-09-25 20:54:09,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-09-25 20:54:09,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:54:09,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:54:09,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-09-25 20:54:09,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:54:09,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-09-25 20:54:09,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:54:09,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:54:09,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,376 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-09-25 20:54:09,376 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:54:09,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:54:09,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-09-25 20:54:09,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-09-25 20:54:09,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:54:09,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-09-25 20:54:09,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-09-25 20:54:09,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:54:09,378 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:54:09,378 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:54:09,379 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:54:09,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-09-25 20:54:09,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-09-25 20:54:09,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-09-25 20:54:09,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:54:09,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-09-25 20:54:09,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:54:09,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:54:09,383 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:54:09,383 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:54:09,384 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:54:09,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:54:09,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-09-25 20:54:09,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:54:09,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-09-25 20:54:09,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-09-25 20:54:09,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-09-25 20:54:09,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-09-25 20:54:09,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-09-25 20:54:09,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:54:09,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-09-25 20:54:09,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:54:09,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:54:09,398 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:54:09,398 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:54:09,398 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:54:09,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-09-25 20:54:09,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-09-25 20:54:09,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-09-25 20:54:09,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-09-25 20:54:09,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:54:09,402 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:54:09,403 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-09-25 20:54:09,403 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-09-25 20:54:09,403 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-09-25 20:54:09,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-09-25 20:54:09,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-09-25 20:54:09,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-09-25 20:54:09,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-09-25 20:54:09,405 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-09-25 20:54:09,405 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-09-25 20:54:09,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-09-25 20:54:09,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-09-25 20:54:09,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-09-25 20:54:09,407 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-09-25 20:54:09,407 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-09-25 20:54:09,408 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-09-25 20:54:09,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-09-25 20:54:09,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-09-25 20:54:09,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-09-25 20:54:09,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:54:09,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:54:09,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-09-25 20:54:09,489 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-09-25 20:54:09,489 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-09-25 20:54:09,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-09-25 20:54:09,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-09-25 20:54:09,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-09-25 20:54:09,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-09-25 20:54:09,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:54:09,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:54:09,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:54:09,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:54:09,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:54:09,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:54:09,494 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-09-25 20:54:09,494 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:54:09,494 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-09-25 20:54:09,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:54:09,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:54:09,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:54:09,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:54:09,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:54:09,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:54:09,557 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:54:09,557 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:54:09,558 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:54:09,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:54:09,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:54:09,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:54:09,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:54:09,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:54:09,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:54:09,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:54:09,616 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:54:09,616 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:54:09,616 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:54:09,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:54:09,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:54:09,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:54:09,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:54:09,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:54:09,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:54:09,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:54:09,622 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:54:09,623 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:54:09,623 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:54:09,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:54:09,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-09-25 20:54:09,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-09-25 20:54:09,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-09-25 20:54:09,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-09-25 20:54:09,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-09-25 20:54:09,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-09-25 20:54:09,636 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-09-25 20:54:09,637 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-09-25 20:54:09,637 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-09-25 20:54:09,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-09-25 20:54:09,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-09-25 20:54:09,768 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-09-25 20:54:09,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-09-25 20:54:09,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:54:09,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:54:09,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:54:09,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:54:09,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-09-25 20:54:09,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-09-25 20:54:09,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-09-25 20:54:09,776 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-09-25 20:54:09,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-09-25 20:54:09,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-09-25 20:54:09,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-09-25 20:54:09,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:54:09,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:54:09,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:54:09,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:54:09,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-09-25 20:54:09,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:09,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:09,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:09,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:09,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-09-25 20:54:09,796 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-09-25 20:54:09,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-09-25 20:54:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-09-25 20:54:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-09-25 20:54:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-09-25 20:54:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-09-25 20:54:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-09-25 20:54:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:54:09,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:54:09,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:54:09,799 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:54:09,800 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:54:09,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:54:09,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:54:09,805 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:54:09,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:54:09,814 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:54:09,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:54:09,819 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:54:09,826 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,827 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:54:09,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:54:09,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:54:09,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:54:09,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:54:09,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:54:09,838 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:54:09,838 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:54:09,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:54:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:54:09,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:54:09,848 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,848 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:54:09,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:54:09,861 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:54:09,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:54:09,869 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:54:09,880 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,881 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:54:09,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:54:09,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:54:09,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:54:09,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:54:09,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:54:09,890 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:54:09,890 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:54:09,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:54:09,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:54:09,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:54:09,896 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:54:09,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:54:09,902 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,902 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:54:09,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:54:09,910 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:54:09,917 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-09-25 20:54:09,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-09-25 20:54:09,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-09-25 20:54:09,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-09-25 20:54:09,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-09-25 20:54:09,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-09-25 20:54:09,930 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-09-25 20:54:09,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-09-25 20:54:09,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-09-25 20:54:09,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-09-25 20:54:09,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-09-25 20:54:09,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-09-25 20:54:09,939 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-09-25 20:54:09,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-09-25 20:54:09,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-09-25 20:54:09,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-09-25 20:54:09,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,947 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-09-25 20:54:09,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-09-25 20:54:09,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-09-25 20:54:09,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,952 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-09-25 20:54:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-09-25 20:54:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-09-25 20:54:09,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-09-25 20:54:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-09-25 20:54:09,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:54:09,963 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,964 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:54:09,968 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:54:09,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,974 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:54:09,980 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,980 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:54:09,983 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,983 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:54:09,990 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,990 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-09-25 20:54:09,994 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,995 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-09-25 20:54:09,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-09-25 20:54:09,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-09-25 20:54:09,996 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-09-25 20:54:09,996 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-09-25 20:54:09,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-09-25 20:54:09,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-09-25 20:54:09,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-09-25 20:54:09,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:09,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-09-25 20:54:09,998 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-09-25 20:54:09,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-09-25 20:54:10,000 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-09-25 20:54:10,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:54:10,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-09-25 20:54:10,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:10,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-09-25 20:54:10,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-09-25 20:54:10,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:54:10,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:10,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-09-25 20:54:10,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-09-25 20:54:10,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-09-25 20:54:10,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-09-25 20:54:10,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-09-25 20:54:10,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:54:10,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:54:10,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:54:10,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:54:10,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-09-25 20:54:10,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-09-25 20:54:10,004 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:54:10,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:54:10,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-09-25 20:54:10,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-09-25 20:54:10,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-09-25 20:54:10,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-09-25 20:54:10,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-09-25 20:54:10,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-09-25 20:54:10,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-09-25 20:54:10,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-09-25 20:54:10,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-09-25 20:54:10,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-09-25 20:54:10,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-09-25 20:54:10,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:54:10,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:54:10,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:54:10,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:54:10,010 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-09-25 20:54:10,010 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-09-25 20:54:10,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-09-25 20:54:10,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@2A93513']
2017-09-25 20:54:10,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-09-25 20:54:10,013 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-09-25 20:54:10,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-09-25 20:54:10,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-09-25 20:54:10,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-09-25 20:54:10,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-09-25 20:54:10,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-09-25 20:54:10,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:54:10,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:54:10,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-09-25 20:54:10,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-09-25 20:54:10,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-09-25 20:54:10,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-09-25 20:54:10,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2017-09-25 20:54:10,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2017-09-25 20:54:10,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:10,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2017-09-25 20:54:10,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-09-25 20:54:10,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-09-25 20:54:10,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-09-25 20:54:10,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-09-25 20:54:10,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:54:10,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2017-09-25 20:54:10,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:10,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2017-09-25 20:54:10,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2017-09-25 20:54:10,028 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:10,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2017-09-25 20:54:10,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2017-09-25 20:54:10,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2017-09-25 20:54:10,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2017-09-25 20:54:10,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2017-09-25 20:54:10,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:54:10,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:54:10,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:54:10,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:54:10,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:54:10,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:54:10,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@2A93513']
2017-09-25 20:54:10,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2017-09-25 20:54:10,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2017-09-25 20:54:10,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2017-09-25 20:54:10,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2017-09-25 20:54:10,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-09-25 20:54:10,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-09-25 20:54:10,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-09-25 20:54:10,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-09-25 20:54:10,043 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2017-09-25 20:54:10,046 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2017-09-25 20:54:10,048 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-09-25 20:54:10,049 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-09-25 20:54:10,050 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:54:10,052 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:54:10,053 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:54:10,053 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-09-25 20:54:10,054 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-09-25 20:54:10,054 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-09-25 20:54:10,054 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-09-25 20:54:10,054 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:10,054 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:10,057 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:54:10,057 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:10,058 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:10,058 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-09-25 20:54:10,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-09-25 20:54:10,061 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2017-09-25 20:54:10,061 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-09-25 20:54:10,062 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-09-25 20:54:10,062 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-09-25 20:54:10,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2017-09-25 20:54:10,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2017-09-25 20:54:10,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2017-09-25 20:54:10,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2017-09-25 20:54:10,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:10,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:10,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-09-25 20:54:10,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-09-25 20:54:10,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-09-25 20:54:10,078 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2017-09-25 20:54:10,079 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2017-09-25 20:54:10,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2017-09-25 20:54:10,080 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2017-09-25 20:54:10,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-09-25 20:54:10,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-09-25 20:54:10,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-09-25 20:54:10,081 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2017-09-25 20:54:10,081 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-09-25 20:54:10,082 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:54:10,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2017-09-25 20:54:10,084 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-09-25 20:54:10,084 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-09-25 20:54:10,087 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-09-25 20:54:10,087 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-09-25 20:54:10,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:54:10,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2017-09-25 20:54:10,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2017-09-25 20:54:10,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2017-09-25 20:54:10,089 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2017-09-25 20:54:10,090 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:10,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2017-09-25 20:54:10,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2017-09-25 20:54:10,093 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2017-09-25 20:54:10,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:54:10,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2017-09-25 20:54:10,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2017-09-25 20:54:10,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2017-09-25 20:54:10,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:54:10,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2017-09-25 20:54:10,132 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2017-09-25 20:54:10,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:54:10,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-09-25 20:54:10,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-09-25 20:54:10,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-09-25 20:54:10,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:54:10,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-09-25 20:54:10,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2017-09-25 20:54:10,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2017-09-25 20:54:10,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2017-09-25 20:54:10,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:54:10,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:54:10,147 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:54:10,148 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-09-25 20:54:10,148 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-09-25 20:54:10,148 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2017-09-25 20:54:10,150 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2017-09-25 20:54:10,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2017-09-25 20:54:10,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2017-09-25 20:54:10,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2017-09-25 20:54:10,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2017-09-25 20:54:10,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2017-09-25 20:54:10,279 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2017-09-25 20:54:10,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2017-09-25 20:54:10,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2017-09-25 20:54:10,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2017-09-25 20:54:10,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2017-09-25 20:54:10,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2017-09-25 20:54:10,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2017-09-25 20:54:10,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2017-09-25 20:54:10,285 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-09-25 20:54:10,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-09-25 20:54:10,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-09-25 20:54:10,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-09-25 20:54:10,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-09-25 20:54:10,286 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-09-25 20:54:10,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-09-25 20:54:10,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-09-25 20:54:10,536 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-09-25 20:54:10,537 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-09-25 20:54:10,537 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
