2018-05-22 20:35:54,458 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:35:54,517 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:35:54,527 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:35:54,528 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:35:54,529 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:35:54,529 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:35:54,529 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:35:54,529 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:36:49,665 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:36:49,683 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:36:49,689 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:36:49,689 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:36:49,690 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:36:49,690 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:36:49,690 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:36:49,691 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:36:58,282 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-22 20:36:58,282 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-22 20:36:58,307 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-22 20:38:16,510 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:38:16,537 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:38:16,543 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:38:16,543 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:38:16,544 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:38:16,544 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:38:16,545 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:38:16,545 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:38:23,335 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-22 20:38:23,335 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-22 20:38:23,339 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-22 20:38:23,375 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:38:23,409 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:38:23,439 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:38:23,448 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:38:23,473 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:38:23,635 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:38:23,637 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:38:23,662 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:38:23,663 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:38:23,663 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:38:23,664 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:38:23,664 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:38:23,664 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:38:23,664 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:23,665 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:23,665 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:38:23,669 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:23,669 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:23,670 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:38:23,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:38:23,671 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-22 20:38:23,671 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:38:23,673 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:38:23,673 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:38:23,673 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-22 20:38:23,673 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:38:23,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:38:23,697 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:38:23,698 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:38:23,700 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-22 20:38:23,702 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:38:23,703 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:38:23,704 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:38:23,705 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:38:23,705 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-22 20:38:23,706 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-22 20:38:23,706 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-22 20:38:23,707 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-22 20:38:23,707 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-22 20:38:23,751 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-22 20:38:23,753 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-22 20:38:23,753 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-22 20:38:23,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-22 20:38:23,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-22 20:38:23,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-22 20:38:23,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:38:23,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:38:23,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-22 20:38:23,772 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-22 20:38:23,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:23,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-22 20:38:23,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-22 20:38:23,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-22 20:38:23,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-22 20:38:23,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:38:23,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:38:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:38:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-22 20:38:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:38:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-22 20:38:23,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:38:23,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:38:23,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:23,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:23,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:23,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:23,788 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-22 20:38:23,788 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:38:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:38:23,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:38:23,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:38:23,790 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:38:23,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:38:23,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-22 20:38:23,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-22 20:38:23,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-22 20:38:23,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:38:23,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:38:23,793 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:38:23,793 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-22 20:38:23,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-22 20:38:23,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-22 20:38:23,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:38:23,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-22 20:38:23,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:38:23,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:38:23,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:38:23,797 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:38:23,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:38:23,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-22 20:38:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-22 20:38:23,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-22 20:38:23,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-22 20:38:23,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:38:23,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:38:23,800 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:38:23,800 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:38:23,801 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:38:23,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-22 20:38:23,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-22 20:38:23,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-22 20:38:23,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-22 20:38:23,802 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-22 20:38:23,802 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-22 20:38:23,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:38:23,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:38:23,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:38:23,803 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-22 20:38:23,804 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-22 20:38:23,804 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-22 20:38:23,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-22 20:38:23,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-22 20:38:23,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-22 20:38:23,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:38:23,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:38:23,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:23,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-22 20:38:23,879 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-22 20:38:23,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:38:23,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:38:23,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:38:23,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:38:23,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:38:23,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:38:23,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:38:23,881 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-22 20:38:23,881 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:38:23,881 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-22 20:38:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:38:24,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:38:24,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:38:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:38:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:38:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:38:24,081 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:38:24,081 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:38:24,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:38:24,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:38:24,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:38:24,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:38:24,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:38:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:38:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:38:24,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:38:24,590 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:38:24,591 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:38:24,591 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:38:24,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:38:24,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:38:24,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:38:24,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:38:24,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:38:24,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:38:24,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:38:24,594 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:38:24,594 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:38:24,595 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:38:24,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:38:24,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:38:24,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:38:24,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:38:24,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:38:24,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:38:24,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:38:24,598 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:38:24,598 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:38:24,598 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:38:24,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:38:24,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:38:24,688 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-22 20:38:24,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-22 20:38:24,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-22 20:38:24,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:38:24,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:38:24,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-22 20:38:24,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-22 20:38:24,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-22 20:38:24,691 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-22 20:38:24,692 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-22 20:38:24,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-22 20:38:24,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-22 20:38:24,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-22 20:38:24,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-22 20:38:24,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-22 20:38:24,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-22 20:38:24,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:38:24,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:38:24,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:38:24,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:38:24,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-22 20:38:24,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,706 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-22 20:38:24,706 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:38:24,707 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:38:24,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-22 20:38:24,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-22 20:38:24,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-22 20:38:24,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-22 20:38:24,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:38:24,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:38:24,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:38:24,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:38:24,709 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:38:24,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:38:24,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:38:24,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:38:24,712 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,712 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:38:24,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:38:24,715 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,716 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:38:24,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:38:24,718 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:38:24,721 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,721 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:38:24,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:38:24,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:38:24,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:38:24,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:38:24,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:38:24,726 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:38:24,726 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:38:24,727 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:38:24,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:38:24,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:38:24,729 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,730 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:38:24,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:38:24,732 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,732 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:38:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:38:24,735 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,736 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:38:24,738 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:38:24,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:38:24,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:38:24,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:38:24,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:38:24,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:38:24,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:38:24,743 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:38:24,743 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:38:24,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:38:24,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:38:24,746 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,746 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:38:24,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:38:24,749 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,750 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:38:24,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:38:24,753 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,753 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:38:24,756 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,756 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:38:24,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:38:24,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:38:24,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:38:24,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:38:24,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:38:24,762 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:38:24,763 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:38:24,763 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:38:24,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:38:24,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:38:24,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:38:24,768 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,769 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:38:24,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:38:24,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:38:24,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:38:24,774 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,774 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:38:24,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:38:24,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:38:24,779 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,779 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:38:24,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:38:24,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:38:24,783 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:38:24,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:38:24,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:38:24,788 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,788 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:38:24,793 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,793 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:38:24,797 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:38:24,800 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,801 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:38:24,804 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,804 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:38:24,806 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:38:24,808 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,809 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:38:24,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:38:24,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:38:24,815 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:38:24,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:38:24,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:38:24,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-22 20:38:24,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-22 20:38:24,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-22 20:38:24,816 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-22 20:38:24,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-22 20:38:24,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-22 20:38:24,818 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-22 20:38:24,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:38:24,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-22 20:38:24,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-22 20:38:24,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-22 20:38:24,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:38:24,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-22 20:38:24,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:38:24,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:38:24,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:38:24,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:38:24,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:38:24,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:38:24,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:38:24,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:38:24,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-22 20:38:24,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-22 20:38:24,822 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:38:24,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:38:24,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-22 20:38:24,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-22 20:38:24,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-22 20:38:24,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-22 20:38:24,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-22 20:38:24,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-22 20:38:24,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:38:24,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:38:24,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:38:24,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:38:24,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-22 20:38:24,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-22 20:38:24,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-22 20:38:24,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:38:24,826 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-22 20:38:24,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-22 20:38:24,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-22 20:38:24,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-22 20:38:24,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-22 20:38:24,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-22 20:38:24,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-22 20:38:24,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:38:24,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:38:24,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:38:24,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-22 20:38:24,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:38:24,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:38:24,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2018-05-22 20:38:24,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2018-05-22 20:38:24,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2018-05-22 20:38:24,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:38:24,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:38:24,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:38:24,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:38:24,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:38:24,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-22 20:38:24,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:24,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-22 20:38:24,838 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-22 20:38:24,838 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-22 20:38:24,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-22 20:38:24,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-22 20:38:24,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-22 20:38:24,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-22 20:38:24,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:38:24,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:38:24,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:38:24,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:38:24,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:38:24,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:38:24,841 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:38:24,842 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:38:24,842 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2018-05-22 20:38:24,842 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2018-05-22 20:38:24,842 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:38:24,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:38:24,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-22 20:38:24,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:38:24,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:38:24,850 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2018-05-22 20:38:24,870 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2018-05-22 20:38:24,871 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:38:24,871 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:38:24,872 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:38:24,872 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:38:24,872 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:38:24,872 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:38:24,873 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:38:24,873 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:38:24,873 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:38:24,873 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:24,874 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:24,874 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:38:24,874 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:24,874 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:24,874 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:38:24,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:38:24,877 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2018-05-22 20:38:24,877 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:38:24,890 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:38:24,890 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:38:24,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-22 20:38:24,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-22 20:38:24,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-22 20:38:24,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-22 20:38:24,892 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:24,892 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:24,892 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:38:24,892 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:38:24,893 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:38:24,899 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2018-05-22 20:38:24,900 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-22 20:38:24,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2018-05-22 20:38:24,900 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2018-05-22 20:38:24,900 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:38:24,901 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:38:24,901 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:38:24,902 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2018-05-22 20:38:24,902 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:38:24,904 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:38:24,905 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:38:24,905 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:38:24,906 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-22 20:38:24,906 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:38:24,907 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:38:24,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:38:24,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2018-05-22 20:38:24,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2018-05-22 20:38:24,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2018-05-22 20:38:24,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2018-05-22 20:38:24,908 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:24,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2018-05-22 20:38:24,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2018-05-22 20:38:24,911 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2018-05-22 20:38:24,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:38:24,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:38:24,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2018-05-22 20:38:24,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:38:24,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:38:24,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:38:24,947 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2018-05-22 20:38:24,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:38:24,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:38:24,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:38:24,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:38:24,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:38:24,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:38:24,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2018-05-22 20:38:24,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2018-05-22 20:38:24,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2018-05-22 20:38:24,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:38:24,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:38:24,956 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:38:24,957 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:38:24,957 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:38:24,957 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2018-05-22 20:38:24,958 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2018-05-22 20:38:25,248 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2018-05-22 20:38:25,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:38:25,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2018-05-22 20:38:25,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:38:25,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:38:25,681 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:38:25,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2018-05-22 20:38:25,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2018-05-22 20:38:25,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2018-05-22 20:38:25,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2018-05-22 20:38:25,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2018-05-22 20:38:25,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2018-05-22 20:38:25,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2018-05-22 20:38:25,704 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-22 20:38:25,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-22 20:38:25,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-22 20:38:25,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:38:25,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-22 20:38:25,705 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-22 20:38:25,705 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-22 20:38:25,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-22 20:38:25,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-22 20:38:26,283 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-22 20:38:26,283 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-22 20:38:26,283 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-22 20:39:31,781 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:39:31,800 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:39:31,805 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:39:31,806 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:39:31,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:39:31,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:39:31,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:39:31,808 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:39:41,000 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-22 20:39:41,001 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-22 20:39:41,005 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-22 20:39:41,018 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:39:41,035 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:39:41,057 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:39:41,059 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:39:41,064 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:39:41,095 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:39:41,097 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:39:41,100 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:39:41,101 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:39:41,102 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:39:41,102 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:39:41,102 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:39:41,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:39:41,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:39:41,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,110 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:39:41,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:39:41,111 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-22 20:39:41,111 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:39:41,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:39:41,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:39:41,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-22 20:39:41,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:39:41,119 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:39:41,121 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:39:41,122 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:39:41,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-22 20:39:41,127 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:39:41,127 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:39:41,128 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:39:41,129 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:39:41,130 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-22 20:39:41,130 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-22 20:39:41,130 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-22 20:39:41,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-22 20:39:41,131 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-22 20:39:41,145 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-22 20:39:41,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-22 20:39:41,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-22 20:39:41,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-22 20:39:41,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-22 20:39:41,148 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-22 20:39:41,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:39:41,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:39:41,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-22 20:39:41,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-22 20:39:41,166 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-22 20:39:41,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-22 20:39:41,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-22 20:39:41,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-22 20:39:41,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:39:41,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:39:41,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:39:41,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-22 20:39:41,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:39:41,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-22 20:39:41,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:39:41,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:39:41,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,183 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-22 20:39:41,183 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:39:41,183 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:39:41,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:39:41,184 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:39:41,184 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:39:41,185 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:39:41,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:39:41,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-22 20:39:41,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-22 20:39:41,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-22 20:39:41,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:39:41,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-22 20:39:41,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-22 20:39:41,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-22 20:39:41,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:39:41,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-22 20:39:41,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:39:41,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:39:41,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:39:41,189 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:39:41,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-22 20:39:41,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-22 20:39:41,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-22 20:39:41,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:39:41,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-22 20:39:41,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:39:41,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:39:41,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:39:41,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-22 20:39:41,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-22 20:39:41,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-22 20:39:41,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-22 20:39:41,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:39:41,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:39:41,195 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:39:41,195 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:39:41,196 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:39:41,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-22 20:39:41,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-22 20:39:41,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-22 20:39:41,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-22 20:39:41,197 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-22 20:39:41,197 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-22 20:39:41,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:39:41,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:39:41,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:39:41,199 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-22 20:39:41,199 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-22 20:39:41,200 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-22 20:39:41,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-22 20:39:41,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-22 20:39:41,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-22 20:39:41,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:39:41,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:39:41,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-22 20:39:41,211 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-22 20:39:41,211 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-22 20:39:41,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-22 20:39:41,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-22 20:39:41,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-22 20:39:41,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:39:41,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:39:41,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:39:41,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:39:41,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:39:41,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:39:41,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:39:41,213 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-22 20:39:41,213 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:39:41,213 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-22 20:39:41,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:39:41,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:39:41,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:39:41,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:39:41,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:39:41,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:39:41,242 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:39:41,243 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:39:41,243 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:39:41,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:39:41,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:39:41,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:39:41,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:39:41,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:39:41,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:39:41,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:39:41,261 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:39:41,262 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:39:41,262 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:39:41,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:39:41,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:39:41,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:39:41,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:39:41,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:39:41,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:39:41,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:39:41,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:39:41,266 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:39:41,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:39:41,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:39:41,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:39:41,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:39:41,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:39:41,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:39:41,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:39:41,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:39:41,270 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:39:41,271 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:39:41,271 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:39:41,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:39:41,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:39:41,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-22 20:39:41,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-22 20:39:41,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-22 20:39:41,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-22 20:39:41,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:39:41,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:39:41,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-22 20:39:41,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-22 20:39:41,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-22 20:39:41,330 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-22 20:39:41,331 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-22 20:39:41,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-22 20:39:41,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-22 20:39:41,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-22 20:39:41,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-22 20:39:41,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-22 20:39:41,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-22 20:39:41,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:39:41,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:39:41,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:39:41,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:39:41,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-22 20:39:41,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-22 20:39:41,345 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:39:41,345 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:39:41,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-22 20:39:41,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-22 20:39:41,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-22 20:39:41,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-22 20:39:41,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:39:41,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:39:41,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:39:41,347 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:39:41,347 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:39:41,348 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:39:41,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:39:41,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:39:41,351 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,351 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:39:41,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:39:41,354 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,354 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:39:41,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:39:41,356 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,356 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:39:41,359 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,359 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:39:41,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:39:41,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:39:41,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:39:41,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:39:41,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:39:41,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:39:41,365 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:39:41,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:39:41,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:39:41,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:39:41,367 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,368 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:39:41,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:39:41,370 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,370 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:39:41,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:39:41,373 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,374 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:39:41,376 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:39:41,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:39:41,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:39:41,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:39:41,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:39:41,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:39:41,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:39:41,382 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:39:41,382 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:39:41,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:39:41,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:39:41,385 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,385 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:39:41,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:39:41,388 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,389 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:39:41,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:39:41,392 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,392 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:39:41,395 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,395 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:39:41,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:39:41,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:39:41,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:39:41,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:39:41,401 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:39:41,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:39:41,402 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:39:41,402 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:39:41,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:39:41,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:39:41,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:39:41,406 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,407 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:39:41,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:39:41,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:39:41,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:39:41,412 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,413 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:39:41,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:39:41,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:39:41,417 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,417 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:39:41,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:39:41,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:39:41,421 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,422 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:39:41,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:39:41,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:39:41,426 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,427 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:39:41,432 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,432 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:39:41,436 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,437 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,438 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:39:41,440 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,441 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:39:41,443 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,443 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:39:41,446 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,446 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:39:41,448 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,448 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:39:41,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:39:41,453 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:39:41,454 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:39:41,454 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:39:41,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:39:41,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-22 20:39:41,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-22 20:39:41,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-22 20:39:41,456 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-22 20:39:41,456 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-22 20:39:41,456 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-22 20:39:41,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-22 20:39:41,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-22 20:39:41,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-22 20:39:41,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-22 20:39:41,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-22 20:39:41,457 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-22 20:39:41,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:39:41,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-22 20:39:41,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-22 20:39:41,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:39:41,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:39:41,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:39:41,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:39:41,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:39:41,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:39:41,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:39:41,461 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-22 20:39:41,461 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-22 20:39:41,461 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:39:41,461 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:39:41,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-22 20:39:41,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-22 20:39:41,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:39:41,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:39:41,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:39:41,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-22 20:39:41,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-22 20:39:41,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-22 20:39:41,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:39:41,465 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-22 20:39:41,465 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-22 20:39:41,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-22 20:39:41,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-22 20:39:41,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-22 20:39:41,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-22 20:39:41,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-22 20:39:41,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:39:41,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:39:41,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:39:41,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-22 20:39:41,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:39:41,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:39:41,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2018-05-22 20:39:41,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2018-05-22 20:39:41,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2018-05-22 20:39:41,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:39:41,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:39:41,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:39:41,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:39:41,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:39:41,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-22 20:39:41,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,476 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-22 20:39:41,476 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-22 20:39:41,477 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-22 20:39:41,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-22 20:39:41,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-22 20:39:41,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-22 20:39:41,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-22 20:39:41,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:39:41,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:39:41,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:39:41,479 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:39:41,479 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:39:41,479 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:39:41,479 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:39:41,479 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:39:41,480 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2018-05-22 20:39:41,480 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2018-05-22 20:39:41,480 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:39:41,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:39:41,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-22 20:39:41,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:39:41,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:39:41,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2018-05-22 20:39:41,493 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2018-05-22 20:39:41,494 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:39:41,494 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:39:41,495 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:39:41,495 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:39:41,495 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:39:41,495 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:39:41,496 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:39:41,496 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:39:41,496 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:39:41,496 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,497 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,497 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:39:41,497 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,497 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,497 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:39:41,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:39:41,499 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2018-05-22 20:39:41,499 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:39:41,500 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:39:41,500 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:39:41,501 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-22 20:39:41,501 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-22 20:39:41,501 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-22 20:39:41,501 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-22 20:39:41,502 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,502 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,502 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:39:41,503 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:39:41,503 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:39:41,510 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2018-05-22 20:39:41,510 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-22 20:39:41,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2018-05-22 20:39:41,511 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2018-05-22 20:39:41,511 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:39:41,511 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:39:41,511 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:39:41,512 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2018-05-22 20:39:41,512 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:39:41,513 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:39:41,514 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:39:41,515 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:39:41,516 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-22 20:39:41,517 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:39:41,517 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:39:41,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:39:41,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2018-05-22 20:39:41,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2018-05-22 20:39:41,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2018-05-22 20:39:41,518 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2018-05-22 20:39:41,519 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2018-05-22 20:39:41,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2018-05-22 20:39:41,522 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2018-05-22 20:39:41,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:39:41,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:39:41,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2018-05-22 20:39:41,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:39:41,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:39:41,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:39:41,556 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2018-05-22 20:39:41,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:39:41,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:39:41,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:39:41,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:39:41,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:39:41,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:39:41,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2018-05-22 20:39:41,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2018-05-22 20:39:41,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2018-05-22 20:39:41,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:39:41,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:39:41,565 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:39:41,565 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:39:41,566 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:39:41,566 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2018-05-22 20:39:41,566 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2018-05-22 20:39:41,585 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2018-05-22 20:39:41,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:39:41,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'DS21Manager'.]
2018-05-22 20:39:41,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:39:41,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:39:41,653 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Moudle' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:39:41,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Moudle' to allow for resolving potential circular references]
2018-05-22 20:39:41,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Moudle']
2018-05-22 20:39:41,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Moudle']
2018-05-22 20:39:41,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Moudle']
2018-05-22 20:39:41,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Moudle']
2018-05-22 20:39:41,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Moudle'.]
2018-05-22 20:39:41,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Moudle]
2018-05-22 20:39:41,657 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-22 20:39:41,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-22 20:39:41,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-22 20:39:41,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:39:41,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-22 20:39:41,657 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-22 20:39:41,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-22 20:39:41,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-22 20:39:41,816 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-22 20:39:41,816 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-22 20:39:41,816 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-22 20:40:46,364 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:40:46,383 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:40:46,389 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:40:46,389 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:40:46,390 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:40:46,391 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:40:46,391 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:40:46,391 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:40:58,197 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-22 20:40:58,198 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-22 20:40:58,202 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-22 20:40:58,216 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:40:58,234 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:40:58,255 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:40:58,257 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:40:58,262 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:40:58,288 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:40:58,290 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:40:58,293 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:40:58,294 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:40:58,295 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:40:58,295 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:40:58,295 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:40:58,295 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:40:58,296 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,296 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,296 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:40:58,296 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,301 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,302 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:40:58,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:40:58,303 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-22 20:40:58,303 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:40:58,305 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:40:58,305 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:40:58,306 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-22 20:40:58,306 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:40:58,313 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:40:58,314 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:40:58,316 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:40:58,318 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-22 20:40:58,321 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:40:58,321 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:40:58,322 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:40:58,323 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:40:58,324 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-22 20:40:58,325 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-22 20:40:58,325 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-22 20:40:58,325 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-22 20:40:58,326 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-22 20:40:58,341 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-22 20:40:58,343 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-22 20:40:58,343 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-22 20:40:58,343 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-22 20:40:58,344 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-22 20:40:58,344 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-22 20:40:58,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:40:58,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:40:58,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-22 20:40:58,363 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-22 20:40:58,364 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-22 20:40:58,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-22 20:40:58,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-22 20:40:58,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-22 20:40:58,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:40:58,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:40:58,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:40:58,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-22 20:40:58,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:40:58,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-22 20:40:58,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:40:58,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:40:58,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,381 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-22 20:40:58,382 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:40:58,382 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:40:58,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-22 20:40:58,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-22 20:40:58,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:40:58,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:40:58,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:40:58,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:40:58,383 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:40:58,383 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-22 20:40:58,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-22 20:40:58,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-22 20:40:58,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:40:58,385 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:40:58,386 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:40:58,387 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:40:58,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:40:58,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-22 20:40:58,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-22 20:40:58,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-22 20:40:58,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:40:58,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-22 20:40:58,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:40:58,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:40:58,390 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:40:58,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:40:58,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:40:58,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-22 20:40:58,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-22 20:40:58,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-22 20:40:58,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-22 20:40:58,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:40:58,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:40:58,393 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:40:58,393 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:40:58,394 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:40:58,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-22 20:40:58,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-22 20:40:58,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-22 20:40:58,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-22 20:40:58,395 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-22 20:40:58,395 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-22 20:40:58,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:40:58,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:40:58,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:40:58,396 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-22 20:40:58,397 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-22 20:40:58,397 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-22 20:40:58,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-22 20:40:58,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-22 20:40:58,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-22 20:40:58,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:40:58,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:40:58,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-22 20:40:58,408 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-22 20:40:58,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-22 20:40:58,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:40:58,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:40:58,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:40:58,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:40:58,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:40:58,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:40:58,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:40:58,410 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-22 20:40:58,410 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:40:58,410 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-22 20:40:58,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:40:58,445 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:40:58,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:40:58,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:40:58,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:40:58,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:40:58,447 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:40:58,447 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:40:58,448 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:40:58,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:40:58,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:40:58,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:40:58,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:40:58,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:40:58,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:40:58,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:40:58,465 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:40:58,465 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:40:58,466 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:40:58,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:40:58,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:40:58,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:40:58,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:40:58,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:40:58,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:40:58,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:40:58,469 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:40:58,470 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:40:58,470 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:40:58,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:40:58,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:40:58,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:40:58,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:40:58,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:40:58,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:40:58,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:40:58,474 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:40:58,474 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:40:58,474 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:40:58,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,480 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:40:58,480 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-22 20:40:58,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-22 20:40:58,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:40:58,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:40:58,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:40:58,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:40:58,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-22 20:40:58,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-22 20:40:58,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-22 20:40:58,649 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-22 20:40:58,649 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-22 20:40:58,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-22 20:40:58,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-22 20:40:58,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-22 20:40:58,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-22 20:40:58,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-22 20:40:58,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-22 20:40:58,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:40:58,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:40:58,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:40:58,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:40:58,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-22 20:40:58,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,662 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-22 20:40:58,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:40:58,663 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:40:58,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-22 20:40:58,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-22 20:40:58,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-22 20:40:58,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-22 20:40:58,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:40:58,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:40:58,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:40:58,664 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:40:58,665 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:40:58,665 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:40:58,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:40:58,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:40:58,668 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,668 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:40:58,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:40:58,671 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,671 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:40:58,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:40:58,673 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,673 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:40:58,676 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:40:58,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:40:58,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:40:58,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:40:58,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:40:58,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:40:58,681 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:40:58,682 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:40:58,682 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:40:58,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:40:58,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:40:58,684 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,684 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:40:58,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:40:58,687 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:40:58,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:40:58,689 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,689 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:40:58,692 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,692 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:40:58,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:40:58,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:40:58,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:40:58,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:40:58,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:40:58,697 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:40:58,697 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:40:58,698 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:40:58,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:40:58,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:40:58,700 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,701 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:40:58,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:40:58,704 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,704 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:40:58,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:40:58,708 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,708 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:40:58,712 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,712 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:40:58,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:40:58,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:40:58,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:40:58,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:40:58,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:40:58,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:40:58,718 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:40:58,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:40:58,719 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:40:58,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:40:58,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:40:58,723 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,723 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:40:58,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:40:58,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:40:58,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:40:58,728 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,729 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:40:58,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:40:58,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:40:58,732 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,733 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:40:58,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:40:58,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:40:58,737 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:40:58,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:40:58,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:40:58,742 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,743 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:40:58,746 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,747 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:40:58,751 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,751 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:40:58,754 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,755 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:40:58,757 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:40:58,760 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,760 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:40:58,762 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,762 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:40:58,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:40:58,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:40:58,769 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:40:58,769 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:40:58,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:40:58,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-22 20:40:58,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-22 20:40:58,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-22 20:40:58,771 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-22 20:40:58,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-22 20:40:58,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-22 20:40:58,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-22 20:40:58,773 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-22 20:40:58,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:40:58,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-22 20:40:58,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-22 20:40:58,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-22 20:40:58,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:40:58,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-22 20:40:58,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:40:58,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:40:58,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:40:58,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-22 20:40:58,776 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-22 20:40:58,777 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-22 20:40:58,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-22 20:40:58,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-22 20:40:58,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:40:58,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:40:58,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:40:58,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:40:58,780 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-22 20:40:58,780 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-22 20:40:58,780 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-22 20:40:58,780 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:40:58,780 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-22 20:40:58,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:40:58,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:40:58,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:40:58,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-22 20:40:58,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:40:58,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:40:58,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2018-05-22 20:40:58,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2018-05-22 20:40:58,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2018-05-22 20:40:58,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:40:58,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:40:58,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:40:58,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:40:58,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:40:58,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-22 20:40:58,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:40:58,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-22 20:40:58,791 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-22 20:40:58,791 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-22 20:40:58,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-22 20:40:58,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-22 20:40:58,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-22 20:40:58,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-22 20:40:58,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:40:58,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:40:58,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:40:58,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2018-05-22 20:40:58,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2018-05-22 20:40:58,795 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:40:58,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:40:58,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-22 20:40:58,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:40:58,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:40:58,804 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2018-05-22 20:40:58,808 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2018-05-22 20:40:58,809 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:40:58,810 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:40:58,810 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:40:58,810 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:40:58,811 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:40:58,811 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:40:58,811 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:40:58,811 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:40:58,812 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:40:58,812 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,812 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,812 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:40:58,812 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,813 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,813 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:40:58,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:40:58,815 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2018-05-22 20:40:58,815 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:40:58,816 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:40:58,816 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:40:58,816 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-22 20:40:58,816 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-22 20:40:58,817 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-22 20:40:58,817 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-22 20:40:58,817 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,817 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,818 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:40:58,818 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:40:58,818 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:40:58,825 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2018-05-22 20:40:58,825 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-22 20:40:58,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2018-05-22 20:40:58,826 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2018-05-22 20:40:58,826 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:40:58,826 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:40:58,826 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:40:58,827 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2018-05-22 20:40:58,827 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:40:58,828 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:40:58,829 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:40:58,830 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:40:58,830 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-22 20:40:58,831 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:40:58,831 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:40:58,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:40:58,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2018-05-22 20:40:58,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2018-05-22 20:40:58,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2018-05-22 20:40:58,833 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2018-05-22 20:40:58,833 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:40:58,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2018-05-22 20:40:58,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2018-05-22 20:40:58,836 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2018-05-22 20:40:58,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:40:58,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:40:58,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2018-05-22 20:40:58,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:40:58,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:40:58,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:40:58,870 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2018-05-22 20:40:58,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:40:58,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:40:58,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:40:58,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:40:58,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:40:58,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:40:58,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2018-05-22 20:40:58,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2018-05-22 20:40:58,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2018-05-22 20:40:58,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:40:58,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:40:58,879 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:40:58,879 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:40:58,879 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:40:58,880 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2018-05-22 20:40:58,880 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2018-05-22 20:40:58,909 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
2018-05-22 20:42:30,158 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-22 20:42:30,177 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-22 20:42:30,182 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-22 20:42:30,183 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-22 20:42:30,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-22 20:42:30,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-22 20:42:30,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-22 20:42:30,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-22 20:42:30,283 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-22 20:42:30,283 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-22 20:42:30,286 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-22 20:42:30,299 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:42:30,315 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:42:30,334 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:42:30,336 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:42:30,341 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:42:30,370 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-22 20:42:30,373 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:42:30,376 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:42:30,377 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:42:30,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:42:30,378 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:42:30,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:42:30,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:42:30,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,379 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,380 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:42:30,380 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,386 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:42:30,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:42:30,387 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-22 20:42:30,387 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:42:30,388 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:42:30,388 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:42:30,389 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-22 20:42:30,389 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:42:30,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:42:30,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-22 20:42:30,397 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:42:30,399 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-22 20:42:30,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:42:30,401 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:42:30,402 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:42:30,403 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:42:30,404 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-22 20:42:30,405 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-22 20:42:30,405 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-22 20:42:30,405 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-22 20:42:30,406 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-22 20:42:30,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-22 20:42:30,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-22 20:42:30,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-22 20:42:30,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-22 20:42:30,422 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-22 20:42:30,422 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-22 20:42:30,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:42:30,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:42:30,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-22 20:42:30,439 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-22 20:42:30,440 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-22 20:42:30,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-22 20:42:30,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-22 20:42:30,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-22 20:42:30,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-22 20:42:30,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:42:30,446 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:42:30,447 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-22 20:42:30,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:42:30,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-22 20:42:30,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:42:30,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:42:30,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,454 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,456 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-22 20:42:30,456 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-22 20:42:30,457 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:42:30,458 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:42:30,458 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:42:30,458 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:42:30,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:42:30,458 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-22 20:42:30,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-22 20:42:30,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-22 20:42:30,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-22 20:42:30,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-22 20:42:30,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-22 20:42:30,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-22 20:42:30,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:42:30,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-22 20:42:30,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:42:30,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,461 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:42:30,461 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:42:30,461 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-22 20:42:30,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-22 20:42:30,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:42:30,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:42:30,464 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:42:30,465 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:42:30,465 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:42:30,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-22 20:42:30,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-22 20:42:30,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:42:30,465 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-22 20:42:30,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-22 20:42:30,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-22 20:42:30,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-22 20:42:30,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-22 20:42:30,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-22 20:42:30,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:42:30,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:42:30,468 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-22 20:42:30,468 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-22 20:42:30,468 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-22 20:42:30,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-22 20:42:30,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-22 20:42:30,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-22 20:42:30,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-22 20:42:30,469 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-22 20:42:30,469 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-22 20:42:30,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-22 20:42:30,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-22 20:42:30,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-22 20:42:30,471 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-22 20:42:30,471 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-22 20:42:30,472 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-22 20:42:30,483 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-22 20:42:30,483 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-22 20:42:30,483 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-22 20:42:30,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:42:30,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:42:30,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-22 20:42:30,485 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-22 20:42:30,485 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-22 20:42:30,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-22 20:42:30,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-22 20:42:30,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-22 20:42:30,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-22 20:42:30,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:42:30,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:42:30,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:42:30,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:42:30,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:42:30,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:42:30,488 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-22 20:42:30,488 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:42:30,488 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-22 20:42:30,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:42:30,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:42:30,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:42:30,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:42:30,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:42:30,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:42:30,521 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:42:30,521 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:42:30,521 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:42:30,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:42:30,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:42:30,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:42:30,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:42:30,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:42:30,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:42:30,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:42:30,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:42:30,540 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:42:30,540 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:42:30,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:42:30,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:42:30,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:42:30,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:42:30,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:42:30,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:42:30,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:42:30,544 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:42:30,544 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:42:30,544 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:42:30,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:42:30,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-22 20:42:30,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-22 20:42:30,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-22 20:42:30,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-22 20:42:30,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-22 20:42:30,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-22 20:42:30,548 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-22 20:42:30,549 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-22 20:42:30,549 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-22 20:42:30,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-22 20:42:30,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-22 20:42:30,666 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-22 20:42:30,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-22 20:42:30,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-22 20:42:30,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:42:30,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:42:30,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-22 20:42:30,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-22 20:42:30,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-22 20:42:30,669 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-22 20:42:30,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-22 20:42:30,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-22 20:42:30,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-22 20:42:30,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:42:30,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:42:30,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:42:30,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:42:30,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-22 20:42:30,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,683 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-22 20:42:30,683 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-22 20:42:30,684 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-22 20:42:30,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-22 20:42:30,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-22 20:42:30,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-22 20:42:30,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-22 20:42:30,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-22 20:42:30,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:42:30,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:42:30,686 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:42:30,686 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:42:30,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:42:30,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:42:30,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:42:30,690 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,690 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:42:30,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:42:30,692 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,693 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:42:30,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:42:30,695 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,695 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:42:30,698 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,698 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:42:30,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:42:30,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:42:30,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:42:30,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:42:30,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:42:30,703 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:42:30,704 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:42:30,704 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:42:30,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:42:30,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:42:30,706 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,706 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:42:30,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:42:30,709 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:42:30,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:42:30,711 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,711 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:42:30,714 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,714 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:42:30,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:42:30,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:42:30,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:42:30,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:42:30,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:42:30,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:42:30,719 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:42:30,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:42:30,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:42:30,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:42:30,722 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,723 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:42:30,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:42:30,725 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,726 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:42:30,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:42:30,729 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,729 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:42:30,732 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,733 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-22 20:42:30,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-22 20:42:30,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-22 20:42:30,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-22 20:42:30,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-22 20:42:30,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-22 20:42:30,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-22 20:42:30,739 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-22 20:42:30,739 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-22 20:42:30,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-22 20:42:30,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-22 20:42:30,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-22 20:42:30,743 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,744 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-22 20:42:30,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-22 20:42:30,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-22 20:42:30,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-22 20:42:30,749 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,750 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-22 20:42:30,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-22 20:42:30,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-22 20:42:30,753 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,754 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-22 20:42:30,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-22 20:42:30,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-22 20:42:30,758 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-22 20:42:30,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-22 20:42:30,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:42:30,763 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,764 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:42:30,768 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,768 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:42:30,772 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:42:30,775 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,776 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:42:30,778 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,779 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:42:30,781 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-22 20:42:30,784 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,784 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-22 20:42:30,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-22 20:42:30,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-22 20:42:30,791 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-22 20:42:30,791 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-22 20:42:30,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-22 20:42:30,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-22 20:42:30,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-22 20:42:30,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-22 20:42:30,793 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-22 20:42:30,793 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-22 20:42:30,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-22 20:42:30,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-22 20:42:30,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:42:30,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-22 20:42:30,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-22 20:42:30,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-22 20:42:30,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:42:30,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-22 20:42:30,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-22 20:42:30,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-22 20:42:30,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-22 20:42:30,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-22 20:42:30,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:42:30,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:42:30,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:42:30,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:42:30,798 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-22 20:42:30,798 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-22 20:42:30,798 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-22 20:42:30,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-22 20:42:30,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-22 20:42:30,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-22 20:42:30,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-22 20:42:30,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-22 20:42:30,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-22 20:42:30,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:42:30,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:42:30,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:42:30,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:42:30,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-22 20:42:30,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-22 20:42:30,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-22 20:42:30,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:42:30,802 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-22 20:42:30,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:42:30,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:42:30,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-22 20:42:30,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-22 20:42:30,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-22 20:42:30,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-22 20:42:30,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Moudle => canonical name DS21Moudle]
2018-05-22 20:42:30,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Moudle']
2018-05-22 20:42:30,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Moudle' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Moudle]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Moudle'.]
2018-05-22 20:42:30,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-22 20:42:30,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-22 20:42:30,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-22 20:42:30,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-22 20:42:30,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:42:30,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-22 20:42:30,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-22 20:42:30,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-22 20:42:30,813 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-22 20:42:30,814 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-22 20:42:30,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-22 20:42:30,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-22 20:42:30,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-22 20:42:30,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-22 20:42:30,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:42:30,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:42:30,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:42:30,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:42:30,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:42:30,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:42:30,816 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2018-05-22 20:42:30,817 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDsConfigurationSection']
2018-05-22 20:42:30,817 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'IDS21Message']
2018-05-22 20:42:30,817 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DS21Moudle' via constructor to object named 'ILoggerFacade']
2018-05-22 20:42:30,817 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Moudle] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.IDS21Message, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-22 20:42:30,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-22 20:42:30,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-22 20:42:30,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-22 20:42:30,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-22 20:42:30,825 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-ins start loading]
2018-05-22 20:42:30,830 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.ds21']
2018-05-22 20:42:30,831 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-22 20:42:30,831 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\2018-5-18\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-22 20:42:30,832 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:42:30,832 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:42:30,832 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:42:30,833 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-22 20:42:30,833 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-22 20:42:30,833 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-22 20:42:30,833 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-22 20:42:30,833 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,834 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,834 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:42:30,834 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,835 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,835 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-22 20:42:30,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-22 20:42:30,836 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml]]
2018-05-22 20:42:30,837 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-22 20:42:30,837 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-22 20:42:30,838 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-22 20:42:30,838 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-22 20:42:30,838 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-22 20:42:30,838 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-22 20:42:30,839 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-22 20:42:30,839 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,839 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,839 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-22 20:42:30,840 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-22 20:42:30,840 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-22 20:42:30,848 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'DS21Manager'.]
2018-05-22 20:42:30,848 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-22 20:42:30,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://DS.AFP.DS21/DS.AFP.DS21.Configure.Objects/Objects.xml]]
2018-05-22 20:42:30,849 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.ds21'.]
2018-05-22 20:42:30,849 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-22 20:42:30,850 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-22 20:42:30,850 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-22 20:42:30,850 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [ds.afp.ds21].]
2018-05-22 20:42:30,850 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-22 20:42:30,852 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:42:30,854 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.ds21].]
2018-05-22 20:42:30,854 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-22 20:42:30,855 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-22 20:42:30,855 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-22 20:42:30,856 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-22 20:42:30,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS21Manager => canonical name DS21Manager]
2018-05-22 20:42:30,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS21Manager']
2018-05-22 20:42:30,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS21Manager' with merged definition [RootObjectDefinition : Class [DS.AFP.DS21.DS21Manager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ; defined in = assembly [DS.AFP.DS21, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [DS.AFP.DS21.Configure.Objects.Objects.xml] line 3].]
2018-05-22 20:42:30,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS21Manager'.]
2018-05-22 20:42:30,857 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.DS21.DS21Manager] using constructor [Void .ctor()]]
2018-05-22 20:42:30,858 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS21Manager' instantiated via constructor [Void .ctor()].]
2018-05-22 20:42:30,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS21Manager' to allow for resolving potential circular references]
2018-05-22 20:42:30,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS21Manager']
2018-05-22 20:42:30,861 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'DS21Message' in object 'DS21Manager' to object 'IDS21Message'.]
2018-05-22 20:42:30,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:42:30,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-22 20:42:30,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDS21Message'.]
2018-05-22 20:42:30,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-22 20:42:30,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:42:30,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-22 20:42:30,895 DEBUG [1] [Spring.Objects.Factory.Support.ObjectDefinitionValueResolver] [ResolveReference] [Resolving reference from property 'logger' in object 'DS21Manager' to object 'ILoggerFacade'.]
2018-05-22 20:42:30,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:42:30,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-22 20:42:30,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-22 20:42:30,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-22 20:42:30,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:42:30,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-22 20:42:30,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS21Manager']
2018-05-22 20:42:30,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS21Manager']
2018-05-22 20:42:30,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS21Manager']
2018-05-22 20:42:30,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS21Manager'.]
2018-05-22 20:42:30,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS21Manager]
2018-05-22 20:42:30,905 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.ds21] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:42:30,905 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-22 20:42:30,906 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-22 20:42:30,906 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.ds21'.]
2018-05-22 20:42:30,906 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.ds21']
2018-05-22 20:42:30,928 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [DS.AFP.DS21 Plug-in loaded]
