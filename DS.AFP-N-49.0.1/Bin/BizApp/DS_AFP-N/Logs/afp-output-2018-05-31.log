2018-05-31 12:31:52,397 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:31:52,431 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:31:52,438 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:31:52,438 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:31:52,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:31:52,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:31:52,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:31:52,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:31:52,537 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:31:52,537 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:31:52,557 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:31:52,597 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:31:52,616 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:31:52,638 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:31:52,663 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:31:52,673 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:31:52,702 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:31:52,704 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:31:52,707 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:31:52,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:31:52,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:31:52,710 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:31:52,710 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:31:52,710 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:31:52,710 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:52,711 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:52,711 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:31:52,711 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:52,712 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:52,712 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:31:52,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:31:52,717 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:31:52,718 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:31:52,719 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:31:52,719 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:31:52,720 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:31:52,720 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:31:52,727 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:31:52,728 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:31:52,730 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:31:52,732 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:31:52,734 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:31:52,734 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:31:52,735 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:31:52,736 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:31:52,737 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:31:52,738 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:31:52,738 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:31:52,739 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:31:52,739 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:31:52,752 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:31:52,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:31:52,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:31:52,754 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:31:52,755 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:31:52,755 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:31:52,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:31:52,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:31:52,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:31:52,772 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:31:52,773 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:31:52,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:31:52,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:31:52,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:31:52,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:31:52,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:31:52,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:31:52,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:31:52,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:31:52,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:31:52,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:31:52,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:31:52,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:31:52,790 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:31:52,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:31:52,792 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:31:52,792 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:31:52,792 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:31:52,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:31:52,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:31:52,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:31:52,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:31:52,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:31:52,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:31:52,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:31:52,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:31:52,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:31:52,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:31:52,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:31:52,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:31:52,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:31:52,795 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:31:52,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:31:52,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:31:52,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:31:52,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:31:52,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:31:52,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:31:52,798 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:31:52,798 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:31:52,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:31:52,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:31:52,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:31:52,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:31:52,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:31:52,801 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:31:52,802 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:31:52,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:31:52,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:31:52,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:31:52,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:31:52,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:31:52,803 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:31:52,803 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:31:52,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:31:52,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:31:52,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:31:52,806 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:31:52,806 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:31:52,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:31:52,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:31:52,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:31:52,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:31:52,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:31:52,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:31:52,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:31:52,818 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:31:52,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:31:52,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:31:52,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:31:52,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:31:52,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:31:52,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:31:52,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:31:52,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:31:52,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:31:52,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:31:52,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:31:52,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:31:52,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:31:52,821 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:31:52,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:31:52,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:31:52,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:31:52,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:31:52,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:31:52,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:31:52,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:31:52,863 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:31:52,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:31:52,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:31:52,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:31:52,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:31:52,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:31:52,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:31:52,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:31:52,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:31:52,875 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:31:52,875 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:31:52,876 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:31:52,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:31:52,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:31:52,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:31:52,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:31:52,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:31:52,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:31:52,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:31:52,880 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:31:52,880 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:31:52,880 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:31:52,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:31:52,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:31:52,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:31:52,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:31:52,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:31:52,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:31:52,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:31:52,884 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:31:52,885 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:31:52,885 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:31:52,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:31:52,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:31:52,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:31:52,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:31:52,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:31:52,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:31:52,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:31:52,902 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:31:52,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:31:52,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:31:52,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:31:52,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:31:52,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:31:52,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:31:52,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:52,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:52,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:52,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:52,915 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:31:52,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:31:52,916 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:31:52,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:31:52,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:31:52,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:31:52,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:31:52,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:31:52,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:31:52,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:31:52,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:31:52,918 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:31:52,919 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:31:52,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:31:52,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:31:52,921 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,922 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:31:52,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:31:52,924 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,924 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:31:52,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:31:52,926 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:31:52,930 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,930 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:31:52,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:31:52,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:31:52,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:31:52,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:31:52,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:31:52,935 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:31:52,936 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:31:52,936 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:31:52,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:31:52,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:31:52,938 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,939 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:31:52,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:31:52,942 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,942 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:31:52,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:31:52,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:31:52,949 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:31:52,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:31:52,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:31:52,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:31:52,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:31:52,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:31:52,954 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:31:52,954 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:31:52,954 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:31:52,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:31:52,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:31:52,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:31:52,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:31:52,961 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,961 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:31:52,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:31:52,964 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,964 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:31:52,969 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:31:52,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:31:52,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:31:52,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:31:52,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:31:52,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:31:52,974 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:31:52,975 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:31:52,975 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:31:52,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:31:52,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:31:52,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:31:52,979 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,980 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:31:52,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:31:52,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:31:52,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:31:52,985 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,985 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:31:52,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:31:52,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:31:52,989 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:31:52,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:31:52,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:31:52,993 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,994 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:31:52,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:31:52,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:31:52,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:52,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:31:52,998 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:52,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:52,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:31:53,003 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:31:53,007 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,007 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:31:53,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:31:53,014 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,014 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:31:53,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,017 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:31:53,023 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,023 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:31:53,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:31:53,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:31:53,025 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:31:53,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:31:53,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:31:53,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:31:53,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:31:53,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:31:53,027 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:31:53,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:31:53,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:31:53,028 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:31:53,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:31:53,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:31:53,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:31:53,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:31:53,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:31:53,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:31:53,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:31:53,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:31:53,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:31:53,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:31:53,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:31:53,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:31:53,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:31:53,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:31:53,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:31:53,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:31:53,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:31:53,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:31:53,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:31:53,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:31:53,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:31:53,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:31:53,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:31:53,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:31:53,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:31:53,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:31:53,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:31:53,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:31:53,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:31:53,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:31:53,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:31:53,036 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:31:53,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:31:53,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:31:53,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:31:53,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:31:53,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:31:53,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:31:53,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:31:53,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:31:53,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:31:53,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:31:53,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:31:53,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:31:53,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:31:53,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:31:53,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:31:53,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:31:53,047 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:31:53,048 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:31:53,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:31:53,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:31:53,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:31:53,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:31:53,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:31:53,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:31:53,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:31:53,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:31:53,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:31:53,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:31:53,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:31:53,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:31:53,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:31:53,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:31:53,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:31:53,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:31:53,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:31:53,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:31:53,052 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:31:53,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:31:53,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:31:53,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:31:53,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:31:53,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:31:53,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:31:53,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:31:53,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:31:53,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:31:53,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:31:53,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:31:53,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:31:53,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:31:53,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:31:53,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:31:53,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:31:53,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:31:53,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:31:53,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:31:53,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:31:53,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:31:53,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:31:53,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:31:53,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:31:53,059 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:31:53,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:31:53,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:31:53,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:31:53,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:31:53,067 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:31:53,101 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:31:53,102 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:31:53,102 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:31:53,102 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:31:53,102 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:31:53,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:31:53,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:31:53,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:31:53,103 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:31:53,104 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:31:53,104 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:53,104 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:53,104 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:31:53,105 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:53,105 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:53,105 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:31:53,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:31:53,107 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:31:53,107 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:31:53,108 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:31:53,108 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:31:53,108 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:31:53,108 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:31:53,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:31:53,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:31:53,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:53,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:53,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:31:53,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:31:53,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:31:53,132 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:31:53,132 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:31:53,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:31:53,133 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:31:53,133 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:31:53,133 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:31:53,134 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:31:53,134 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:31:53,134 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:31:53,136 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:31:53,136 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:31:53,137 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:31:53,137 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:31:53,138 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:31:53,138 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:31:53,139 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:31:53,139 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:31:53,139 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:31:53,140 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:31:53,140 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:31:54,635 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:31:54,638 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:31:54,652 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:31:54,655 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:31:58,272 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 65,032,192.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:31:58,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:31:58,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:31:58,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:31:58,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:31:58,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:31:58,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:31:58,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:31:58,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:31:58,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:31:58,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:31:58,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:31:58,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:31:58,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:31:58,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:31:58,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:31:58,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:02,405 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:32:02,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:32:02,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:32:02,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:32:02,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:32:02,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:32:02,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:32:02,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:32:02,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:02,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:02,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:02,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:02,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:02,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:02,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:02,417 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:02,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:32:02,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:02,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:02,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:32:02,420 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:32:02,421 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:02,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:32:02,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:32:02,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:02,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:02,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:02,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:32:02,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:32:02,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:02,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:02,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:02,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:02,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:02,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:02,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:02,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:02,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:32:02,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:32:02,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:02,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:32:02,437 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:32:23,233 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:32:23,254 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:32:23,261 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:32:23,261 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:32:23,262 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:32:23,263 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:32:23,263 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:32:23,263 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:32:23,335 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:32:23,335 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:32:23,339 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:32:23,353 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:32:23,369 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:32:23,389 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:32:23,390 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:32:23,396 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:32:23,427 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:32:23,430 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:32:23,433 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:32:23,434 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:32:23,435 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:32:23,435 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:32:23,435 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:32:23,436 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:32:23,436 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,436 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,436 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:32:23,437 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,437 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,437 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:32:23,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:32:23,442 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:32:23,443 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:32:23,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:32:23,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:32:23,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:32:23,445 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:32:23,450 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:32:23,452 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:32:23,453 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:32:23,455 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:32:23,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:32:23,457 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:32:23,458 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:32:23,459 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:32:23,460 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:32:23,460 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:32:23,461 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:32:23,461 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:32:23,461 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:32:23,474 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:32:23,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:32:23,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:32:23,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:32:23,477 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:32:23,477 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:32:23,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:32:23,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:32:23,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:32:23,495 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:32:23,495 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:32:23,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:32:23,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:32:23,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:32:23,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:32:23,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:32:23,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:32:23,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:32:23,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:32:23,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:32:23,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:32:23,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:32:23,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,511 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:32:23,512 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:32:23,512 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:32:23,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:32:23,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:32:23,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:32:23,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:32:23,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:32:23,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:32:23,513 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:32:23,513 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:32:23,513 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:32:23,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:32:23,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:32:23,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:32:23,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:32:23,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:32:23,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:32:23,516 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:32:23,516 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:32:23,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:32:23,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:32:23,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:32:23,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:32:23,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:32:23,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:32:23,519 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:32:23,519 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:32:23,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:32:23,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:32:23,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:32:23,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:32:23,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:32:23,522 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:32:23,522 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:32:23,523 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:32:23,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:32:23,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:32:23,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:32:23,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:32:23,524 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:32:23,524 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:32:23,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:32:23,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:32:23,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:32:23,525 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:32:23,526 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:32:23,526 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:32:23,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:32:23,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:32:23,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:32:23,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:32:23,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:32:23,537 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:32:23,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:32:23,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:32:23,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:32:23,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:32:23,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:32:23,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:32:23,539 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:32:23,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:32:23,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:32:23,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:32:23,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:32:23,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:32:23,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:32:23,580 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:32:23,580 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:32:23,581 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:32:23,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:32:23,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:32:23,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:32:23,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:32:23,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:32:23,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:32:23,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:32:23,593 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:32:23,593 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:32:23,593 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:32:23,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:32:23,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:32:23,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:32:23,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:32:23,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:32:23,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:32:23,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:32:23,597 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:32:23,597 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:32:23,598 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:32:23,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:32:23,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:32:23,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:32:23,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:32:23,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:32:23,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:32:23,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:32:23,601 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:32:23,601 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:32:23,601 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:32:23,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:32:23,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:32:23,616 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:32:23,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:32:23,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:32:23,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:32:23,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:32:23,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:32:23,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:32:23,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:32:23,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:32:23,619 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:32:23,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:32:23,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:32:23,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:32:23,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:32:23,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:23,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:32:23,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:32:23,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,634 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:32:23,634 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:32:23,635 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:32:23,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:32:23,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:32:23,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:32:23,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:32:23,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:32:23,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:23,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:23,637 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:32:23,637 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:32:23,637 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:32:23,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:32:23,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:32:23,641 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,641 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:32:23,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:32:23,643 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,644 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:32:23,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:32:23,646 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,646 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:32:23,649 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,650 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:32:23,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:32:23,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:23,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:23,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:23,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:23,655 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:32:23,655 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:32:23,656 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:32:23,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:32:23,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:32:23,658 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,659 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:32:23,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:32:23,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,662 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:32:23,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:32:23,664 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,664 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:32:23,667 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,667 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:32:23,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:32:23,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:23,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:23,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:23,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:23,672 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:32:23,673 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:32:23,673 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:32:23,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:32:23,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:32:23,676 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:32:23,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:32:23,680 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,680 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:32:23,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:32:23,683 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,684 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:32:23,687 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,688 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:32:23,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:32:23,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:23,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:23,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:23,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:23,693 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:32:23,694 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:32:23,694 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:32:23,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:32:23,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:32:23,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:32:23,698 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,699 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:32:23,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:32:23,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:32:23,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:32:23,704 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,704 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:32:23,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:32:23,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:32:23,708 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:32:23,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:32:23,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:32:23,713 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,714 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:32:23,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:32:23,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:32:23,719 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:32:23,724 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,724 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:32:23,728 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,729 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:32:23,732 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,732 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:32:23,735 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:32:23,738 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:32:23,745 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,745 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:32:23,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:32:23,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:32:23,747 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:32:23,747 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:32:23,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:32:23,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:32:23,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:32:23,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:32:23,749 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:32:23,749 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:32:23,749 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:32:23,750 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:32:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:32:23,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:32:23,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:32:23,751 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:32:23,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:32:23,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:32:23,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:23,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:23,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:23,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:23,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:32:23,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:32:23,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:32:23,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:23,754 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:32:23,754 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:32:23,754 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:32:23,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:32:23,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:32:23,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:32:23,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:32:23,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:32:23,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:32:23,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:32:23,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:32:23,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:23,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:32:23,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:32:23,759 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:32:23,759 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:32:23,759 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:32:23,759 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:32:23,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:32:23,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:32:23,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:32:23,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:32:23,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:32:23,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:32:23,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:32:23,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:32:23,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:32:23,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:32:23,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:32:23,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:32:23,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:32:23,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:32:23,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:32:23,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:32:23,771 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:32:23,771 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:32:23,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:32:23,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:32:23,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:32:23,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:32:23,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:32:23,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:32:23,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:32:23,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:32:23,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:32:23,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:32:23,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:32:23,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:32:23,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:32:23,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:32:23,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:32:23,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:32:23,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:23,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:32:23,777 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:32:23,778 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:23,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:32:23,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:32:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:32:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:32:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:32:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:32:23,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:32:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:32:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:32:23,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:32:23,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:32:23,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:32:23,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:32:23,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:32:23,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:23,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:32:23,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:32:23,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:32:23,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:32:23,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:32:23,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:32:23,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:32:23,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:32:23,783 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:32:23,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:32:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:32:23,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:32:23,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:32:23,791 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:32:23,795 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:32:23,796 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:32:23,796 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:32:23,796 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:32:23,797 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:32:23,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:32:23,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:32:23,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:32:23,798 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:32:23,798 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:32:23,798 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,799 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,799 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:32:23,799 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,799 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,800 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:32:23,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:32:23,801 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:32:23,802 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:32:23,802 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:32:23,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:32:23,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:32:23,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:32:23,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:32:23,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:32:23,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,805 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:32:23,805 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:32:23,805 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:32:23,836 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:32:23,837 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:32:23,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:32:23,838 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:32:23,838 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:32:23,838 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:32:23,838 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:32:23,839 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:32:23,839 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:32:23,840 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:32:23,841 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:32:23,842 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:32:23,843 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:32:23,843 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:32:23,843 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:32:23,844 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:32:23,844 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:32:23,844 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:32:23,845 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:32:23,845 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:32:25,229 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:32:25,232 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:32:25,246 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:32:25,248 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:32:28,085 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,655,360.00, Total Thread Count: 20
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:32:28,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:32:28,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:32:28,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:32:28,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:32:28,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:32:28,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:32:28,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:32:28,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:28,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:32:28,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:32:28,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:32:28,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:32:28,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:32:28,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:32:28,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:32:28,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:32:30,606 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:32:30,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:32:30,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:32:30,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:32:30,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:32:30,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:32:30,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:32:30,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:32:30,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:30,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:30,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:30,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:30,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:30,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:30,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:30,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:30,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:32:30,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:30,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:30,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:32:30,620 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:32:30,621 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:32:30,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:32:30,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:32:30,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:30,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:30,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:32:30,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:32:30,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:32:30,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:32:30,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:32:30,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:32:30,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:32:30,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:32:30,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:32:30,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:32:30,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:32:30,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:32:30,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:32:30,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:32:30,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:32:30,638 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:33:09,447 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:33:09,467 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:33:09,473 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:33:09,473 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:33:09,474 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:33:09,475 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:33:09,475 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:33:09,475 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:33:09,547 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:33:09,547 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:33:09,551 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:33:09,564 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:33:09,580 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:33:09,600 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:33:09,602 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:33:09,607 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:33:09,634 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:33:09,637 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:33:09,640 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:33:09,641 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:33:09,642 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:33:09,642 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:33:09,642 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:33:09,643 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:33:09,643 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:09,643 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:09,643 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:33:09,644 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:09,644 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:09,644 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:33:09,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:33:09,649 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:33:09,649 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:33:09,651 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:33:09,651 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:33:09,651 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:33:09,651 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:33:09,657 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:33:09,658 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:33:09,660 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:33:09,662 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:33:09,663 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:33:09,664 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:33:09,665 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:33:09,666 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:33:09,667 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:33:09,667 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:33:09,668 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:33:09,668 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:33:09,668 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:33:09,682 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:33:09,684 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:33:09,684 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:33:09,684 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:33:09,685 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:33:09,685 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:33:09,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:33:09,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:33:09,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:33:09,701 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:33:09,702 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:33:09,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:33:09,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:33:09,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:33:09,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:33:09,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:33:09,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:33:09,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:33:09,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:33:09,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:33:09,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:33:09,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:33:09,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:33:09,719 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:33:09,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:33:09,720 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:33:09,721 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:33:09,721 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:33:09,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:33:09,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:33:09,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:33:09,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:33:09,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:33:09,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:33:09,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:33:09,723 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:33:09,724 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:33:09,724 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:33:09,724 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:33:09,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:33:09,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:33:09,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:33:09,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:33:09,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:33:09,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:33:09,727 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:33:09,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:33:09,728 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:33:09,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:33:09,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:33:09,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:33:09,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:33:09,730 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:33:09,730 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:33:09,730 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:33:09,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:33:09,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:33:09,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:33:09,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:33:09,731 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:33:09,732 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:33:09,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:33:09,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:33:09,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:33:09,734 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:33:09,735 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:33:09,735 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:33:09,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:33:09,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:33:09,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:33:09,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:33:09,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:33:09,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:33:09,745 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:33:09,745 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:33:09,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:33:09,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:33:09,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:33:09,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:33:09,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:33:09,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:33:09,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:33:09,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:33:09,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:33:09,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:33:09,747 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:33:09,747 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:33:09,747 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:33:09,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:33:09,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:33:09,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:33:09,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:33:09,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:33:09,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:33:09,786 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:33:09,786 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:33:09,786 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:33:09,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:33:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:33:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:33:09,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:33:09,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:33:09,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:33:09,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:33:09,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:33:09,799 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:33:09,800 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:33:09,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:33:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:33:09,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:33:09,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:33:09,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:33:09,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:33:09,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:33:09,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:33:09,804 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:33:09,804 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:33:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:33:09,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:33:09,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:33:09,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:33:09,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:33:09,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:33:09,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:33:09,807 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:33:09,808 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:33:09,808 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:33:09,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:33:09,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:33:09,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:33:09,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:33:09,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:33:09,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:33:09,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:33:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:33:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:33:09,827 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:33:09,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:33:09,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:33:09,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:33:09,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:09,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:33:09,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:33:09,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,841 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:33:09,841 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:33:09,841 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:33:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:33:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:33:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:33:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:33:09,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:33:09,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:09,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:09,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:33:09,843 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:33:09,844 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:33:09,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:33:09,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:33:09,847 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,847 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:33:09,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:33:09,849 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,850 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:33:09,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:33:09,851 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,852 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:33:09,855 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,855 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:33:09,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:33:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:09,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:33:09,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:09,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:09,860 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:33:09,861 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:33:09,861 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:33:09,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:33:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:33:09,863 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:33:09,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:33:09,865 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,866 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:33:09,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:33:09,868 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:33:09,871 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,871 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:33:09,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:33:09,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:09,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:33:09,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:09,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:09,875 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:33:09,877 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:33:09,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:33:09,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:33:09,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:33:09,881 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,881 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:33:09,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:33:09,884 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,885 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:33:09,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:33:09,888 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,888 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:33:09,891 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:33:09,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:33:09,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:09,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:33:09,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:09,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:09,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:33:09,897 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:33:09,898 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:33:09,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:33:09,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:33:09,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:33:09,901 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,902 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:33:09,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:33:09,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:33:09,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:33:09,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,908 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:33:09,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:33:09,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:33:09,912 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,912 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:33:09,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:33:09,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:33:09,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,916 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:33:09,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:33:09,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:33:09,921 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,922 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:33:09,926 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:33:09,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:33:09,935 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,935 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:33:09,938 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,938 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:33:09,940 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:33:09,947 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:33:09,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:33:09,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:33:09,951 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:33:09,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:33:09,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:33:09,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:33:09,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:33:09,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:33:09,953 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:33:09,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:33:09,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:33:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:33:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:33:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:33:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:33:09,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:33:09,954 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:33:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:33:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:33:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:33:09,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:33:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:33:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:33:09,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:33:09,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:33:09,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:33:09,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:33:09,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:33:09,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:33:09,958 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:33:09,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:33:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:33:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:33:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:33:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:33:09,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:33:09,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:33:09,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:33:09,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:33:09,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:33:09,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:33:09,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:33:09,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:33:09,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:33:09,963 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:33:09,963 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:33:09,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:33:09,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:33:09,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:33:09,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:33:09,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:33:09,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:33:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:33:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:33:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:33:09,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:33:09,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:33:09,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:33:09,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:33:09,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:33:09,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:33:09,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:33:09,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:33:09,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:33:09,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:33:09,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:33:09,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:33:09,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:33:09,973 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:33:09,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:33:09,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:33:09,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:33:09,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:33:09,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:33:09,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:33:09,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:33:09,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:33:09,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:33:09,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:33:09,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:33:09,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:33:09,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:33:09,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:33:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:33:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:33:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:09,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:33:09,979 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:33:09,980 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:09,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:33:09,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:33:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:33:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:33:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:33:09,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:33:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:33:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:33:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:33:09,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:33:09,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:33:09,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:33:09,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:33:09,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:33:09,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:33:09,984 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:33:09,984 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:33:09,985 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:33:09,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:33:09,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:33:09,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:33:09,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:33:09,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:33:09,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:33:09,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:33:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:33:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:33:09,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:33:09,995 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:33:10,000 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:33:10,001 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:33:10,002 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:33:10,002 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:33:10,002 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:33:10,002 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:33:10,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:33:10,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:33:10,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:33:10,003 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:33:10,004 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:10,004 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:10,004 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:33:10,004 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:10,004 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:10,005 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:33:10,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:33:10,006 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:33:10,007 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:33:10,008 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:33:10,008 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:33:10,008 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:33:10,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:33:10,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:33:10,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:33:10,010 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:10,010 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:10,010 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:33:10,010 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:33:10,011 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:33:10,035 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:33:10,036 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:33:10,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:33:10,037 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:33:10,037 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:33:10,037 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:33:10,037 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:33:10,038 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:33:10,038 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:33:10,040 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:33:10,040 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:33:10,041 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:33:10,042 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:33:10,042 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:33:10,043 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:33:10,043 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:33:10,043 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:33:10,044 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:33:10,044 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:33:10,044 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:33:11,435 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:33:11,437 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:33:11,452 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:33:11,455 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:33:11,461 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,815,104.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:33:11,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:33:11,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:33:11,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:33:11,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:33:11,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:33:11,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:33:11,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:33:11,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:33:11,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:33:11,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:33:11,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:33:11,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:33:11,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:33:11,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:33:11,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:33:11,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:33:11,473 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:33:11,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:33:11,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:33:11,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:33:11,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:33:11,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:33:11,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:33:11,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:33:11,483 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:11,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:11,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:11,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:11,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:11,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:33:11,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:11,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:11,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:33:11,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:33:11,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:11,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:33:11,488 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:33:11,488 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:11,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:33:11,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:33:11,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:33:11,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:33:11,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:33:11,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:33:11,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:33:11,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:33:11,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:33:11,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:33:11,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:33:11,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:33:11,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:33:11,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:33:11,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:33:11,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:33:11,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:33:11,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:33:11,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:33:11,503 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:33:22,471 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:33:22,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:33:22,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:33:22,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:33:22,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:33:22,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:33:22,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:33:22,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:33:22,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:33:22,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:33:22,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:33:22,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:33:22,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:33:22,599 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:33:22,599 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:33:22,599 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:34:19,757 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:34:19,777 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:34:19,783 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:34:19,784 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:34:19,785 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:34:19,785 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:34:19,785 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:34:19,786 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:34:19,859 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:34:19,860 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:34:19,864 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:34:19,878 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:34:19,895 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:34:19,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:34:19,917 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:34:19,923 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:34:19,954 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:34:19,957 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:34:19,961 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:34:19,962 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:34:19,963 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:34:19,963 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:34:19,963 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:34:19,964 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:34:19,964 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:19,964 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:19,964 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:34:19,964 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:19,965 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:19,965 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:34:19,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:34:19,971 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:34:19,971 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:34:19,972 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:34:19,972 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:34:19,973 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:34:19,973 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:34:19,979 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:34:19,981 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:34:19,983 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:34:19,985 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:34:19,986 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:34:19,987 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:34:19,988 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:34:19,989 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:34:19,989 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:34:19,990 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:34:19,990 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:34:19,991 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:34:19,991 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:34:20,005 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:34:20,006 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:34:20,007 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:34:20,009 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:34:20,010 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:34:20,010 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:34:20,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:34:20,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:34:20,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:34:20,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:34:20,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:34:20,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:34:20,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:34:20,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:34:20,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:34:20,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:34:20,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:34:20,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:34:20,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:34:20,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:34:20,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:34:20,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:34:20,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,046 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:34:20,046 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:34:20,046 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:34:20,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:34:20,047 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:34:20,048 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:34:20,048 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:34:20,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:34:20,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:34:20,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:34:20,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:34:20,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:34:20,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:34:20,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:34:20,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:34:20,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:34:20,051 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:34:20,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:34:20,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:34:20,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:34:20,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:34:20,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:34:20,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:34:20,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:34:20,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:34:20,055 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:34:20,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:34:20,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:34:20,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:34:20,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:34:20,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:34:20,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:34:20,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:34:20,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:34:20,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:34:20,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:34:20,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:34:20,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:34:20,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:34:20,058 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:34:20,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:34:20,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:34:20,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:34:20,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:34:20,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:34:20,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:34:20,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:34:20,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:34:20,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:34:20,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:34:20,062 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:34:20,062 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:34:20,063 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:34:20,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:34:20,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:34:20,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:34:20,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:34:20,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:34:20,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:34:20,073 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:34:20,073 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:34:20,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:34:20,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:34:20,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:34:20,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:34:20,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:34:20,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:34:20,076 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:34:20,076 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:34:20,076 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:34:20,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:34:20,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:34:20,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:34:20,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:34:20,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:34:20,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:34:20,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:34:20,113 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:34:20,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:34:20,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:34:20,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:34:20,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:34:20,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:34:20,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:34:20,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:34:20,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:34:20,127 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:34:20,128 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:34:20,128 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:34:20,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:34:20,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:34:20,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:34:20,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:34:20,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:34:20,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:34:20,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:34:20,132 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:34:20,133 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:34:20,133 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:34:20,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:34:20,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:34:20,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:34:20,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:34:20,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:34:20,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:34:20,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:34:20,137 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:34:20,138 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:34:20,138 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:34:20,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:34:20,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:34:20,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:34:20,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:34:20,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:34:20,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:34:20,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:34:20,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:34:20,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:34:20,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:34:20,155 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:34:20,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:34:20,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:34:20,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:34:20,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:20,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:34:20,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:34:20,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,169 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:34:20,169 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:34:20,170 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:34:20,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:34:20,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:34:20,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:34:20,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:34:20,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:34:20,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:20,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:20,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:34:20,172 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:34:20,172 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:34:20,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:34:20,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:34:20,175 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:34:20,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:34:20,178 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,178 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:34:20,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:34:20,180 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,180 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:34:20,183 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,183 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:34:20,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:34:20,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:20,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:34:20,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:20,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:20,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:34:20,189 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:34:20,190 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:34:20,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:34:20,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:34:20,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:34:20,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:34:20,194 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,195 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:34:20,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:34:20,197 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:34:20,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:34:20,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:34:20,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:20,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:34:20,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:20,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:20,204 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:34:20,205 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:34:20,205 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:34:20,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:34:20,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:34:20,208 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,208 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:34:20,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:34:20,211 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,212 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:34:20,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:34:20,216 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,216 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:34:20,219 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,219 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:34:20,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:34:20,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:20,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:34:20,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:20,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:20,225 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:34:20,225 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:34:20,226 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:34:20,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:34:20,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:34:20,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:34:20,230 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:34:20,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:34:20,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:34:20,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:34:20,236 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,237 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:34:20,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:34:20,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:34:20,240 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,241 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:34:20,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:34:20,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:34:20,245 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,245 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:34:20,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:34:20,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:34:20,250 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,250 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:34:20,254 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:34:20,258 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,258 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:34:20,261 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,262 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:34:20,265 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:34:20,267 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,267 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:34:20,274 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,274 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:34:20,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:34:20,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:34:20,276 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:34:20,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:34:20,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:34:20,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:34:20,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:34:20,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:34:20,277 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:34:20,278 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:34:20,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:34:20,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:34:20,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:34:20,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:34:20,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:34:20,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:34:20,279 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:34:20,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:34:20,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:34:20,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:34:20,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:34:20,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:20,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:34:20,282 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:34:20,283 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:34:20,283 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:34:20,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:34:20,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:34:20,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:34:20,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:34:20,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:34:20,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:34:20,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:34:20,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:34:20,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:34:20,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:34:20,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:34:20,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:34:20,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:34:20,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:34:20,286 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:34:20,287 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:34:20,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:34:20,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:34:20,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:34:20,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:34:20,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:34:20,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:34:20,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:34:20,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:34:20,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:34:20,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:34:20,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:34:20,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:34:20,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:34:20,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:34:20,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:34:20,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:34:20,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:34:20,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:34:20,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:34:20,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:34:20,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:34:20,298 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:34:20,298 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:34:20,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:34:20,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:34:20,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:34:20,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:34:20,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:34:20,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:34:20,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:34:20,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:34:20,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:34:20,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:34:20,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:34:20,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:34:20,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:34:20,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:34:20,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:34:20,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:34:20,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:20,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:34:20,304 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:34:20,305 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:20,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:34:20,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:34:20,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:34:20,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:34:20,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:34:20,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:34:20,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:34:20,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:34:20,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:34:20,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:34:20,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:34:20,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:34:20,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:34:20,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:34:20,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:34:20,309 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:34:20,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:34:20,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:34:20,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:34:20,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:34:20,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:34:20,311 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:34:20,311 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:34:20,311 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:34:20,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:34:20,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:34:20,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:34:20,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:34:20,319 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:34:20,323 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:34:20,325 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:34:20,325 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:34:20,326 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:34:20,326 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:34:20,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:34:20,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:34:20,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:34:20,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:34:20,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:34:20,328 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:20,328 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:20,328 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:34:20,329 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:20,329 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:20,329 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:34:20,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:34:20,331 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:34:20,331 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:34:20,332 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:34:20,332 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:34:20,332 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:34:20,332 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:34:20,333 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:34:20,333 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:34:20,333 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:20,333 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:20,334 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:34:20,334 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:34:20,334 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:34:20,354 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:34:20,355 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:34:20,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:34:20,356 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:34:20,356 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:34:20,357 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:34:20,357 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:34:20,357 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:34:20,357 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:34:20,359 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:34:20,360 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:34:20,361 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:34:20,362 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:34:20,362 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:34:20,363 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:34:20,363 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:34:20,363 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:34:20,364 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:34:20,364 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:34:20,364 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:34:21,763 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:34:21,766 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:34:21,781 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:34:21,782 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:34:21,788 INFO  [7] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,802,816.00, Total Thread Count: 23
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:34:21,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:34:21,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:34:21,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:34:21,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:34:21,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:34:21,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:34:21,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:34:21,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:34:21,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:34:21,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:34:21,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:34:21,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:34:21,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:34:21,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:34:21,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:34:21,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:34:21,801 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:34:21,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:34:21,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:34:21,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:34:21,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:34:21,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:34:21,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:34:21,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:34:21,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:21,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:21,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:21,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:21,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:21,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:34:21,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:21,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:21,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:34:21,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:34:21,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:21,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:34:21,814 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:34:21,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:21,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:34:21,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:34:21,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:34:21,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:34:21,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:34:21,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:34:21,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:34:21,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:34:21,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:34:21,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:34:21,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:34:21,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:34:21,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:34:21,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:34:21,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:34:21,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:34:21,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:34:21,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:34:21,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:34:21,831 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:34:42,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:34:42,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:34:42,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:34:42,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:34:42,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:34:42,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:34:42,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:34:42,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:34:42,071 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:34:42,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:34:42,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:34:42,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:34:42,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:34:42,223 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:34:42,223 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:34:42,223 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:37:43,767 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:37:43,787 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:37:43,793 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:37:43,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:37:43,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:37:43,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:37:43,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:37:43,797 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:37:43,920 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:37:43,921 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:37:43,924 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:37:43,937 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:37:43,953 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:37:43,972 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:37:43,974 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:37:43,980 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:37:44,056 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:37:44,058 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:37:44,061 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:37:44,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:37:44,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:37:44,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:37:44,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:37:44,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:37:44,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:37:44,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,066 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,066 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:37:44,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:37:44,071 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:37:44,072 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:37:44,073 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:37:44,073 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:37:44,074 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:37:44,074 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:37:44,079 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:37:44,080 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:37:44,082 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:37:44,084 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:37:44,085 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:37:44,086 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:37:44,087 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:37:44,088 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:37:44,089 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:37:44,089 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:37:44,089 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:37:44,090 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:37:44,090 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:37:44,105 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:37:44,107 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:37:44,107 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:37:44,107 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:37:44,107 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:37:44,107 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:37:44,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:37:44,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:37:44,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:37:44,124 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:37:44,125 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:37:44,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:37:44,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:37:44,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:37:44,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:37:44,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:37:44,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:37:44,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:37:44,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:37:44,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:37:44,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:37:44,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:37:44,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,142 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:37:44,142 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:37:44,142 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:37:44,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:37:44,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:37:44,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:37:44,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:37:44,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:37:44,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:37:44,143 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:37:44,143 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:37:44,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:37:44,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:37:44,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:37:44,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:37:44,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:37:44,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:37:44,146 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:37:44,146 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:37:44,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:37:44,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:37:44,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:37:44,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:37:44,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:37:44,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:37:44,149 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:37:44,149 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:37:44,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:37:44,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:37:44,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:37:44,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:37:44,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:37:44,153 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:37:44,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:37:44,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:37:44,154 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:37:44,154 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:37:44,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:37:44,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:37:44,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:37:44,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:37:44,156 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:37:44,157 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:37:44,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:37:44,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:37:44,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:37:44,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:37:44,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:37:44,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:37:44,168 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:37:44,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:37:44,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:37:44,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:37:44,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:37:44,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:37:44,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:37:44,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:37:44,171 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:37:44,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:37:44,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:37:44,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:37:44,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:37:44,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:37:44,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:37:44,208 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:37:44,208 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:37:44,209 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:37:44,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:37:44,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:37:44,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:37:44,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:37:44,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:37:44,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:37:44,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:37:44,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:37:44,220 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:37:44,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:37:44,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:37:44,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:37:44,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:37:44,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:37:44,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:37:44,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:37:44,224 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:37:44,224 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:37:44,224 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:37:44,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:37:44,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:37:44,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:37:44,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:37:44,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:37:44,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:37:44,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:37:44,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:37:44,228 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:37:44,229 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:37:44,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:37:44,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:37:44,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:37:44,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:37:44,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:37:44,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:37:44,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:37:44,245 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:37:44,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:37:44,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:37:44,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:37:44,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:44,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:37:44,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:37:44,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,258 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:37:44,258 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:37:44,258 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:37:44,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:37:44,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:37:44,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:37:44,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:37:44,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:37:44,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:44,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:44,261 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:37:44,261 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:37:44,261 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:37:44,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:37:44,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:37:44,264 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:37:44,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:37:44,267 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,267 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:37:44,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:37:44,269 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,269 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:37:44,272 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:37:44,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:37:44,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:44,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:37:44,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:44,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:44,277 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:37:44,278 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:37:44,278 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:37:44,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:37:44,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:37:44,281 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,281 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:37:44,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:37:44,284 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,284 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:37:44,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:37:44,286 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,286 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:37:44,288 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,289 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:37:44,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:37:44,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:44,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:37:44,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:44,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:44,293 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:37:44,294 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:37:44,294 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:37:44,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:37:44,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:37:44,297 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:37:44,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:37:44,300 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,300 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:37:44,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:37:44,303 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,303 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:37:44,306 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:37:44,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:37:44,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:44,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:37:44,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:44,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:44,313 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:37:44,313 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:37:44,314 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:37:44,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:37:44,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:37:44,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:37:44,317 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,318 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:37:44,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:37:44,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:37:44,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:37:44,323 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,324 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:37:44,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:37:44,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:37:44,327 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:37:44,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:37:44,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:37:44,331 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,331 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:37:44,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:37:44,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:37:44,336 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:37:44,341 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,342 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:37:44,346 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,346 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:37:44,349 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,349 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:37:44,352 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,352 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:37:44,355 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,355 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:37:44,362 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,362 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:37:44,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:37:44,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:37:44,364 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:37:44,364 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:37:44,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:37:44,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:37:44,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:37:44,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:37:44,366 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:37:44,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:37:44,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:37:44,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:37:44,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:37:44,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:37:44,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:37:44,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:37:44,369 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:37:44,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:37:44,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:37:44,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:37:44,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:37:44,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:37:44,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:37:44,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:37:44,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:37:44,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:37:44,372 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:37:44,372 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:37:44,372 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:37:44,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:37:44,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:37:44,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:37:44,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:37:44,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:37:44,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:37:44,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:37:44,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:37:44,375 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:37:44,376 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:37:44,376 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:37:44,376 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:37:44,376 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:37:44,376 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:37:44,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:37:44,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:37:44,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:37:44,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:37:44,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:37:44,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:37:44,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:37:44,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:37:44,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:37:44,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:37:44,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:37:44,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:37:44,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:37:44,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:37:44,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:37:44,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:37:44,389 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:37:44,389 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:37:44,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:37:44,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:37:44,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:37:44,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:37:44,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:37:44,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:37:44,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:37:44,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:37:44,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:37:44,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:37:44,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:37:44,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:37:44,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:37:44,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:37:44,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:37:44,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:37:44,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:44,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:37:44,395 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:37:44,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:44,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:37:44,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:37:44,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:37:44,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:37:44,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:37:44,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:37:44,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:37:44,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:37:44,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:37:44,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:37:44,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:37:44,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:37:44,400 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:37:44,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:37:44,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:37:44,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:37:44,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:37:44,401 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:37:44,402 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:37:44,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:37:44,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:37:44,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:37:44,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:37:44,409 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:37:44,413 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:37:44,414 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:37:44,414 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:37:44,415 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:37:44,415 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:37:44,415 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:37:44,416 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:37:44,416 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:37:44,416 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:37:44,416 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:37:44,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:37:44,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,417 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,418 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:37:44,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:37:44,419 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:37:44,419 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:37:44,420 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:37:44,420 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:37:44,421 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:37:44,421 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:37:44,421 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:37:44,421 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:37:44,422 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,422 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,422 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:37:44,422 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:37:44,422 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:37:44,441 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:37:44,442 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:37:44,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:37:44,443 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:37:44,443 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:37:44,443 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:37:44,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:37:44,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:37:44,444 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:37:44,446 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:37:44,447 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:37:44,448 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:37:44,449 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:37:44,450 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:37:44,450 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:37:44,451 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:37:44,451 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:37:44,451 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:37:44,452 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:37:44,452 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:37:45,862 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:37:45,864 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:37:45,886 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:37:45,888 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:37:45,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:37:45,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:37:45,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:37:45,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:37:45,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:37:45,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:37:45,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:37:45,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:37:45,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:45,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:45,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:45,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:45,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:45,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:37:45,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:45,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:45,895 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,438,272.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:37:45,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:37:45,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:37:45,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:45,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:37:45,897 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:37:45,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:45,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:37:45,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:37:45,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:37:45,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:37:45,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:37:45,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:37:45,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:37:45,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:37:45,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:37:45,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:37:45,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:37:45,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:37:45,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:37:45,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:37:45,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:37:45,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:37:45,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:37:45,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:37:45,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:37:45,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:37:47,289 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:37:47,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:37:47,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:37:47,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:37:47,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:37:47,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:37:47,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:37:47,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:37:47,294 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:37:47,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:37:47,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:37:47,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:37:47,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:37:47,411 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:37:47,411 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:37:47,412 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:39:06,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:39:06,440 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:39:06,448 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:39:06,448 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:39:06,450 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:39:06,450 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:39:06,451 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:39:06,451 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:39:06,599 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:39:06,600 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:39:06,603 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:39:06,617 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:39:06,636 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:39:06,660 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:39:06,661 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:39:06,667 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:39:06,699 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:39:06,702 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:39:06,705 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:39:06,707 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:39:06,707 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:39:06,707 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:39:06,708 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:39:06,708 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:39:06,708 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:06,708 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:06,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:39:06,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:06,709 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:06,710 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:39:06,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:39:06,715 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:39:06,715 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:39:06,717 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:39:06,717 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:39:06,717 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:39:06,717 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:39:06,723 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:39:06,725 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:39:06,726 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:39:06,728 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:39:06,730 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:39:06,731 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:39:06,731 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:39:06,732 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:39:06,733 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:39:06,734 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:39:06,734 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:39:06,735 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:39:06,735 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:39:06,757 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:39:06,759 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:39:06,759 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:39:06,759 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:39:06,760 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:39:06,760 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:39:06,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:39:06,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:39:06,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:39:06,777 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:39:06,778 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:39:06,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:39:06,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:39:06,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:39:06,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:39:06,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:39:06,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:39:06,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:39:06,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:39:06,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:39:06,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:39:06,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:39:06,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:39:06,794 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:39:06,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:39:06,795 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:39:06,796 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:39:06,796 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:39:06,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:39:06,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:39:06,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:39:06,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:39:06,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:39:06,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:39:06,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:39:06,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:39:06,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:39:06,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:39:06,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:39:06,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:39:06,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:39:06,799 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:39:06,799 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:39:06,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:39:06,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:39:06,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:39:06,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:39:06,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:39:06,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:39:06,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:39:06,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:39:06,802 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:39:06,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:39:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:39:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:39:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:39:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:39:06,805 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:39:06,805 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:39:06,806 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:39:06,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:39:06,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:39:06,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:39:06,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:39:06,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:39:06,807 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:39:06,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:39:06,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:39:06,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:39:06,808 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:39:06,809 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:39:06,809 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:39:06,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:39:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:39:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:39:06,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:39:06,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:39:06,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:39:06,821 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:39:06,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:39:06,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:39:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:39:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:39:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:39:06,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:39:06,824 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:39:06,824 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:39:06,824 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:39:06,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:39:06,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:39:06,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:39:06,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:39:06,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:39:06,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:39:06,857 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:39:06,857 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:39:06,857 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:39:06,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:39:06,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:39:06,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:39:06,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:39:06,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:39:06,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:39:06,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:39:06,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:39:06,869 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:39:06,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:39:06,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:39:06,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:39:06,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:39:06,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:39:06,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:39:06,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:39:06,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:39:06,873 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:39:06,873 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:39:06,873 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:39:06,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:39:06,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:39:06,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:39:06,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:39:06,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:39:06,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:39:06,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:39:06,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:39:06,877 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:39:06,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:39:06,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:39:06,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:39:06,890 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:39:06,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:39:06,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:39:06,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:39:06,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:39:06,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:39:06,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:39:06,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:39:06,894 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:39:06,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:39:06,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:39:06,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:39:06,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:39:06,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:39:06,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:39:06,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:39:06,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:39:06,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:39:06,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:06,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:39:06,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:39:06,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:06,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:06,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:06,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:06,907 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:39:06,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:39:06,908 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:39:06,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:39:06,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:39:06,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:39:06,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:39:06,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:39:06,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:06,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:06,910 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:39:06,910 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:39:06,910 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:39:06,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:39:06,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:39:06,913 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:39:06,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:39:06,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,916 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:39:06,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:39:06,918 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:39:06,921 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:39:06,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:39:06,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:06,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:39:06,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:06,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:06,926 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:39:06,927 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:39:06,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:39:06,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:39:06,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:39:06,929 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,929 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:39:06,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:39:06,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:39:06,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:39:06,934 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,934 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:39:06,936 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,937 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:39:06,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:39:06,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:06,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:39:06,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:06,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:06,942 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:39:06,942 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:39:06,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:39:06,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:39:06,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:39:06,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:39:06,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:39:06,949 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:39:06,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:39:06,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:39:06,956 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,956 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:39:06,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:39:06,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:06,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:39:06,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:06,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:06,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:39:06,962 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:39:06,963 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:39:06,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:39:06,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:39:06,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:39:06,967 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,968 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:39:06,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:39:06,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:39:06,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:39:06,974 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,975 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:39:06,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:39:06,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:39:06,979 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,979 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:39:06,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:39:06,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:39:06,983 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,983 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:39:06,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:39:06,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:39:06,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:39:06,988 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:06,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:06,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:06,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:39:06,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:39:06,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:39:06,993 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,993 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:06,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:06,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:06,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:39:06,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:39:06,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:06,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:39:06,998 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:06,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:06,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:39:07,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:39:07,002 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:07,003 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:39:07,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:39:07,006 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:07,006 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:39:07,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:39:07,009 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:07,010 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:39:07,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:39:07,016 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:07,016 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:39:07,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:39:07,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:39:07,018 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:39:07,018 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:39:07,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:39:07,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:39:07,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:39:07,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:39:07,020 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:39:07,020 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:39:07,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:39:07,021 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:39:07,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:39:07,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:39:07,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:39:07,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:39:07,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:39:07,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:39:07,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:07,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:07,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:07,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:07,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:39:07,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:39:07,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:39:07,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:39:07,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:39:07,026 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:39:07,026 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:39:07,026 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:39:07,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:39:07,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:39:07,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:39:07,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:39:07,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:39:07,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:39:07,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:39:07,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:39:07,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:39:07,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:39:07,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:39:07,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:39:07,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:39:07,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:39:07,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:39:07,030 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:39:07,030 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:39:07,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:39:07,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:39:07,031 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:39:07,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:39:07,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:39:07,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:39:07,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:39:07,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:39:07,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:39:07,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:39:07,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:39:07,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:39:07,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:39:07,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:39:07,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:39:07,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:39:07,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:39:07,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:39:07,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:39:07,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:39:07,043 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:39:07,043 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:39:07,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:39:07,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:39:07,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:39:07,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:39:07,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:39:07,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:39:07,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:39:07,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:39:07,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:39:07,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:39:07,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:39:07,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:39:07,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:39:07,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:39:07,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:39:07,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:39:07,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:07,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:39:07,048 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:39:07,049 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:07,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:39:07,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:39:07,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:39:07,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:39:07,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:39:07,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:39:07,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:39:07,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:39:07,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:39:07,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:39:07,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:39:07,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:39:07,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:39:07,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:39:07,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:39:07,053 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:39:07,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:39:07,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:39:07,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:39:07,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:39:07,054 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:39:07,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:39:07,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:39:07,055 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:39:07,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:39:07,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:39:07,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:39:07,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:39:07,061 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:39:07,065 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:39:07,066 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:39:07,067 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:39:07,067 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:39:07,067 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:39:07,068 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:39:07,068 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:39:07,068 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:39:07,068 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:39:07,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:39:07,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:07,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:07,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:39:07,070 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:07,070 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:07,070 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:39:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:39:07,072 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:39:07,073 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:39:07,073 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:39:07,074 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:39:07,074 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:39:07,074 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:39:07,074 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:39:07,075 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:39:07,075 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:07,075 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:07,075 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:39:07,076 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:39:07,076 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:39:07,096 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:39:07,096 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:39:07,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:39:07,097 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:39:07,097 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:39:07,097 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:39:07,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:39:07,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:39:07,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:39:07,100 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:39:07,101 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:39:07,101 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:39:07,103 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:39:07,104 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:39:07,104 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:39:07,104 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:39:07,105 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:39:07,105 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:39:07,105 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:39:07,106 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:39:08,499 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:39:08,501 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:39:08,515 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:39:08,518 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:39:08,518 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:39:08,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:39:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:39:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:39:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:39:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:39:08,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:39:08,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:39:08,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:08,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:08,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:08,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:39:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:08,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:08,523 INFO  [5] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,417,792.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:39:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:39:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:39:08,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:08,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:39:08,526 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:39:08,526 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:39:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:39:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:39:08,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:39:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:39:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:39:08,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:39:08,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:39:08,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:39:08,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:39:08,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:39:08,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:39:08,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:39:08,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:39:08,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:39:08,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:39:08,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:39:08,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:39:08,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:39:08,537 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:39:09,575 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:39:09,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:39:09,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:39:09,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:39:09,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:39:09,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:39:09,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:39:09,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:39:09,579 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:39:09,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:39:09,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:39:09,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:39:09,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:39:09,697 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:39:09,697 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:39:09,697 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:40:57,459 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:40:57,479 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:40:57,485 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:40:57,485 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:40:57,488 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:40:57,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:40:57,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:40:57,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:40:57,675 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:40:57,675 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:40:57,680 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:40:57,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:40:57,713 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:40:57,739 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:40:57,741 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:40:57,749 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:40:57,776 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:40:57,778 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:40:57,782 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:40:57,783 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:40:57,784 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:40:57,784 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:40:57,784 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:40:57,785 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:40:57,785 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:57,785 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:57,786 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:40:57,786 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:57,786 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:57,787 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:40:57,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:40:57,792 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:40:57,792 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:40:57,793 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:40:57,794 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:40:57,794 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:40:57,794 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:40:57,800 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:40:57,801 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:40:57,803 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:40:57,805 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:40:57,807 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:40:57,807 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:40:57,808 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:40:57,809 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:40:57,810 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:40:57,810 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:40:57,811 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:40:57,811 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:40:57,812 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:40:57,824 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:40:57,826 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:40:57,826 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:40:57,827 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:40:57,827 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:40:57,827 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:40:57,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:40:57,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:40:57,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:40:57,845 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:40:57,846 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:57,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:40:57,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:40:57,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:40:57,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:40:57,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:40:57,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:40:57,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:40:57,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:40:57,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:40:57,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:40:57,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:40:57,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:40:57,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:40:57,863 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:40:57,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:40:57,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:40:57,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:40:57,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:40:57,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:40:57,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:40:57,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:40:57,865 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:40:57,865 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:40:57,865 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:40:57,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:40:57,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:40:57,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:40:57,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:40:57,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:40:57,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:40:57,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:40:57,869 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:40:57,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:40:57,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:40:57,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:40:57,871 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:40:57,872 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:40:57,872 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:40:57,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:40:57,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:40:57,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:40:57,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:40:57,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:40:57,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:40:57,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:40:57,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:40:57,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:40:57,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:40:57,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:40:57,875 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:40:57,875 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:40:57,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:40:57,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:40:57,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:40:57,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:40:57,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:40:57,878 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:40:57,878 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:40:57,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:40:57,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:40:57,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:40:57,880 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:40:57,881 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:40:57,881 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:40:57,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:40:57,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:40:57,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:40:57,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:40:57,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:40:57,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:40:57,893 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:40:57,893 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:57,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:40:57,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:40:57,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:40:57,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:40:57,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:40:57,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:40:57,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:40:57,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:40:57,896 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:40:57,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:40:57,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:40:57,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:40:57,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:40:57,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:40:57,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:40:57,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:40:57,932 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:40:57,933 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:40:57,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:40:57,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:40:57,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:40:57,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:40:57,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:40:57,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:40:57,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:40:57,945 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:40:57,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:40:57,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:40:57,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:40:57,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:40:57,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:40:57,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:40:57,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:40:57,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:40:57,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:40:57,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:40:57,950 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:40:57,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:40:57,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:40:57,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:40:57,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:40:57,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:40:57,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:40:57,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:40:57,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:40:57,956 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:40:57,956 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:40:57,956 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:40:57,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:40:57,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:40:57,970 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:40:57,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:40:57,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:40:57,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:40:57,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:40:57,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:40:57,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:40:57,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:40:57,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:40:57,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:40:57,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:40:57,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:40:57,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:40:57,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:40:57,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:40:57,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:40:57,974 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:57,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:40:57,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:40:57,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:40:57,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:40:57,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:40:57,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:40:57,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:40:57,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:40:57,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:40:57,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:57,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:40:57,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:40:57,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:57,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:57,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:57,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:57,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:40:57,988 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:40:57,988 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:40:57,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:40:57,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:40:57,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:40:57,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:40:57,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:40:57,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:57,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:57,990 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:40:57,990 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:40:57,991 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:40:57,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:40:57,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:57,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:57,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:40:57,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:57,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:40:57,994 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:57,994 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:57,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:57,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:57,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:57,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:57,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:40:57,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:40:57,996 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:57,997 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:57,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:40:57,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:57,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:57,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:40:57,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:40:57,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:57,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:40:57,999 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:57,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:40:58,002 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,003 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:40:58,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:40:58,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:58,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:40:58,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:58,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:58,008 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:40:58,009 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:40:58,009 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:40:58,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:40:58,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:40:58,012 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,012 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:40:58,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:40:58,014 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,015 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:40:58,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:40:58,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,018 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:40:58,020 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:40:58,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:40:58,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:58,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:40:58,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:58,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:58,026 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:40:58,027 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:40:58,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:40:58,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:40:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:40:58,030 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:40:58,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:40:58,034 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:40:58,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:40:58,037 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:40:58,040 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:40:58,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:40:58,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:58,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:40:58,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:58,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:58,046 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:40:58,047 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:40:58,047 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:40:58,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:40:58,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:40:58,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:40:58,052 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,052 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:40:58,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:40:58,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:40:58,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:40:58,058 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:40:58,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:40:58,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:40:58,062 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,063 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:40:58,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:40:58,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:40:58,066 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,067 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:40:58,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:40:58,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:40:58,072 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,073 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:40:58,077 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,078 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:40:58,081 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:40:58,085 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,085 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:40:58,088 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,088 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:40:58,090 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,091 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:40:58,099 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,099 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:40:58,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:40:58,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:40:58,101 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:40:58,101 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:40:58,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:40:58,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:40:58,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:40:58,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:40:58,103 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:40:58,104 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:40:58,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:40:58,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:40:58,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:40:58,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:40:58,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:40:58,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:40:58,105 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:40:58,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:40:58,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:40:58,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:40:58,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:40:58,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:40:58,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:40:58,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:58,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:58,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:58,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:58,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:40:58,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:40:58,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:40:58,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:40:58,109 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:40:58,110 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:40:58,110 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:40:58,110 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:40:58,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:40:58,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:40:58,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:40:58,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:40:58,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:40:58,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:40:58,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:40:58,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:40:58,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:40:58,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:40:58,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:40:58,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:40:58,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:40:58,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:40:58,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:40:58,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:40:58,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:40:58,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:40:58,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:40:58,114 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:40:58,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:40:58,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:40:58,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:40:58,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:40:58,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:40:58,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:40:58,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:40:58,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:40:58,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:40:58,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:40:58,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:40:58,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:40:58,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:40:58,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:40:58,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:40:58,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:40:58,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:40:58,126 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:40:58,126 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:40:58,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:40:58,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:40:58,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:40:58,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:40:58,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:40:58,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:40:58,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:40:58,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:40:58,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:40:58,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:40:58,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:40:58,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:40:58,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:40:58,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:40:58,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:40:58,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:40:58,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:58,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:40:58,132 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:40:58,134 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:58,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:40:58,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:40:58,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:40:58,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:40:58,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:40:58,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:40:58,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:40:58,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:40:58,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:40:58,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:40:58,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:40:58,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:40:58,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:40:58,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:40:58,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:40:58,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:40:58,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:40:58,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:40:58,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:40:58,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:40:58,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:40:58,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:40:58,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:40:58,140 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:40:58,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:40:58,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:40:58,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:40:58,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:40:58,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:40:58,151 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:40:58,152 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:40:58,152 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:40:58,153 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:40:58,153 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:40:58,153 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:40:58,154 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:40:58,154 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:40:58,154 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:40:58,155 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:40:58,156 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:58,156 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:58,156 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:40:58,156 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:58,157 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:58,157 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:40:58,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:40:58,158 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:40:58,159 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:40:58,160 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:40:58,160 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:40:58,161 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:40:58,161 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:40:58,161 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:40:58,162 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:40:58,162 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:58,162 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:58,163 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:40:58,163 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:40:58,163 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:40:58,183 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:40:58,183 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:40:58,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:40:58,184 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:40:58,184 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:40:58,185 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:40:58,185 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:40:58,185 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:40:58,186 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:40:58,187 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:40:58,188 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:40:58,189 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:40:58,189 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:40:58,190 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:40:58,190 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:40:58,191 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:40:58,191 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:40:58,191 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:40:58,192 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:40:58,192 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:40:59,600 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:40:59,603 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:40:59,617 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:40:59,619 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:40:59,619 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:40:59,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:40:59,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:40:59,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:40:59,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:40:59,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:40:59,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:40:59,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:40:59,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:59,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:59,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:59,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:59,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:59,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:40:59,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:59,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:59,625 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,311,296.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:40:59,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:40:59,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:40:59,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:59,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:40:59,627 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:40:59,628 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:40:59,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:40:59,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:40:59,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:40:59,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:40:59,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:40:59,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:40:59,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:40:59,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:40:59,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:40:59,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:40:59,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:40:59,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:40:59,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:40:59,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:40:59,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:40:59,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:40:59,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:40:59,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:40:59,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:40:59,639 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:41:01,397 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:01,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:41:01,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:41:01,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:01,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:01,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:01,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:41:01,400 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:41:01,403 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:41:01,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:41:01,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:41:01,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:41:01,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:41:01,515 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:41:01,516 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:41:01,516 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:41:21,682 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:41:21,709 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:41:21,717 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:41:21,717 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:41:21,719 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:41:21,719 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:41:21,719 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:41:21,720 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:41:21,918 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:41:21,918 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:41:21,921 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:41:21,937 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:41:21,954 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:41:21,973 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:41:21,975 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:41:21,980 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:41:22,010 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:41:22,012 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:41:22,015 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:41:22,017 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:41:22,017 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:41:22,018 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:41:22,018 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:41:22,018 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:41:22,018 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,019 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,019 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:41:22,019 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,019 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,020 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:41:22,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:41:22,025 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:41:22,026 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:41:22,027 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:41:22,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:41:22,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:41:22,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:41:22,033 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:41:22,035 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:41:22,036 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:41:22,038 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:41:22,040 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:41:22,040 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:41:22,041 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:41:22,042 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:41:22,043 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:41:22,044 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:41:22,044 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:41:22,044 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:41:22,045 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:41:22,058 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:41:22,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:41:22,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:41:22,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:41:22,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:41:22,061 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:41:22,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:41:22,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:41:22,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:41:22,078 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:41:22,079 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:41:22,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:41:22,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:41:22,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:41:22,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:41:22,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:41:22,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:41:22,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:41:22,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:41:22,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:41:22,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:41:22,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:41:22,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:41:22,095 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:41:22,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:41:22,097 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:41:22,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:41:22,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:41:22,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:41:22,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:41:22,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:41:22,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:41:22,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:41:22,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:41:22,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:41:22,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:41:22,100 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:41:22,101 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:41:22,101 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:41:22,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:41:22,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:41:22,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:41:22,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:41:22,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:41:22,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:41:22,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:41:22,104 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:41:22,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:41:22,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:41:22,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:41:22,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:41:22,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:41:22,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:41:22,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:41:22,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:41:22,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:41:22,107 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:41:22,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:41:22,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:41:22,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:41:22,108 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:41:22,108 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:41:22,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:41:22,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:41:22,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:41:22,110 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:41:22,110 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:41:22,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:41:22,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:41:22,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:41:22,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:41:22,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:41:22,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:41:22,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:41:22,124 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:41:22,124 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:41:22,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:41:22,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:41:22,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:41:22,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:41:22,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:41:22,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:41:22,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:41:22,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:41:22,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:41:22,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:41:22,126 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:41:22,126 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:41:22,126 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:41:22,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:41:22,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:41:22,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:41:22,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:41:22,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:41:22,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:41:22,157 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:41:22,157 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:41:22,158 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:41:22,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:41:22,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:41:22,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:41:22,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:41:22,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:41:22,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:41:22,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:41:22,170 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:41:22,170 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:41:22,170 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:41:22,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:41:22,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:41:22,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:41:22,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:41:22,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:41:22,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:41:22,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:41:22,174 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:41:22,174 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:41:22,174 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:41:22,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:41:22,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:41:22,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:41:22,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:41:22,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:41:22,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:41:22,178 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:41:22,178 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:41:22,178 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:41:22,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:41:22,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:41:22,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:41:22,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:41:22,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:41:22,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:41:22,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:41:22,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:41:22,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:41:22,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:41:22,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:41:22,196 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:41:22,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:41:22,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:41:22,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:41:22,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:41:22,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:41:22,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:22,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:41:22,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:41:22,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,211 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:41:22,211 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:41:22,211 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:41:22,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:41:22,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:41:22,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:41:22,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:41:22,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:41:22,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:22,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:22,214 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:41:22,214 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:41:22,214 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:41:22,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:41:22,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:41:22,217 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,218 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:41:22,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:41:22,220 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:41:22,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:41:22,222 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,223 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:41:22,225 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,226 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:41:22,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:41:22,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:22,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:41:22,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:22,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:22,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:41:22,231 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:41:22,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:41:22,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:41:22,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:41:22,234 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,234 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:41:22,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:41:22,236 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,236 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:41:22,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:41:22,238 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,239 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:41:22,241 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,241 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:41:22,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:41:22,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:22,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:41:22,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:22,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:22,245 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:41:22,246 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:41:22,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:41:22,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:41:22,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:41:22,249 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,249 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:41:22,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:41:22,252 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,252 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:41:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:41:22,256 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,257 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:41:22,260 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,260 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:41:22,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:41:22,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:22,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:41:22,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:22,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:22,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:41:22,266 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:41:22,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:41:22,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:41:22,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:41:22,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:41:22,271 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:41:22,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:41:22,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:41:22,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:41:22,277 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,277 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:41:22,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:41:22,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:41:22,281 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,281 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:41:22,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:41:22,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:41:22,285 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,285 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:41:22,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:41:22,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:41:22,290 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,291 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:41:22,295 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,295 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:41:22,299 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,299 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:41:22,302 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,302 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:41:22,305 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,305 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:41:22,308 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,308 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:41:22,314 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,314 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:41:22,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:41:22,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:41:22,316 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:41:22,316 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:41:22,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:41:22,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:41:22,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:41:22,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:41:22,318 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:41:22,319 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:41:22,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:41:22,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:41:22,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:41:22,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:41:22,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:41:22,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:41:22,321 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:41:22,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:41:22,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:41:22,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:41:22,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:41:22,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:41:22,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:41:22,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:41:22,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:41:22,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:41:22,324 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:41:22,324 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:41:22,324 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:41:22,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:41:22,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:41:22,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:41:22,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:41:22,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:41:22,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:41:22,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:41:22,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:41:22,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:41:22,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:41:22,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:41:22,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:41:22,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:41:22,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:41:22,328 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:41:22,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:41:22,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:41:22,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:41:22,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:41:22,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:41:22,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:41:22,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:41:22,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:41:22,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:41:22,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:41:22,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:41:22,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:41:22,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:41:22,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:41:22,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:41:22,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:41:22,340 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:41:22,341 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:41:22,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:41:22,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:41:22,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:41:22,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:41:22,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:41:22,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:41:22,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:41:22,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:41:22,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:41:22,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:41:22,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:41:22,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:41:22,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:41:22,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:41:22,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:41:22,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:41:22,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:22,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:41:22,346 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:41:22,348 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:22,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:41:22,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:41:22,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:41:22,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:41:22,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:41:22,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:41:22,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:41:22,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:41:22,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:41:22,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:41:22,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:41:22,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:41:22,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:41:22,352 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:41:22,353 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:41:22,353 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:41:22,353 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:41:22,353 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:41:22,353 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:41:22,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:41:22,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:41:22,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:41:22,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:41:22,362 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:41:22,365 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:41:22,367 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:41:22,367 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:41:22,367 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:41:22,368 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:41:22,368 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:41:22,368 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:41:22,369 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:41:22,369 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:41:22,369 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:41:22,369 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:41:22,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,370 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,371 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:41:22,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:41:22,372 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:41:22,373 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:41:22,373 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:41:22,374 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:41:22,374 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:41:22,374 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:41:22,374 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:41:22,375 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:41:22,375 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,375 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,375 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:41:22,376 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:41:22,376 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:41:22,401 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:41:22,402 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:41:22,403 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:41:22,403 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:41:22,403 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:41:22,403 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:41:22,404 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:41:22,404 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:41:22,404 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:41:22,406 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:41:22,407 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:41:22,407 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:41:22,408 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:41:22,409 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:41:22,409 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:41:22,409 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:41:22,409 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:41:22,410 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:41:22,410 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:41:22,410 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:41:23,851 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:41:23,855 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:41:23,868 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:41:23,890 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:41:23,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:41:23,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:41:23,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:41:23,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:41:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:41:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:41:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:41:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:41:23,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:23,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:23,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:41:23,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:23,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:23,896 INFO  [5] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,131,072.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:41:23,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:41:23,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:41:23,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:23,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:41:23,899 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:41:23,900 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:23,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:41:23,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:41:23,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:41:23,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:41:23,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:41:23,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:41:23,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:41:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:41:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:41:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:41:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:41:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:41:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:41:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:41:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:41:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:41:23,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:23,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:41:23,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:41:23,910 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:41:25,553 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:41:25,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:41:25,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:41:25,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:25,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:25,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:41:25,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:41:25,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:41:25,557 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:41:25,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:41:25,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:41:25,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:41:25,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:41:25,665 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:41:25,665 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:41:25,665 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:42:28,051 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:42:28,073 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:42:28,079 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:42:28,080 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:42:28,082 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:42:28,082 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:42:28,082 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:42:28,082 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:42:28,225 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:42:28,226 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:42:28,230 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:42:28,244 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:42:28,262 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:42:28,284 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:42:28,286 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:42:28,291 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:42:28,319 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:42:28,321 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:42:28,324 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:42:28,325 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:42:28,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:42:28,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:42:28,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:42:28,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:42:28,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:42:28,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,328 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,328 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:42:28,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:42:28,335 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:42:28,335 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:42:28,337 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:42:28,337 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:42:28,337 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:42:28,337 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:42:28,344 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:42:28,346 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:42:28,348 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:42:28,350 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:42:28,352 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:42:28,352 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:42:28,353 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:42:28,354 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:42:28,355 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:42:28,355 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:42:28,355 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:42:28,356 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:42:28,356 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:42:28,369 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:42:28,370 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:42:28,371 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:42:28,371 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:42:28,371 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:42:28,371 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:42:28,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:42:28,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:42:28,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:42:28,389 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:42:28,390 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:42:28,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:42:28,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:42:28,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:42:28,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:42:28,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:42:28,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:42:28,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:42:28,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:42:28,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:42:28,404 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:42:28,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:42:28,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,405 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,406 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,407 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:42:28,407 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:42:28,407 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:42:28,407 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:42:28,408 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:42:28,408 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:42:28,409 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:42:28,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:42:28,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:42:28,410 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:42:28,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:42:28,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:42:28,411 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:42:28,412 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:42:28,412 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:42:28,412 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:42:28,412 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:42:28,413 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:42:28,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:42:28,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:42:28,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:42:28,414 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:42:28,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,415 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:42:28,415 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:42:28,415 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:42:28,416 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:42:28,417 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:42:28,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:42:28,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,418 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:42:28,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:42:28,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,419 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:42:28,420 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:42:28,420 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:42:28,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:42:28,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:42:28,421 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:42:28,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:42:28,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:42:28,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:42:28,423 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:42:28,423 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:42:28,424 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:42:28,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:42:28,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:42:28,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:42:28,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:42:28,433 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:42:28,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:42:28,434 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:42:28,434 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,434 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:42:28,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:42:28,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:42:28,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:42:28,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:42:28,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:42:28,436 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:42:28,437 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:42:28,437 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:42:28,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,469 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,470 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:42:28,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:42:28,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:42:28,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:42:28,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:42:28,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:42:28,472 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:42:28,473 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:42:28,473 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:42:28,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,474 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:42:28,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,484 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:42:28,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,485 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:42:28,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:42:28,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:42:28,486 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:42:28,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:42:28,487 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:42:28,487 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:42:28,487 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:42:28,487 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:42:28,488 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:42:28,489 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:42:28,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:42:28,490 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:42:28,491 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:42:28,491 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:42:28,491 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:42:28,491 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:42:28,492 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:42:28,492 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,492 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,492 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,492 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:42:28,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:42:28,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:42:28,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:42:28,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:42:28,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:42:28,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:42:28,496 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:42:28,496 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:42:28,496 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:42:28,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:42:28,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:42:28,510 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:42:28,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:42:28,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:42:28,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:42:28,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:42:28,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:42:28,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:42:28,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:42:28,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:42:28,514 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:42:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:42:28,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:42:28,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:42:28,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:42:28,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:28,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:42:28,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:42:28,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,529 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:42:28,529 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:42:28,530 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:42:28,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:42:28,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:42:28,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:42:28,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:42:28,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:42:28,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:28,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:28,532 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:42:28,532 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:42:28,532 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:42:28,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:42:28,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:42:28,535 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,535 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:42:28,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:42:28,538 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:42:28,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:42:28,541 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,541 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:42:28,545 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:42:28,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:42:28,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:28,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:42:28,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:28,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:28,551 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:42:28,551 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:42:28,551 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:42:28,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:42:28,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:42:28,553 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,554 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:42:28,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:42:28,556 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,556 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:42:28,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:42:28,558 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,559 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,560 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,560 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,560 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:42:28,561 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,561 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:42:28,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:42:28,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:28,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:42:28,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:28,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:28,566 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:42:28,566 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:42:28,567 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:42:28,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:42:28,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:42:28,569 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,570 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:42:28,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:42:28,574 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,574 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:42:28,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:42:28,577 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,578 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:42:28,582 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,582 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:42:28,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:42:28,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:28,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:42:28,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:28,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:28,588 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:42:28,588 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:42:28,589 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:42:28,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:42:28,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:42:28,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:42:28,592 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,593 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:42:28,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:42:28,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:42:28,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:42:28,598 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,599 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:42:28,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:42:28,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:42:28,603 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,604 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:42:28,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:42:28,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:42:28,608 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,608 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:42:28,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:42:28,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:42:28,614 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,615 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:42:28,618 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,619 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,620 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:42:28,623 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,623 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:42:28,626 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,627 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:42:28,629 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,629 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:42:28,632 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,632 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:42:28,639 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,639 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:42:28,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:42:28,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:42:28,641 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:42:28,641 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:42:28,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:42:28,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:42:28,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:42:28,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:42:28,643 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:42:28,643 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:42:28,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:42:28,645 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:42:28,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:42:28,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:42:28,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:42:28,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:42:28,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:42:28,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:42:28,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:28,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:28,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:28,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:42:28,648 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:42:28,649 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:42:28,649 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:42:28,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:42:28,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:42:28,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:42:28,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:42:28,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:42:28,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:42:28,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:42:28,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:42:28,651 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:42:28,651 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:42:28,651 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:42:28,651 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:42:28,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:42:28,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:42:28,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:42:28,653 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:42:28,653 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:42:28,653 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:42:28,653 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:42:28,653 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:42:28,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:42:28,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:42:28,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:42:28,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:42:28,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:42:28,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:42:28,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:42:28,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:42:28,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:42:28,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:42:28,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:42:28,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:42:28,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:42:28,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:42:28,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:42:28,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:42:28,664 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:42:28,665 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:42:28,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:42:28,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:42:28,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:42:28,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:42:28,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:42:28,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:42:28,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:42:28,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:42:28,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:42:28,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:42:28,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:42:28,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:42:28,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:42:28,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:42:28,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:42:28,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:42:28,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:28,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:42:28,670 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:42:28,671 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:28,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:42:28,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:42:28,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:42:28,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:42:28,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:42:28,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:42:28,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:42:28,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:42:28,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:42:28,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:42:28,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:42:28,675 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:42:28,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:42:28,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:42:28,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:42:28,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:42:28,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:42:28,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:42:28,677 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:42:28,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:42:28,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:42:28,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:42:28,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:42:28,685 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:42:28,688 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:42:28,690 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:42:28,690 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:42:28,690 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:42:28,691 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:42:28,691 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:42:28,691 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:42:28,691 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:42:28,692 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:42:28,692 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:42:28,692 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,693 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,693 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:42:28,694 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,694 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,694 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:42:28,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:42:28,696 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:42:28,696 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:42:28,697 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:42:28,697 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:42:28,697 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:42:28,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:42:28,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:42:28,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:42:28,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:42:28,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:42:28,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:42:28,719 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:42:28,720 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:42:28,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:42:28,720 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:42:28,720 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:42:28,721 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:42:28,721 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:42:28,721 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:42:28,721 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:42:28,723 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:42:28,724 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:42:28,724 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:42:28,725 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:42:28,726 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:42:28,726 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:42:28,726 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:42:28,726 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:42:28,727 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:42:28,727 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:42:28,728 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:42:30,117 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:42:30,120 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:42:30,133 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:42:30,135 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:42:30,136 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:42:30,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:42:30,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:42:36,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:36,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:36,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:36,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:36,028 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,557,056.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:42:36,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:36,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:42:36,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:36,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:36,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:42:36,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:42:36,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:36,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:42:36,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:42:36,033 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:36,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:42:36,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:42:36,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:42:36,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:42:36,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:42:36,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:42:36,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:42:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:42:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:42:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:42:36,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:42:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:42:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:42:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:42:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:42:36,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:42:36,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:42:36,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:42:36,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:42:36,644 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:42:40,492 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:42:40,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:42:40,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:42:40,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:42:40,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:42:40,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:42:40,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:42:40,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:48:23,428 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:48:23,457 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:48:23,465 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:48:23,466 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:48:23,467 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:48:23,468 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:48:23,468 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:48:23,468 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:48:23,630 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:48:23,632 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:48:23,635 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:48:23,650 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:48:23,666 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:48:23,695 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:23,696 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:23,702 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:23,739 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:23,741 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:23,744 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:23,746 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:23,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:48:23,747 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:48:23,748 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:48:23,748 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:48:23,748 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:23,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:23,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:23,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:23,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:23,750 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:48:23,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:48:23,755 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:48:23,756 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:48:23,757 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:48:23,757 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:48:23,758 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:48:23,758 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:48:23,764 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:48:23,766 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:48:23,768 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:48:23,771 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:48:23,774 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:48:23,774 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:48:23,775 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:23,776 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:48:23,777 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:48:23,778 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:48:23,778 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:48:23,779 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:48:23,779 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:48:23,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:48:23,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:48:23,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:48:23,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:48:23,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:48:23,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:48:23,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:23,806 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:48:23,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,808 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:48:23,814 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:48:23,815 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:48:23,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:48:23,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:48:23,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:48:23,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:48:23,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:23,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:23,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:48:23,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:48:23,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:48:23,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:23,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:48:23,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,832 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:23,832 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:23,832 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:23,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:48:23,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:48:23,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:48:23,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:48:23,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:48:23,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:23,833 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:23,833 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:48:23,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:48:23,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:48:23,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:48:23,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:48:23,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:48:23,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:48:23,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:23,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:23,837 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:23,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:48:23,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:48:23,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:48:23,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:48:23,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:23,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:23,840 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:23,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:48:23,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:48:23,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:48:23,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:48:23,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:48:23,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:48:23,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:48:23,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:48:23,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:23,843 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:23,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:48:23,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:48:23,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:48:23,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:48:23,844 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:48:23,845 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:48:23,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:23,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:23,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:23,846 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:48:23,846 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:48:23,847 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:48:23,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:48:23,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:48:23,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:48:23,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:23,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:48:23,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:48:23,857 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:48:23,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:23,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:23,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:23,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:23,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:23,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:23,860 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:48:23,860 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:48:23,860 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:48:23,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:23,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:23,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:23,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:23,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:23,894 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:23,894 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:23,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:23,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:23,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:23,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:23,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:23,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:23,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:23,905 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:23,906 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:23,906 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:23,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:23,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:23,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:23,910 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:23,910 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:23,910 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:23,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:23,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:23,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:23,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:23,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:23,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:23,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:23,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:23,914 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:23,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:23,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:23,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:48:23,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:48:23,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:23,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:23,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:23,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:23,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:48:23,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:48:23,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:48:23,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:48:23,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:48:23,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:48:23,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:48:23,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:48:23,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:48:23,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:48:23,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:48:23,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:23,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:23,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:23,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:48:23,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:48:23,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:23,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:23,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:23,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:23,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:23,944 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:23,945 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:23,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:48:23,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:48:23,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:48:23,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:48:23,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:48:23,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:23,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:23,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:23,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:23,947 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:23,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:23,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:23,950 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:23,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:23,953 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,954 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:23,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:23,956 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,956 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:23,959 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,959 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:23,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:23,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:23,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:23,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:23,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:23,966 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:23,966 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:23,966 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:23,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:23,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:23,969 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:23,972 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,972 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:23,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:23,974 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,975 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:23,977 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,977 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:23,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:23,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:23,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:23,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:23,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:23,982 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:23,982 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:23,982 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:23,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:23,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:23,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:23,985 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,985 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:23,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:23,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:23,988 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:23,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:23,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:23,992 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,992 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:23,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:23,995 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:23,995 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:23,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:23,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:23,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:24,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:24,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:24,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:24,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:24,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:24,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:24,004 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:24,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:24,008 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,009 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:24,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:24,014 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,015 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:24,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:24,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:24,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:24,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:24,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:24,018 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,019 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:24,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:24,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:24,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:24,023 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,023 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:24,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:24,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:24,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:24,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:24,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:24,033 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:24,038 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,038 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:24,041 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:24,045 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,045 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:24,048 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,048 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:24,055 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:24,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:24,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:24,057 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:24,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:24,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:24,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:48:24,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:48:24,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:48:24,059 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:48:24,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:48:24,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:48:24,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:48:24,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:48:24,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:48:24,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:48:24,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:48:24,060 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:48:24,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:48:24,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:48:24,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:48:24,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:48:24,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:48:24,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:48:24,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:24,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:24,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:24,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:24,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:24,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:24,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:24,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:24,065 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:24,065 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:24,065 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:48:24,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:48:24,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:48:24,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:48:24,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:48:24,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:48:24,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:48:24,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:24,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:24,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:24,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:24,069 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:48:24,069 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:48:24,069 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:24,070 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:48:24,070 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:48:24,070 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:48:24,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:48:24,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:48:24,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:48:24,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:48:24,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:48:24,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:48:24,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:48:24,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:48:24,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:48:24,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:48:24,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:48:24,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:48:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:48:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:48:24,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:24,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:24,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:48:24,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:48:24,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:48:24,082 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:48:24,082 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:48:24,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:48:24,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:48:24,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:48:24,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:48:24,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:48:24,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:48:24,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:24,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:48:24,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:24,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:24,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:48:24,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:48:24,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:48:24,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:48:24,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:48:24,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:48:24,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:24,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:48:24,088 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:48:24,089 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:24,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:48:24,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:48:24,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:48:24,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:48:24,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:48:24,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:48:24,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:48:24,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:48:24,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:48:24,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:48:24,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:48:24,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:24,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:24,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:24,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:24,093 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:48:24,093 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:48:24,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:48:24,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:48:24,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:48:24,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:48:24,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:48:24,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:24,095 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:48:24,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:24,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:48:24,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:24,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:24,103 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:48:24,106 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:48:24,107 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:48:24,108 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:48:24,108 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:24,108 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:24,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:24,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:48:24,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:48:24,109 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:48:24,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:48:24,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:24,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:24,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:24,110 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:24,111 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:24,111 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:48:24,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:48:24,113 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:48:24,113 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:24,114 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:24,114 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:24,114 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:48:24,114 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:48:24,115 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:48:24,115 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:48:24,115 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:24,116 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:24,116 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:24,116 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:24,116 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:24,138 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:48:24,138 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:48:24,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:48:24,139 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:48:24,139 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:48:24,140 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:48:24,140 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:48:24,140 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:48:24,140 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:48:24,142 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:48:24,143 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:48:24,143 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:48:24,144 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:48:24,145 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:48:24,145 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:48:24,145 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:24,146 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:24,146 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:48:24,146 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:48:24,147 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:48:25,571 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:48:25,574 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:48:25,588 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:48:25,591 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:48:25,591 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:48:25,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:48:25,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:48:25,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:48:25,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:48:25,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:48:25,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:48:25,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:48:28,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:28,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:28,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:28,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:28,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:28,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:28,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:28,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:28,504 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,708,608.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:48:28,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:48:28,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:28,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:28,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:48:28,507 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:48:28,507 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:28,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:48:28,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:48:28,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:28,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:28,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:28,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:48:28,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:48:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:28,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:28,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:28,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:28,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:28,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:28,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:28,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:28,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:48:28,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:28,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:28,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:48:28,518 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:48:29,991 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:29,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:48:29,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:48:29,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:29,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:29,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:29,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:48:29,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:48:29,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:29,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:29,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:29,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:29,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationService => canonical name IRegionNavigationService]
2018-05-31 12:48:29,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationService' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationService]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:29,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationService'.]
2018-05-31 12:48:29,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:29,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:29,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:29,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:29,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationContentLoader => canonical name IRegionNavigationContentLoader]
2018-05-31 12:48:29,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:48:29,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationContentLoader' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationContentLoader]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:29,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationContentLoader'.]
2018-05-31 12:48:29,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:29,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:29,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:29,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:30,000 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationContentLoader' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:30,000 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationContentLoader] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:30,000 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationContentLoader' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:30,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionNavigationContentLoader' to allow for resolving potential circular references]
2018-05-31 12:48:30,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationContentLoader']
2018-05-31 12:48:30,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:48:30,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:48:30,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:48:30,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionNavigationContentLoader'.]
2018-05-31 12:48:30,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationContentLoader]
2018-05-31 12:48:30,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationJournal => canonical name IRegionNavigationJournal]
2018-05-31 12:48:30,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournal]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:30,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournal'.]
2018-05-31 12:48:30,003 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournal] using constructor [Void .ctor()]]
2018-05-31 12:48:30,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournal' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:30,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournal']
2018-05-31 12:48:30,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournal']
2018-05-31 12:48:30,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournal']
2018-05-31 12:48:30,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationJournal]
2018-05-31 12:48:30,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:30,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationContentLoader']
2018-05-31 12:48:30,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationJournal']
2018-05-31 12:48:30,005 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationService] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)]]
2018-05-31 12:48:30,006 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationService' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)].]
2018-05-31 12:48:30,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationService']
2018-05-31 12:48:30,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationService']
2018-05-31 12:48:30,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationService']
2018-05-31 12:48:30,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationService]
2018-05-31 12:48:30,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:48:30,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:30,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:48:30,012 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:48:30,013 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:30,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:48:30,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:48:30,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:48:30,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:48:30,016 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:48:30,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:48:30,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:48:30,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:48:30,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:48:30,127 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:48:30,127 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:48:30,127 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:48:48,406 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:48:48,430 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:48:48,438 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:48:48,438 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:48:48,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:48:48,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:48:48,441 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:48:48,441 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:48:48,591 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:48:48,591 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:48:48,595 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:48:48,610 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:48:48,628 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:48:48,657 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:48,659 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:48,664 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:48,690 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:48:48,692 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:48,695 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:48,697 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:48,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:48:48,698 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:48:48,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:48:48,699 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:48:48,700 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:48,700 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:48,700 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:48,701 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:48,701 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:48,702 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:48:48,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:48:48,710 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:48:48,710 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:48:48,712 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:48:48,712 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:48:48,713 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:48:48,713 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:48:48,719 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:48:48,720 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:48:48,722 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:48:48,724 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:48:48,725 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:48:48,726 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:48:48,727 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:48,728 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:48:48,729 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:48:48,730 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:48:48,730 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:48:48,731 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:48:48,731 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:48:48,743 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:48:48,745 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:48:48,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:48:48,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:48:48,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:48:48,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:48:48,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:48,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:48:48,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:48:48,764 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:48:48,765 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:48:48,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:48:48,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:48:48,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:48:48,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:48:48,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:48,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:48,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:48:48,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:48:48,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:48:48,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:48,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:48:48,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:48,782 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:48,782 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:48,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:48,783 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:48,783 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:48:48,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:48:48,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:48:48,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:48:48,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:48:48,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:48:48,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:48:48,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:48,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:48,787 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:48:48,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:48:48,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:48:48,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:48:48,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:48,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:48,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:48,790 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:48,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:48,790 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:48:48,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:48:48,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:48:48,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:48:48,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:48,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:48,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:48:48,794 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:48:48,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:48:48,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:48:48,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:48:48,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:48:48,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:48:48,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:48:48,796 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:48:48,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:48:48,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:48:48,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:48:48,798 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:48:48,798 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:48:48,798 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:48:48,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:48:48,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:48:48,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:48:48,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:48,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:48:48,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:48:48,823 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:48:48,823 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:48:48,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:48:48,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:48:48,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:48:48,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:48:48,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:48,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:48:48,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:48:48,826 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:48:48,860 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:48,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:48,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:48,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:48,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:48,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:48,865 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:48,865 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:48,866 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:48,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:48,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:48,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:48,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:48,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:48,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:48,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:48,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:48,878 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:48,878 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:48,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:48,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:48,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:48,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:48,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:48,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:48,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:48,882 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:48,882 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:48,882 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:48,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:48,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:48:48,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:48:48,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:48:48,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:48:48,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:48:48,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:48:48,887 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:48:48,887 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:48:48,887 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:48:48,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:48:48,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:48:48,900 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:48:48,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:48:48,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:48:48,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:48:48,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:48:48,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:48,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:48,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:48:48,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:48:48,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:48:48,904 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:48:48,904 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:48:48,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:48:48,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:48,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:48,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:48,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:48:48,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:48:48,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:48,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:48,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:48,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:48,917 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:48,917 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:48,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:48,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:48:48,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:48:48,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:48:48,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:48:48,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:48:48,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:48,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:48,919 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:48,920 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:48,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:48,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:48,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:48,923 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,923 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:48,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:48,925 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,926 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:48,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:48,928 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,928 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:48,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:48,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:48,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:48,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:48,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:48,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:48,936 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:48,936 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:48,937 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:48,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:48,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:48,939 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,939 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:48,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:48,941 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,941 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:48,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:48,944 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:48,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:48,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:48,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:48,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:48,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:48,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:48,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:48,951 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:48,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:48,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:48,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:48,954 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,954 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:48,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:48,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:48,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:48,960 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,961 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:48,963 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,964 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:48:48,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:48:48,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:48,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:48,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:48,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:48,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:48:48,970 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:48:48,970 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:48:48,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:48:48,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:48:48,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:48:48,974 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,974 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:48:48,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:48:48,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:48:48,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:48:48,980 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,980 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,981 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:48:48,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:48:48,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:48:48,984 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,984 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:48:48,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:48:48,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:48:48,988 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,988 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:48:48,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:48:48,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:48,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:48,992 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,993 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:48,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:48,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:48,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:48,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:48,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:48,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:48,997 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:48,998 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:48,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:48,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:48,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:49,002 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,002 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:49,005 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:49,008 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,008 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:49,010 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:48:49,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,017 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:48:49,019 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:48:49,019 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:48:49,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:48:49,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:48:49,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:48:49,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:48:49,020 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:48:49,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:48:49,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:48:49,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:48:49,022 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:48:49,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:48:49,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:48:49,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:48:49,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:48:49,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:48:49,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:48:49,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:49,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:49,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:49,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:49,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:49,025 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:48:49,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:48:49,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:48:49,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:48:49,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:48:49,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:48:49,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:48:49,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:49,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:49,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:49,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:49,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:48:49,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:48:49,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:49,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:48:49,029 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:48:49,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:48:49,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:48:49,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:48:49,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:48:49,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:48:49,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:48:49,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:48:49,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:48:49,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:48:49,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:48:49,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:48:49,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:48:49,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:48:49,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:48:49,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:48:49,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:48:49,040 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:48:49,040 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:48:49,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:48:49,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:48:49,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:48:49,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:48:49,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:48:49,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:48:49,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:49,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:48:49,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:49,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:49,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:48:49,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:48:49,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:48:49,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:48:49,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:48:49,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:48:49,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:49,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:48:49,045 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:48:49,046 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:49,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:48:49,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:48:49,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:48:49,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:48:49,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:48:49,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:48:49,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:48:49,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:48:49,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:48:49,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:48:49,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:48:49,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:48:49,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:48:49,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:48:49,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:48:49,050 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:48:49,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:48:49,052 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:48:49,052 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:48:49,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:48:49,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:48:49,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:48:49,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:48:49,058 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:48:49,061 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:48:49,062 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:48:49,062 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:48:49,063 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:49,063 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:49,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:49,063 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:48:49,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:48:49,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:48:49,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:48:49,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:49,064 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:49,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:49,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:49,065 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:49,066 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:48:49,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:48:49,067 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:48:49,067 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:48:49,068 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:48:49,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:48:49,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:48:49,069 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:48:49,070 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:48:49,070 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:48:49,070 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:49,071 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:49,071 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:48:49,071 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:48:49,071 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:48:49,091 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:48:49,091 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:48:49,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:48:49,092 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:48:49,092 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:48:49,092 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:48:49,093 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:48:49,093 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:48:49,093 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:48:49,095 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:48:49,095 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:48:49,096 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:48:49,096 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:48:49,097 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:48:49,097 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:48:49,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:49,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:48:49,098 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:48:49,099 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:48:49,099 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:48:50,490 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:48:50,493 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:48:50,506 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:48:50,508 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:48:50,509 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:48:50,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:48:50,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:48:50,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:48:50,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:48:50,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:48:50,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:48:50,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:48:52,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:52,126 INFO  [5] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,389,120.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:48:52,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:52,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:52,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:52,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:48:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:48:52,131 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:48:52,131 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:52,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:48:52,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:48:52,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:52,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:52,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:48:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:48:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:48:52,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:52,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:48:52,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:48:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:48:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:52,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:48:52,142 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:48:53,493 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:53,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:48:53,493 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:48:53,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:53,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:53,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:48:53,494 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:48:53,495 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:48:53,496 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:53,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:53,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:53,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:53,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationService => canonical name IRegionNavigationService]
2018-05-31 12:48:53,497 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationService' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationService]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:53,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationService'.]
2018-05-31 12:48:53,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:53,498 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:53,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:53,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:53,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationContentLoader => canonical name IRegionNavigationContentLoader]
2018-05-31 12:48:53,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationContentLoader' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationContentLoader]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:53,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationContentLoader'.]
2018-05-31 12:48:53,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:48:53,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:48:53,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:48:53,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:48:53,502 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationContentLoader' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:53,502 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationContentLoader] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:48:53,502 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationContentLoader' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:48:53,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionNavigationContentLoader' to allow for resolving potential circular references]
2018-05-31 12:48:53,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionNavigationContentLoader'.]
2018-05-31 12:48:53,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationContentLoader]
2018-05-31 12:48:53,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationJournal => canonical name IRegionNavigationJournal]
2018-05-31 12:48:53,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournal]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:53,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournal'.]
2018-05-31 12:48:53,505 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournal] using constructor [Void .ctor()]]
2018-05-31 12:48:53,506 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournal' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:53,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournal']
2018-05-31 12:48:53,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournal']
2018-05-31 12:48:53,506 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournal']
2018-05-31 12:48:53,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationJournal]
2018-05-31 12:48:53,507 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IServiceLocator']
2018-05-31 12:48:53,507 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationContentLoader']
2018-05-31 12:48:53,507 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationJournal']
2018-05-31 12:48:53,507 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationService] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)]]
2018-05-31 12:48:53,508 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationService' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)].]
2018-05-31 12:48:53,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationService']
2018-05-31 12:48:53,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationService']
2018-05-31 12:48:53,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationService']
2018-05-31 12:48:53,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationService]
2018-05-31 12:48:59,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:48:59,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:48:59,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:48:59,849 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:48:59,849 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:48:59,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:48:59,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:48:59,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:48:59,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:48:59,853 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:48:59,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:48:59,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:48:59,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:48:59,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:48:59,972 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:48:59,972 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:48:59,972 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:49:06,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:49:06,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:49:06,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:49:06,734 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:49:06,735 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:49:06,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:49:06,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:49:06,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:49:06,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:50:20,151 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:50:20,170 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:50:20,177 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:50:20,178 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:50:20,181 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:50:20,181 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:50:20,181 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:50:20,182 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:50:20,323 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:50:20,323 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:50:20,327 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:50:20,340 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:50:20,358 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:50:20,386 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:20,387 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:20,396 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:20,439 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:20,442 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:20,445 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:20,446 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:20,447 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:50:20,447 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:50:20,447 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:50:20,448 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:50:20,448 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,448 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,448 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:20,449 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,449 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,449 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:50:20,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:50:20,455 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:50:20,455 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:50:20,456 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:50:20,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:50:20,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:50:20,457 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:50:20,462 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:50:20,464 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:50:20,466 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:50:20,468 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:50:20,469 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:50:20,470 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:50:20,471 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:20,472 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:50:20,473 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:50:20,473 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:50:20,473 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:50:20,474 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:50:20,474 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:50:20,487 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:50:20,488 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:50:20,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:50:20,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:50:20,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:50:20,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:50:20,491 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:20,499 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:50:20,500 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:50:20,507 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:50:20,508 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:50:20,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:50:20,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:50:20,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:50:20,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:50:20,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:20,515 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:20,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:50:20,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:50:20,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:50:20,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:20,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:50:20,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,526 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:20,527 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:20,527 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:20,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:50:20,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:50:20,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:50:20,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:50:20,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:50:20,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:20,528 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:20,528 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:20,528 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:50:20,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:50:20,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:50:20,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:50:20,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:50:20,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:20,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:20,531 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:20,531 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:50:20,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:50:20,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:50:20,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:50:20,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:50:20,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,533 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:50:20,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:20,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:20,534 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:20,534 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:50:20,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:50:20,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:50:20,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:50:20,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:50:20,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:20,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:20,538 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:20,538 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:20,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:20,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:50:20,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:50:20,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:50:20,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:50:20,540 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:50:20,540 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:50:20,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:20,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:20,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:20,542 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:50:20,542 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:50:20,543 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:50:20,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:50:20,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:50:20,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:50:20,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:20,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:50:20,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:50:20,556 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:50:20,556 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:50:20,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:50:20,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:50:20,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:50:20,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:50:20,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:20,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:20,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:20,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:20,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:20,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:20,558 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:50:20,559 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:50:20,559 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:50:20,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:20,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:20,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:20,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:20,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:20,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:20,595 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:20,595 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:20,595 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:20,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:20,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:20,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:20,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:20,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:20,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:20,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:20,607 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:20,608 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:20,608 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:20,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:20,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:20,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:20,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:20,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:20,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:20,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:20,612 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:20,613 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:20,613 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:20,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:20,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:20,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:20,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:20,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:20,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:20,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:20,617 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:20,617 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:20,618 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:20,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:20,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:20,631 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:50:20,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:50:20,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:20,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:20,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:20,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:50:20,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:50:20,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:50:20,634 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:50:20,635 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:50:20,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:50:20,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:50:20,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:50:20,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:50:20,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:50:20,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:50:20,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:20,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:20,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:20,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:50:20,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:50:20,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,647 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:20,648 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:20,648 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:20,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:50:20,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:50:20,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:50:20,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:50:20,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:50:20,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:20,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:20,650 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:20,651 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:20,651 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:20,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,652 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:20,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:20,654 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,655 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:20,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:20,657 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,657 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:20,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:20,659 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,659 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:20,663 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,663 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:20,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:20,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:20,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:20,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:20,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:20,669 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:20,669 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:20,669 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:20,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:20,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:20,671 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,672 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:20,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:20,674 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,674 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:20,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:20,677 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:20,679 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,680 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:20,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:20,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:20,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:20,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:20,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:20,684 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:20,684 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:20,685 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:20,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:20,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:20,687 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,688 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:20,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:20,691 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,691 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:20,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:20,694 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,694 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:20,697 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,698 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:20,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:20,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:20,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:20,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:20,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:20,704 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:20,704 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:20,704 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:20,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:20,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:20,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:20,709 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:20,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:20,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:20,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:20,715 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,715 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:20,719 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:20,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:20,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:20,723 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,723 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:20,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:20,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:20,728 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,729 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:20,733 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,734 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:20,738 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,738 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:20,742 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,743 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,744 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:20,745 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,745 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,745 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,747 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:20,747 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,747 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,748 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,753 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:20,754 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,754 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:20,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:20,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:20,755 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:20,755 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:20,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:20,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:50:20,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:50:20,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:50:20,758 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:50:20,758 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:50:20,759 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:50:20,759 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:50:20,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:50:20,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:50:20,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,760 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:50:20,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:50:20,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:50:20,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,761 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:50:20,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:20,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:20,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:20,762 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:20,763 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:20,763 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:50:20,764 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:50:20,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:50:20,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:50:20,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:50:20,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:50:20,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:50:20,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:50:20,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:20,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:20,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:20,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:20,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:50:20,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:50:20,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:20,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:50:20,767 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:50:20,768 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:50:20,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:50:20,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:50:20,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:50:20,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:50:20,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:50:20,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:50:20,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:50:20,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:50:20,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:50:20,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:50:20,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:50:20,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:50:20,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:50:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:50:20,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:20,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:20,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:20,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:20,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:50:20,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:50:20,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:50:20,778 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:50:20,779 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:50:20,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:50:20,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:50:20,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:50:20,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:50:20,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:50:20,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:50:20,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:20,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:50:20,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:20,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:20,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:50:20,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:50:20,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:50:20,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:50:20,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:50:20,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:50:20,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:20,783 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:50:20,783 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:50:20,785 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:20,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:50:20,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:50:20,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:50:20,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:50:20,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:50:20,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:50:20,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:50:20,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:50:20,787 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:50:20,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:50:20,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:50:20,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:20,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:20,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:20,789 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:20,789 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:50:20,789 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:50:20,790 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:20,791 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:50:20,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:20,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:50:20,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:20,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:20,797 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:50:20,800 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:50:20,801 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:50:20,802 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:50:20,802 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:20,802 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:20,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:20,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:50:20,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:50:20,803 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:50:20,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:50:20,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,804 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:20,805 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,805 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,805 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:50:20,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:50:20,807 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:50:20,807 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:20,808 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:20,808 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:20,808 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:50:20,808 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:50:20,809 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:50:20,809 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:50:20,809 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,809 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,810 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:20,810 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:20,810 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:20,829 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:50:20,830 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:50:20,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:50:20,831 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:50:20,831 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:50:20,831 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:50:20,831 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:50:20,832 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:50:20,832 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:50:20,833 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:50:20,834 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:50:20,834 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:50:20,835 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:50:20,836 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:50:20,836 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:50:20,837 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:20,837 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:20,838 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:50:20,838 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:50:20,838 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:50:22,234 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:50:22,237 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:50:22,250 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:50:22,252 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:50:22,253 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:50:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:50:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:50:22,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:50:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:50:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:50:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:50:22,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:50:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:24,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:24,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:24,007 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,344,064.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:50:24,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:24,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:50:24,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:24,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:24,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:50:24,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:50:24,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:50:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:50:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:24,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:50:24,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:50:24,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:24,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:24,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:24,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:24,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:50:24,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:24,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:24,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:50:24,023 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:50:26,173 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:26,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:50:26,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:50:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:26,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:50:26,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:50:26,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:26,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:26,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:26,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:26,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationService => canonical name IRegionNavigationService]
2018-05-31 12:50:26,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationService' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationService]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:26,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationService'.]
2018-05-31 12:50:26,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:26,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:26,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:26,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:26,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationContentLoader => canonical name IRegionNavigationContentLoader]
2018-05-31 12:50:26,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationContentLoader' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationContentLoader]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:26,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationContentLoader'.]
2018-05-31 12:50:26,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:26,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:26,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:26,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:26,181 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationContentLoader' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:26,182 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationContentLoader] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:26,182 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationContentLoader' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:26,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionNavigationContentLoader' to allow for resolving potential circular references]
2018-05-31 12:50:26,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionNavigationContentLoader'.]
2018-05-31 12:50:26,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationContentLoader]
2018-05-31 12:50:26,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationJournal => canonical name IRegionNavigationJournal]
2018-05-31 12:50:26,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournal]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:26,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournal'.]
2018-05-31 12:50:26,185 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournal] using constructor [Void .ctor()]]
2018-05-31 12:50:26,186 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournal' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:26,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournal']
2018-05-31 12:50:26,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournal']
2018-05-31 12:50:26,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournal']
2018-05-31 12:50:26,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationJournal]
2018-05-31 12:50:26,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:26,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationContentLoader']
2018-05-31 12:50:26,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationJournal']
2018-05-31 12:50:26,187 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationService] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)]]
2018-05-31 12:50:26,188 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationService' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)].]
2018-05-31 12:50:26,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationService']
2018-05-31 12:50:26,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationService']
2018-05-31 12:50:26,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationService']
2018-05-31 12:50:26,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationService]
2018-05-31 12:50:28,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:50:28,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:50:28,536 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:50:28,536 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:28,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:50:28,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:50:28,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:50:28,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:50:28,540 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:50:28,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:50:28,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:50:28,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:50:28,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:50:28,651 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:50:28,652 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:50:28,652 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:50:33,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:50:33,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:33,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:50:33,954 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:50:33,954 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:33,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:50:33,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:50:33,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:50:33,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:50:54,392 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:50:54,411 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:50:54,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:50:54,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:50:54,418 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:50:54,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:50:54,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:50:54,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:50:54,587 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:50:54,588 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:50:54,591 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:50:54,605 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:50:54,623 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:50:54,645 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:54,646 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:54,652 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:54,678 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:50:54,680 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:54,683 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:54,685 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:54,686 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:50:54,686 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:50:54,686 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:50:54,686 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:50:54,687 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:54,687 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:54,687 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:54,687 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:54,688 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:54,688 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:50:54,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:50:54,693 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:50:54,694 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:50:54,695 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:50:54,695 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:50:54,695 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:50:54,696 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:50:54,702 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:50:54,703 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:50:54,705 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:50:54,707 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:50:54,709 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:50:54,709 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:50:54,710 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:54,711 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:50:54,712 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:50:54,712 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:50:54,713 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:50:54,713 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:50:54,713 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:50:54,727 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:50:54,729 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:50:54,729 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:50:54,729 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:50:54,730 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:50:54,730 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:50:54,731 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:54,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:50:54,741 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,742 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:50:54,749 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:50:54,749 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:50:54,750 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:50:54,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:50:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:50:54,754 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:50:54,755 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:54,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:54,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:50:54,757 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:50:54,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,758 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:50:54,764 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:54,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:50:54,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,765 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,766 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:54,767 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:54,767 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:54,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:50:54,767 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:54,768 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:54,768 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:50:54,769 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:50:54,770 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:50:54,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:50:54,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:50:54,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:50:54,771 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:54,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,772 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:54,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:54,772 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:54,772 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:50:54,773 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:50:54,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:50:54,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:50:54,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:54,775 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:54,775 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:50:54,776 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:50:54,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:50:54,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,777 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:50:54,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:54,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,778 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:54,778 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:50:54,779 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:50:54,779 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:50:54,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:50:54,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:50:54,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:50:54,780 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:50:54,780 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:50:54,780 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:50:54,781 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:50:54,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:50:54,782 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:50:54,782 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:50:54,783 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:50:54,783 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:50:54,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:50:54,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:50:54,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:50:54,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:54,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:50:54,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,794 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:50:54,794 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:50:54,794 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:50:54,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:50:54,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:50:54,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:50:54,795 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:50:54,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:54,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:54,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:54,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:54,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:54,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:54,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:50:54,797 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:50:54,797 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:50:54,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:54,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:54,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:54,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:54,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:54,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:54,835 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:54,835 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:54,836 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:54,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:54,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:54,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:54,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:54,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:54,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:54,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:54,849 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:54,849 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:54,849 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:54,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:54,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:54,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:54,854 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:54,854 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:54,854 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:54,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:54,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:50:54,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:50:54,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:50:54,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:50:54,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:50:54,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:50:54,858 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:50:54,858 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:50:54,858 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:50:54,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:50:54,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:50:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:50:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:54,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:50:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:50:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:50:54,876 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:50:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:50:54,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:54,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:54,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:54,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:50:54,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:50:54,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:54,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:54,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:54,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:54,890 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:54,890 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:54,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:54,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:50:54,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:50:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:50:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:50:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:50:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:54,893 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:54,893 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:54,893 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:54,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:54,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:54,897 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:54,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:54,900 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,900 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:54,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:54,902 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,902 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:54,905 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,906 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:54,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:54,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:54,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:54,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:54,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:54,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:54,911 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:54,912 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:54,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:54,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:54,914 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,914 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:54,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:54,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,917 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:54,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:54,919 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,919 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:54,922 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,922 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:54,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:54,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:54,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:54,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:54,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:54,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:54,927 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:54,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:54,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:54,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:54,930 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:54,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:54,934 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,934 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:54,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:54,937 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,938 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:54,941 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,941 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:50:54,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:50:54,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:54,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:54,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:54,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:54,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:50:54,947 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:50:54,947 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:50:54,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:50:54,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:50:54,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:50:54,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,952 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:50:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:50:54,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:50:54,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:50:54,958 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,958 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:50:54,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:50:54,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:50:54,962 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:50:54,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:50:54,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:50:54,966 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,967 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:50:54,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:50:54,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:54,971 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,972 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:54,976 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,977 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,980 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:54,981 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,981 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,982 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:54,985 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:54,989 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:54,991 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,992 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:54,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:54,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:50:54,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:54,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:50:54,999 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:54,999 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:54,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:54,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:55,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:50:55,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:50:55,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:50:55,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:50:55,001 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:50:55,001 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:55,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:55,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:55,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:50:55,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:50:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:50:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:50:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:50:55,002 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:50:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:50:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:50:55,004 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:50:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:50:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:50:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:50:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:50:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:50:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:50:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:55,007 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:55,007 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:50:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:50:55,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:50:55,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:50:55,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:50:55,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:50:55,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:50:55,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:50:55,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:55,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:55,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:55,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:55,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:50:55,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:50:55,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:55,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:50:55,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:50:55,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:50:55,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:50:55,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:50:55,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:50:55,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:50:55,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:50:55,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:50:55,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:50:55,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:50:55,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:50:55,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:50:55,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:50:55,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:50:55,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:50:55,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:50:55,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:50:55,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:50:55,024 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:50:55,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:55,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:50:55,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:50:55,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:50:55,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:50:55,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:50:55,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:50:55,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:50:55,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:55,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:50:55,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:55,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:55,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:50:55,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:50:55,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:50:55,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:50:55,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:50:55,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:50:55,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:55,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:50:55,030 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:50:55,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:50:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:50:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:50:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:50:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:50:55,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:50:55,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:50:55,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:50:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:50:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:50:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:50:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:50:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:50:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:50:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:50:55,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:50:55,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:50:55,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:50:55,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:50:55,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:50:55,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:50:55,037 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:50:55,038 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:50:55,038 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:50:55,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:50:55,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:50:55,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:50:55,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:50:55,044 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:50:55,048 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:50:55,049 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:50:55,049 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:50:55,050 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:55,050 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:55,050 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:55,051 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:50:55,051 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:50:55,051 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:50:55,051 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:50:55,052 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:55,052 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:55,052 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:55,053 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:55,053 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:55,053 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:50:55,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:50:55,056 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:50:55,056 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:50:55,057 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:50:55,057 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:50:55,058 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:50:55,058 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:50:55,058 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:50:55,058 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:50:55,059 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:55,059 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:55,059 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:50:55,059 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:50:55,059 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:50:55,081 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:50:55,082 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:50:55,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:50:55,082 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:50:55,082 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:50:55,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:50:55,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:50:55,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:50:55,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:50:55,085 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:50:55,086 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:50:55,086 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:50:55,087 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:50:55,088 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:50:55,088 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:50:55,088 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:55,089 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:50:55,089 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:50:55,090 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:50:55,090 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:50:56,483 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:50:56,486 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:50:56,499 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:50:56,501 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:50:56,502 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:50:56,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:50:56,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:50:56,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:50:56,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:50:56,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:50:56,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:50:56,503 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:50:58,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:58,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:58,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:58,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:58,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:58,029 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,421,888.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:50:58,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:50:58,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:58,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:58,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:50:58,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:50:58,033 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:58,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:50:58,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:50:58,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:58,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:58,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:50:58,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:50:58,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:50:58,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:58,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:58,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:50:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:50:58,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:50:58,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:50:58,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:50:58,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:58,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:58,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:50:58,044 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:50:59,334 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:59,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:50:59,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:50:59,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:59,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:59,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:50:59,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:50:59,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:50:59,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:59,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:59,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:59,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:59,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationService => canonical name IRegionNavigationService]
2018-05-31 12:50:59,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationService' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationService]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:59,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationService'.]
2018-05-31 12:50:59,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:59,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:59,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:59,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:59,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationContentLoader => canonical name IRegionNavigationContentLoader]
2018-05-31 12:50:59,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationContentLoader' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationContentLoader]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:59,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationContentLoader'.]
2018-05-31 12:50:59,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:50:59,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:50:59,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:50:59,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:50:59,343 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationContentLoader' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:59,344 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationContentLoader] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:50:59,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationContentLoader' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:50:59,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionNavigationContentLoader' to allow for resolving potential circular references]
2018-05-31 12:50:59,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionNavigationContentLoader'.]
2018-05-31 12:50:59,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationContentLoader]
2018-05-31 12:50:59,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionNavigationJournal => canonical name IRegionNavigationJournal]
2018-05-31 12:50:59,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournal]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:50:59,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournal'.]
2018-05-31 12:50:59,347 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournal] using constructor [Void .ctor()]]
2018-05-31 12:50:59,347 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournal' instantiated via constructor [Void .ctor()].]
2018-05-31 12:50:59,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournal']
2018-05-31 12:50:59,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournal']
2018-05-31 12:50:59,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournal']
2018-05-31 12:50:59,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionNavigationJournal]
2018-05-31 12:50:59,348 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IServiceLocator']
2018-05-31 12:50:59,349 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationContentLoader']
2018-05-31 12:50:59,349 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionNavigationService' via constructor to object named 'IRegionNavigationJournal']
2018-05-31 12:50:59,349 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationService] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)]]
2018-05-31 12:50:59,350 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationService' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Framework.Regions.IRegionNavigationContentLoader, DS.AFP.Framework.Regions.IRegionNavigationJournal)].]
2018-05-31 12:50:59,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationService']
2018-05-31 12:50:59,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationService']
2018-05-31 12:50:59,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationService']
2018-05-31 12:50:59,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationService]
2018-05-31 12:51:00,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:51:00,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:00,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:51:00,873 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:51:00,873 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:00,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:51:00,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:51:00,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:51:00,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:51:00,877 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-05-31 12:51:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:51:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-05-31 12:51:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:51:00,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:51:00,993 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-05-31 12:51:00,994 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-05-31 12:51:00,994 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-05-31 12:51:07,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionNavigationJournalEntry => canonical name IRegionNavigationJournalEntry]
2018-05-31 12:51:07,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionNavigationJournalEntry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionNavigationJournalEntry]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:07,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionNavigationJournalEntry'.]
2018-05-31 12:51:07,074 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionNavigationJournalEntry] using constructor [Void .ctor()]]
2018-05-31 12:51:07,075 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionNavigationJournalEntry' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:07,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionNavigationJournalEntry']
2018-05-31 12:51:07,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:51:07,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionNavigationJournalEntry']
2018-05-31 12:51:07,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionNavigationJournalEntry]
2018-05-31 12:51:46,567 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-05-31 12:51:46,593 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-05-31 12:51:46,600 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-05-31 12:51:46,601 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-05-31 12:51:46,602 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-05-31 12:51:46,603 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-05-31 12:51:46,603 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-05-31 12:51:46,603 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-05-31 12:51:46,753 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-05-31 12:51:46,753 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-05-31 12:51:46,756 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-05-31 12:51:46,770 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:51:46,790 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:51:46,811 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:51:46,813 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:51:46,818 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:51:46,850 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-05-31 12:51:46,853 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:51:46,856 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:51:46,857 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:51:46,858 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:51:46,858 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:51:46,858 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:51:46,859 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:51:46,859 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:46,859 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:46,859 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:51:46,860 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:46,860 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:46,860 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:51:46,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:51:46,867 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-05-31 12:51:46,867 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:51:46,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:51:46,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:51:46,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-05-31 12:51:46,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:51:46,875 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:51:46,876 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-05-31 12:51:46,878 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:51:46,880 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-05-31 12:51:46,882 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:51:46,882 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:51:46,883 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:51:46,884 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:51:46,885 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-05-31 12:51:46,885 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-05-31 12:51:46,886 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-05-31 12:51:46,886 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-05-31 12:51:46,886 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-05-31 12:51:46,899 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-05-31 12:51:46,901 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-05-31 12:51:46,901 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-05-31 12:51:46,902 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-05-31 12:51:46,902 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-05-31 12:51:46,902 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-05-31 12:51:46,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:51:46,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:51:46,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-05-31 12:51:46,920 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-05-31 12:51:46,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:46,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-05-31 12:51:46,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-05-31 12:51:46,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-05-31 12:51:46,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-05-31 12:51:46,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-05-31 12:51:46,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:51:46,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:51:46,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-05-31 12:51:46,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:51:46,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-05-31 12:51:46,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:51:46,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:51:46,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:46,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:46,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:46,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:46,938 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-05-31 12:51:46,938 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:51:46,938 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:51:46,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:51:46,939 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:51:46,939 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-05-31 12:51:46,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-05-31 12:51:46,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-05-31 12:51:46,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-05-31 12:51:46,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:51:46,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:51:46,943 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:51:46,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:51:46,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:51:46,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-05-31 12:51:46,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-05-31 12:51:46,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:51:46,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-05-31 12:51:46,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:51:46,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:51:46,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:51:46,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:51:46,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-05-31 12:51:46,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-05-31 12:51:46,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-05-31 12:51:46,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-05-31 12:51:46,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-05-31 12:51:46,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:51:46,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:51:46,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-05-31 12:51:46,950 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-05-31 12:51:46,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-05-31 12:51:46,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-05-31 12:51:46,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-05-31 12:51:46,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-05-31 12:51:46,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-05-31 12:51:46,952 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-05-31 12:51:46,952 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-05-31 12:51:46,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-05-31 12:51:46,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-05-31 12:51:46,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-05-31 12:51:46,953 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-05-31 12:51:46,954 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-05-31 12:51:46,954 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-05-31 12:51:46,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-05-31 12:51:46,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-05-31 12:51:46,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-05-31 12:51:46,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:51:46,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:51:46,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:46,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-05-31 12:51:46,964 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-05-31 12:51:46,964 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:46,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-05-31 12:51:46,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-05-31 12:51:46,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-05-31 12:51:46,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-05-31 12:51:46,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-05-31 12:51:46,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:51:46,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:51:46,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:51:46,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:51:46,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:51:46,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:51:46,967 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-05-31 12:51:46,967 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:51:46,967 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-05-31 12:51:47,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:51:47,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:51:47,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:51:47,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:51:47,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:51:47,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:51:47,004 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:51:47,004 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:51:47,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:51:47,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:51:47,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:51:47,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:51:47,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:51:47,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:51:47,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:51:47,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:51:47,016 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:51:47,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:51:47,017 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:51:47,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:51:47,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:51:47,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:51:47,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:51:47,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:51:47,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:51:47,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:51:47,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:51:47,021 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:51:47,021 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:51:47,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:51:47,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-05-31 12:51:47,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-05-31 12:51:47,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-05-31 12:51:47,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-05-31 12:51:47,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-05-31 12:51:47,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-05-31 12:51:47,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-05-31 12:51:47,025 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-05-31 12:51:47,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-05-31 12:51:47,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-05-31 12:51:47,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-05-31 12:51:47,039 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-05-31 12:51:47,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-05-31 12:51:47,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-05-31 12:51:47,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-05-31 12:51:47,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-05-31 12:51:47,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-05-31 12:51:47,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-05-31 12:51:47,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-05-31 12:51:47,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:51:47,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:51:47,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:51:47,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:51:47,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:51:47,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-05-31 12:51:47,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-05-31 12:51:47,043 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-05-31 12:51:47,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-05-31 12:51:47,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:51:47,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:51:47,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:51:47,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:51:47,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:47,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:51:47,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,055 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-05-31 12:51:47,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-05-31 12:51:47,057 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-05-31 12:51:47,058 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-05-31 12:51:47,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-05-31 12:51:47,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-05-31 12:51:47,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-05-31 12:51:47,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-05-31 12:51:47,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-05-31 12:51:47,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:47,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:47,059 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:51:47,059 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:51:47,060 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:51:47,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:51:47,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:51:47,063 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,063 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:51:47,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:51:47,066 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,066 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:51:47,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:51:47,068 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,068 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:51:47,071 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,072 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:51:47,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:51:47,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:47,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:47,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:47,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:47,077 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:51:47,078 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:51:47,078 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:51:47,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:51:47,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:51:47,080 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,080 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:51:47,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:51:47,083 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,083 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:51:47,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:51:47,085 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,085 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:51:47,089 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,089 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:51:47,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:51:47,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:47,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:47,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:47,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:47,093 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:51:47,093 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:51:47,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:51:47,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:51:47,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:51:47,097 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:51:47,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:51:47,100 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,100 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,102 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:51:47,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,103 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:51:47,104 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,104 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:51:47,107 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,108 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-05-31 12:51:47,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-05-31 12:51:47,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:47,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:47,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:47,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:47,113 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-05-31 12:51:47,113 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-05-31 12:51:47,114 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-05-31 12:51:47,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-05-31 12:51:47,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-05-31 12:51:47,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-05-31 12:51:47,119 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,119 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-05-31 12:51:47,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-05-31 12:51:47,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-05-31 12:51:47,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-05-31 12:51:47,125 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,125 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-05-31 12:51:47,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-05-31 12:51:47,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-05-31 12:51:47,129 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,129 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-05-31 12:51:47,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-05-31 12:51:47,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,132 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-05-31 12:51:47,133 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,133 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-05-31 12:51:47,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-05-31 12:51:47,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:51:47,138 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:51:47,142 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,143 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:51:47,147 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:51:47,150 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,150 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:51:47,153 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,154 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:51:47,156 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-05-31 12:51:47,162 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,163 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-05-31 12:51:47,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-05-31 12:51:47,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-05-31 12:51:47,164 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-05-31 12:51:47,164 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-05-31 12:51:47,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-05-31 12:51:47,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:51:47,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-05-31 12:51:47,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-05-31 12:51:47,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:51:47,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:51:47,168 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-05-31 12:51:47,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:51:47,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-05-31 12:51:47,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-05-31 12:51:47,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-05-31 12:51:47,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:51:47,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-05-31 12:51:47,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:47,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:47,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:47,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:47,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:51:47,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:51:47,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:51:47,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:51:47,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-05-31 12:51:47,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-05-31 12:51:47,171 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-05-31 12:51:47,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-05-31 12:51:47,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-05-31 12:51:47,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-05-31 12:51:47,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-05-31 12:51:47,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-05-31 12:51:47,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:51:47,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:51:47,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:51:47,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:51:47,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-05-31 12:51:47,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-05-31 12:51:47,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-05-31 12:51:47,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:51:47,175 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-05-31 12:51:47,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-05-31 12:51:47,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:51:47,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:51:47,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-05-31 12:51:47,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-05-31 12:51:47,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-05-31 12:51:47,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-05-31 12:51:47,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinAppModule => canonical name WpfAddinAppModule]
2018-05-31 12:51:47,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:51:47,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinAppModule' with merged definition [RootObjectDefinition : Class [WpfAddinApp.WpfAddinAppModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinAppModule'.]
2018-05-31 12:51:47,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-05-31 12:51:47,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-05-31 12:51:47,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-05-31 12:51:47,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-05-31 12:51:47,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-05-31 12:51:47,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-05-31 12:51:47,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-05-31 12:51:47,187 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-05-31 12:51:47,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-05-31 12:51:47,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-05-31 12:51:47,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-05-31 12:51:47,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-05-31 12:51:47,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-05-31 12:51:47,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-05-31 12:51:47,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-05-31 12:51:47,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:51:47,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:51:47,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:51:47,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:51:47,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-05-31 12:51:47,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-05-31 12:51:47,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-05-31 12:51:47,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-05-31 12:51:47,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDS21Message => canonical name IDS21Message]
2018-05-31 12:51:47,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDS21Message']
2018-05-31 12:51:47,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDS21Message' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Message.DS21Message]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:47,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDS21Message'.]
2018-05-31 12:51:47,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Message.DS21Message] using constructor [Void .ctor()]]
2018-05-31 12:51:47,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDS21Message' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:47,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDS21Message' to allow for resolving potential circular references]
2018-05-31 12:51:47,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDS21Message']
2018-05-31 12:51:47,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDS21Message']
2018-05-31 12:51:47,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDS21Message']
2018-05-31 12:51:47,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDS21Message']
2018-05-31 12:51:47,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDS21Message'.]
2018-05-31 12:51:47,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDS21Message]
2018-05-31 12:51:47,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-05-31 12:51:47,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-05-31 12:51:47,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-05-31 12:51:47,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-05-31 12:51:47,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-05-31 12:51:47,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-05-31 12:51:47,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-05-31 12:51:47,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-05-31 12:51:47,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@3AFA55']
2018-05-31 12:51:47,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsConfigurationSection']
2018-05-31 12:51:47,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoadingManage']
2018-05-31 12:51:47,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDsEnvironment']
2018-05-31 12:51:47,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IRegionManager']
2018-05-31 12:51:47,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IDS21Message']
2018-05-31 12:51:47,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'IEventAggregator']
2018-05-31 12:51:47,199 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WpfAddinAppModule' via constructor to object named 'ILoggerFacade']
2018-05-31 12:51:47,199 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.WpfAddinAppModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-05-31 12:51:47,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-05-31 12:51:47,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-05-31 12:51:47,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-05-31 12:51:47,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-05-31 12:51:47,206 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-ins start loading]
2018-05-31 12:51:47,210 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'wpfaddinapp']
2018-05-31 12:51:47,211 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-05-31 12:51:47,211 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [E:\jiangning\DS.AFP-N\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-05-31 12:51:47,211 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:51:47,212 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:51:47,212 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:51:47,212 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-05-31 12:51:47,212 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-05-31 12:51:47,212 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-05-31 12:51:47,213 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-05-31 12:51:47,213 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:47,213 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:47,213 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:51:47,214 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:47,214 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:47,214 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-05-31 12:51:47,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-05-31 12:51:47,216 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from assembly [WpfAddinApp, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null], resource [WpfAddinApp.Configure.Objects.Objects.xml]]
2018-05-31 12:51:47,216 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-05-31 12:51:47,217 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-05-31 12:51:47,217 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-05-31 12:51:47,217 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init 'false'.]
2018-05-31 12:51:47,217 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check 'none'.]
2018-05-31 12:51:47,218 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire 'no'.]
2018-05-31 12:51:47,218 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge 'false'.]
2018-05-31 12:51:47,218 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:47,218 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:47,219 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-05-31 12:51:47,219 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-05-31 12:51:47,219 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-05-31 12:51:47,236 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [ProcessObjectDefinition] [Registering object definition with id 'AdoDbAccess'.]
2018-05-31 12:51:47,237 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 1 <object> elements defining objects.]
2018-05-31 12:51:47,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 1 object definitions from location [assembly://WpfAddinApp/WpfAddinApp.Configure.Objects/Objects.xml]]
2018-05-31 12:51:47,237 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'wpfaddinapp'.]
2018-05-31 12:51:47,238 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-05-31 12:51:47,238 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-05-31 12:51:47,238 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-05-31 12:51:47,238 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [1 objects defined in application context [wpfaddinapp].]
2018-05-31 12:51:47,239 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-05-31 12:51:47,240 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:51:47,241 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [wpfaddinapp].]
2018-05-31 12:51:47,241 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-05-31 12:51:47,242 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-05-31 12:51:47,243 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-05-31 12:51:47,243 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-05-31 12:51:47,244 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [wpfaddinapp] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:51:47,244 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-05-31 12:51:47,245 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-05-31 12:51:47,245 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'wpfaddinapp'.]
2018-05-31 12:51:47,245 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'wpfaddinapp']
2018-05-31 12:51:48,636 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been initialized!]
2018-05-31 12:51:48,639 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The Bootstrap has been initialized!]
2018-05-31 12:51:48,653 DEBUG [1] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Debug] [The PerformanceMonitor has been started!]
2018-05-31 12:51:48,675 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WpfAddinApp Plug-in loaded]
2018-05-31 12:51:48,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinAppModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.IDS21Message, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-05-31 12:51:48,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinAppModule' to allow for resolving potential circular references]
2018-05-31 12:51:48,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinAppModule']
2018-05-31 12:51:48,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinAppModule']
2018-05-31 12:51:48,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinAppModule']
2018-05-31 12:51:48,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinAppModule']
2018-05-31 12:51:48,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinAppModule'.]
2018-05-31 12:51:48,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinAppModule]
2018-05-31 12:51:49,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:49,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:49,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:49,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:49,811 INFO  [6] [DS.AFP.Communication.SocketBase.Logging.Log4NetLog] [Info] [---------------------------------------------------
CPU Usage: 0.00%, Physical Memory Usage: 64,589,824.00, Total Thread Count: 21
AvailableWorkingThreads: 1022, AvailableCompletionPortThreads: 1000
MaxWorkingThreads: 1023, MaxCompletionPortThreads: 1000
]
2018-05-31 12:51:49,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:49,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:49,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:49,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:49,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl1 => canonical name WpfAddinApp.UserControl1]
2018-05-31 12:51:49,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:51:49,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl1' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl1]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:49,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl1'.]
2018-05-31 12:51:49,815 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl1] using constructor [Void .ctor()]]
2018-05-31 12:51:49,816 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl1' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:49,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl1' to allow for resolving potential circular references]
2018-05-31 12:51:49,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl1']
2018-05-31 12:51:49,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:51:49,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl1']
2018-05-31 12:51:49,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl1']
2018-05-31 12:51:49,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl1'.]
2018-05-31 12:51:49,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl1]
2018-05-31 12:51:50,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:50,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:50,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:50,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:50,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:50,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:50,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:50,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:50,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:51:50,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:51:50,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WpfAddinApp.UserControl5' with merged definition [RootObjectDefinition : Class [WpfAddinApp.UserControl5]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-05-31 12:51:50,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WpfAddinApp.UserControl5'.]
2018-05-31 12:51:50,228 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [WpfAddinApp.UserControl5] using constructor [Void .ctor()]]
2018-05-31 12:51:51,449 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WpfAddinApp.UserControl5' instantiated via constructor [Void .ctor()].]
2018-05-31 12:51:51,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WpfAddinApp.UserControl5' to allow for resolving potential circular references]
2018-05-31 12:51:51,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WpfAddinApp.UserControl5']
2018-05-31 12:51:51,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:51:51,450 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WpfAddinApp.UserControl5']
2018-05-31 12:51:51,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WpfAddinApp.UserControl5']
2018-05-31 12:51:51,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:51:51,451 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
2018-05-31 12:51:52,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-05-31 12:51:52,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-05-31 12:51:52,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-05-31 12:51:52,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-05-31 12:51:52,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-05-31 12:51:52,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-05-31 12:51:52,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-05-31 12:51:52,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-05-31 12:51:52,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WpfAddinApp.UserControl5 => canonical name WpfAddinApp.UserControl5]
2018-05-31 12:51:52,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WpfAddinApp.UserControl5'.]
2018-05-31 12:51:52,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WpfAddinApp.UserControl5'.]
2018-05-31 12:51:52,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WpfAddinApp.UserControl5]
