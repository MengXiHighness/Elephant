2018-09-27 17:20:05,978 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:20:06,084 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:20:06,109 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:20:06,109 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:20:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:20:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:20:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:20:06,111 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:20:06,794 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:20:06,795 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:20:07,207 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:20:07,228 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:20:07,312 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:20:07,339 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:20:07,345 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:20:07,393 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:20:07,450 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:20:07,453 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:20:07,456 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:20:07,459 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:20:07,459 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:20:07,459 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:20:07,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:20:07,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:20:07,460 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:20:07,461 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:20:07,461 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:20:07,461 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:20:07,461 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:20:07,462 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:20:07,462 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:20:07,463 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:20:07,463 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:20:07,465 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:20:07,465 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:20:07,465 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:20:07,466 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:20:07,473 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:20:07,475 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:20:07,478 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:20:07,481 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:20:07,483 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:20:07,484 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:20:07,485 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:20:07,486 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:20:07,487 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:20:07,488 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:20:07,488 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:20:07,489 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:20:07,490 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:20:07,532 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:20:07,533 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:20:07,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:20:07,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:20:07,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:20:07,534 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:20:07,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:20:07,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:20:07,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:20:07,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:20:07,552 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:20:07,553 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:20:07,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:20:07,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:20:07,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:20:07,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:20:07,560 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:20:07,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:20:07,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:20:07,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:20:07,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:20:07,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:20:07,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:20:07,572 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:20:07,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:20:07,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:20:07,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:20:07,619 ERROR [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: error obtaining object IRegionBehaviorFactory]
2018-09-27 17:20:07,620 ERROR [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: error obtaining object SelectorRegionAdapter]
2018-09-27 17:23:55,590 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:23:55,881 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:23:55,890 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:23:55,890 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:23:55,891 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:23:55,892 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:23:55,892 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:23:55,892 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:23:55,999 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:23:56,000 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:23:56,004 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:23:56,018 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:23:56,036 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:23:56,061 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:23:56,067 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:23:56,074 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:23:56,086 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:23:56,088 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:23:56,091 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:23:56,092 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:23:56,093 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:23:56,093 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:23:56,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:23:56,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:23:56,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:23:56,094 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:23:56,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:23:56,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:23:56,095 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:23:56,096 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:23:56,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:23:56,096 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:23:56,097 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:23:56,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:23:56,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:23:56,099 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:23:56,099 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:23:56,105 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:23:56,107 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:23:56,109 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:23:56,111 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:23:56,113 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:23:56,113 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:23:56,114 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:23:56,115 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:23:56,116 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:23:56,116 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:23:56,117 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:23:56,117 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:23:56,118 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:23:56,133 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:23:56,137 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:23:56,137 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:23:56,137 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:23:56,138 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:23:56,138 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:23:56,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:23:56,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:23:56,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:23:56,159 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:23:56,160 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:23:56,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:23:56,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:23:56,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:23:56,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:23:56,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:23:56,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:23:56,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:23:56,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:23:56,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:23:56,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:23:56,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:23:56,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:23:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:23:56,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:23:56,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:23:56,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:23:56,179 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-09-27 17:23:56,179 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:23:56,180 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:23:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-09-27 17:23:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-09-27 17:23:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:23:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:23:56,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:23:56,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:23:56,181 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:23:56,181 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-09-27 17:23:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:23:56,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-09-27 17:23:56,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-09-27 17:23:56,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-09-27 17:23:56,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:23:56,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-09-27 17:23:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:23:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:23:56,185 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:23:56,185 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:23:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-09-27 17:23:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-09-27 17:23:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-09-27 17:23:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:23:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-09-27 17:23:56,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:23:56,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:23:56,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:23:56,189 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:23:56,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:23:56,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:23:56,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-09-27 17:23:56,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:23:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:23:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:23:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-09-27 17:23:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-09-27 17:23:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-09-27 17:23:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:23:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-09-27 17:23:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:23:56,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:23:56,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:23:56,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:23:56,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:23:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-09-27 17:23:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-09-27 17:23:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-09-27 17:23:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-09-27 17:23:56,209 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-09-27 17:23:56,209 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-09-27 17:23:56,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:23:56,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:23:56,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:23:56,211 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-09-27 17:23:56,212 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-09-27 17:30:18,986 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:30:19,404 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:30:19,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:30:19,440 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:30:19,442 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:30:19,442 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:30:19,442 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:30:19,442 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:30:19,543 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:30:19,543 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:30:19,548 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:30:19,575 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:30:19,599 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:30:19,627 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:30:19,630 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:30:19,641 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:30:19,723 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:30:19,726 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:30:19,729 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:30:19,730 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:30:19,731 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:30:19,731 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:30:19,732 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:30:19,732 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:30:19,732 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:30:19,733 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:30:19,733 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:30:19,733 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:30:19,733 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:30:19,734 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:30:19,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:30:19,735 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:30:19,735 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:30:19,737 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:30:19,737 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:30:19,738 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:30:19,738 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:30:19,745 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:30:19,746 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:30:19,748 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:30:19,751 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:30:19,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:30:19,753 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:30:19,754 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:30:19,755 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:30:19,756 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:30:19,757 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:30:19,757 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:30:19,758 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:30:19,758 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:30:19,774 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:30:19,776 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:30:19,777 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:30:19,777 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:30:19,777 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:30:19,778 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:30:19,779 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:30:19,788 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:30:19,791 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,792 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:30:19,801 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:30:19,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:19,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:30:19,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:30:19,807 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:30:19,809 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:30:19,810 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:30:19,811 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:30:19,812 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:30:19,813 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:30:19,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:30:19,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:30:19,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:30:19,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:30:19,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:19,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:19,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:19,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:19,826 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-09-27 17:30:19,827 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:30:19,827 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:30:19,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-09-27 17:30:19,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-09-27 17:30:19,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:30:19,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:30:19,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:30:19,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:30:19,829 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:30:19,829 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:30:19,829 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:30:19,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:30:19,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-09-27 17:30:19,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-09-27 17:30:19,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-09-27 17:30:19,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:30:19,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-09-27 17:30:19,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-09-27 17:30:19,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-09-27 17:30:19,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:30:19,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-09-27 17:30:19,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:30:19,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:30:19,834 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:30:19,834 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:30:19,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:30:19,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-09-27 17:30:19,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-09-27 17:30:19,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-09-27 17:30:19,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:30:19,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-09-27 17:30:19,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:30:19,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:30:19,838 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:30:19,839 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:30:19,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:30:19,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:30:19,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-09-27 17:30:19,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:30:19,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:30:19,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:30:19,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-09-27 17:30:19,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-09-27 17:30:19,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-09-27 17:30:19,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-09-27 17:30:19,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:30:19,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:30:19,843 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:30:19,843 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:30:19,844 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:30:19,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-09-27 17:30:19,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-09-27 17:30:19,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-09-27 17:30:19,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-09-27 17:30:19,845 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-09-27 17:30:19,845 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-09-27 17:30:19,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:30:19,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:30:19,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:30:19,848 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-09-27 17:30:19,848 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-09-27 17:30:19,849 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-09-27 17:30:19,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:30:19,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-09-27 17:30:19,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-09-27 17:30:19,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:30:19,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:30:19,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:19,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-09-27 17:30:19,942 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-09-27 17:30:19,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:19,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-09-27 17:30:19,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-09-27 17:30:19,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-09-27 17:30:19,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-09-27 17:30:19,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:30:19,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:30:19,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:30:19,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:30:19,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:30:19,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:30:19,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:30:19,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-09-27 17:30:19,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:30:19,950 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-09-27 17:30:20,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:20,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:20,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:20,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:20,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:30:20,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:30:20,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:30:20,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:30:20,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:30:20,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:30:20,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:30:20,273 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:30:20,273 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:30:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:30:20,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:20,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:20,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:20,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:20,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:30:20,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:30:20,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:30:20,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:30:20,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:30:20,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:30:20,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:30:20,328 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:30:20,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:30:20,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:30:20,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:20,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:20,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:20,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:20,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:30:20,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:30:20,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:30:20,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:30:20,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:30:20,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:30:20,332 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:30:20,340 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:30:20,340 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:30:20,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:30:20,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:20,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:20,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:20,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:20,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:30:20,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:30:20,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:30:20,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:30:20,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:30:20,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:30:20,344 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:30:20,345 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:30:20,345 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:30:20,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:30:20,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:30:20,716 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-09-27 17:30:20,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:30:20,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:30:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:30:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:30:20,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:30:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:30:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-09-27 17:30:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-09-27 17:30:20,720 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-09-27 17:30:20,774 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-09-27 17:30:20,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-09-27 17:30:20,774 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-09-27 17:30:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-09-27 17:30:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-09-27 17:30:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:30:20,775 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:30:20,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:30:20,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:30:20,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:30:20,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:30:20,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-09-27 17:30:20,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:20,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:20,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:20,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:20,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-09-27 17:30:20,839 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:30:20,840 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:30:20,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-09-27 17:30:20,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-09-27 17:30:20,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-09-27 17:30:20,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-09-27 17:30:20,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:30:20,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:30:20,841 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:30:20,841 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:30:20,842 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:30:20,842 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:30:20,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:30:20,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:30:20,845 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,846 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:30:20,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:30:20,849 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,849 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:30:20,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:30:20,851 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:30:20,856 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,857 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,857 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,858 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:30:20,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:30:20,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:30:20,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:30:20,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:30:20,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:30:20,882 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:30:20,883 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:30:20,883 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:30:20,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:30:20,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:30:20,886 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,886 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:30:20,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:30:20,889 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,889 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:30:20,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:30:20,892 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,892 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:30:20,894 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,895 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,896 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:30:20,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:30:20,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:30:20,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:30:20,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:30:20,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:30:20,900 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:30:20,900 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:30:20,901 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:30:20,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:30:20,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:30:20,904 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,905 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:30:20,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:30:20,908 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,909 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:30:20,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:30:20,912 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,912 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:30:20,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,916 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:30:20,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:30:20,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:30:20,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:30:20,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:30:20,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:30:20,925 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:30:20,926 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:30:20,926 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:30:20,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:30:20,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:30:20,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:30:20,931 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,931 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:30:20,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:30:20,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:30:20,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:30:20,936 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,936 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:30:20,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:30:20,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:30:20,941 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,942 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:30:20,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:30:20,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:30:20,946 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:30:20,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:30:20,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:30:20,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:30:20,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,952 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:30:20,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:30:20,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:30:20,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:20,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:20,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:20,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:30:20,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:30:20,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:30:20,961 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:20,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:30:20,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:30:20,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:20,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:30:20,966 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:20,966 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:20,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:20,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:30:21,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:30:21,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:30:21,011 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:21,011 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:30:21,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:30:21,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:30:21,014 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:21,014 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:30:21,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:30:21,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:30:21,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:21,017 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:30:21,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:30:21,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:30:21,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:30:21,019 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:30:21,019 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:30:21,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:30:21,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:30:21,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-09-27 17:30:21,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-09-27 17:30:21,021 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-09-27 17:30:21,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-09-27 17:30:21,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:30:21,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:30:21,023 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-09-27 17:30:21,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:30:21,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-09-27 17:30:21,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-09-27 17:30:21,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-09-27 17:30:21,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:30:21,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-09-27 17:30:21,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:21,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:21,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:21,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:21,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:30:21,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:30:21,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:30:21,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:30:21,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-09-27 17:30:21,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-09-27 17:30:21,027 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:30:21,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:30:21,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-09-27 17:30:21,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-09-27 17:30:21,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-09-27 17:30:21,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-09-27 17:30:21,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-09-27 17:30:21,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-09-27 17:30:21,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:30:21,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:30:21,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:30:21,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:30:21,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-09-27 17:30:21,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-09-27 17:30:21,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-09-27 17:30:21,031 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2018-09-27 17:30:21,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-09-27 17:30:21,032 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-09-27 17:30:21,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-09-27 17:30:21,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-09-27 17:30:21,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-09-27 17:30:21,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-09-27 17:30:21,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-09-27 17:30:21,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:30:21,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:30:21,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:30:21,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-09-27 17:30:21,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:30:21,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:30:21,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2018-09-27 17:30:21,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:30:21,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2018-09-27 17:30:21,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2018-09-27 17:30:21,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2018-09-27 17:30:21,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2018-09-27 17:30:21,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:30:21,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:30:21,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:30:21,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:30:21,115 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2018-09-27 17:30:21,115 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2018-09-27 17:30:21,117 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2018-09-27 17:30:21,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2018-09-27 17:30:21,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2018-09-27 17:30:21,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2018-09-27 17:30:21,119 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2018-09-27 17:30:21,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2018-09-27 17:30:21,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2018-09-27 17:30:21,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2018-09-27 17:30:21,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:30:21,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:30:21,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:30:21,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:30:21,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:30:21,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2018-09-27 17:30:21,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:30:21,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:30:21,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:30:21,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-09-27 17:30:21,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-09-27 17:30:21,124 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-09-27 17:30:21,144 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-09-27 17:30:21,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-09-27 17:30:21,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-09-27 17:30:21,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-09-27 17:30:21,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-09-27 17:30:21,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-09-27 17:30:21,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:30:21,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:30:21,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:30:21,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:30:21,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:30:21,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:30:21,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:30:21,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:30:21,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:30:21,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:30:21,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:30:21,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:30:21,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:30:21,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:30:21,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:30:21,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:30:21,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:30:21,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:30:21,154 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@28C5F3']
2018-09-27 17:30:21,154 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2018-09-27 17:30:21,155 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:30:21,155 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2018-09-27 17:30:21,155 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2018-09-27 17:30:21,155 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2018-09-27 17:30:21,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2018-09-27 17:30:21,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2018-09-27 17:30:21,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2018-09-27 17:30:21,156 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:30:21,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:30:21,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:30:21,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:30:21,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:30:21,163 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2018-09-27 17:30:21,228 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2018-09-27 17:30:21,229 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:30:21,230 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:30:21,230 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:30:21,231 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:30:21,231 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:30:21,232 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:30:21,232 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:30:21,233 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:30:21,233 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:30:21,233 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:30:21,233 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:30:21,233 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:30:21,234 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:30:21,234 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:30:21,234 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:30:21,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:30:21,235 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2018-09-27 17:30:21,235 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:30:21,235 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:30:21,235 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:30:21,236 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2018-09-27 17:30:21,236 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:30:21,238 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:30:21,240 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:30:21,240 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:30:21,241 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-09-27 17:30:21,241 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:30:21,242 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:30:21,242 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:30:21,242 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:30:21,243 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:30:21,243 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2018-09-27 17:30:21,244 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2018-09-27 17:30:21,390 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2018-09-27 17:30:21,448 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:30:21,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2018-09-27 17:30:21,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2018-09-27 17:30:21,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2018-09-27 17:30:21,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2018-09-27 17:30:21,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:30:21,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2018-09-27 17:30:21,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2018-09-27 17:30:21,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:30:21,520 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:30:21,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:30:21,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:30:21,521 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:30:21,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:30:21,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:30:21,522 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:30:21,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2018-09-27 17:30:21,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:30:21,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:30:21,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:30:21,526 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2018-09-27 17:31:10,686 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:31:10,707 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:31:10,714 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:31:10,714 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:31:10,715 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:31:10,716 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:31:10,716 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:31:10,716 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:31:10,791 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:31:10,792 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:31:10,796 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:31:10,812 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:31:10,831 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:31:10,854 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:31:10,856 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:31:10,862 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:31:10,882 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:31:10,884 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:31:10,887 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:31:10,889 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:31:10,889 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:31:10,890 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:31:10,890 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:31:10,890 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:31:10,890 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:31:10,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:31:10,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:31:10,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:31:10,891 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:31:10,892 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:31:10,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:31:10,893 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:31:10,893 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:31:10,895 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:31:10,895 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:31:10,895 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:31:10,895 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:31:10,903 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:31:10,905 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:31:10,908 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:31:10,912 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:31:10,915 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:31:10,916 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:31:10,917 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:31:10,918 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:31:10,919 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:31:10,920 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:31:10,921 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:31:10,921 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:31:10,922 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:31:10,943 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:31:10,945 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:31:10,945 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:31:10,946 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:31:10,946 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:31:10,946 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:31:10,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:31:10,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:31:10,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:10,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:31:10,966 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:31:10,967 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:10,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:31:10,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:31:10,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:31:10,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:31:10,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:31:10,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:31:10,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:31:10,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:31:10,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:31:10,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:10,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:31:10,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:31:10,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:31:10,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:10,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:10,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:10,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:10,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:10,986 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-09-27 17:31:10,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:31:10,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:31:10,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-09-27 17:31:10,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-09-27 17:31:10,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:31:10,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:31:10,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:31:10,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:31:10,988 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:31:10,988 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:31:10,989 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:31:10,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:31:10,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-09-27 17:31:10,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-09-27 17:31:10,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-09-27 17:31:10,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:31:10,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-09-27 17:31:10,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-09-27 17:31:10,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-09-27 17:31:10,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:31:10,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:10,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-09-27 17:31:10,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:31:10,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:31:10,993 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:31:10,993 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:31:10,993 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:31:10,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:31:10,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-09-27 17:31:10,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:31:10,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:31:10,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:31:10,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-09-27 17:31:10,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-09-27 17:31:10,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-09-27 17:31:10,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:31:10,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:10,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-09-27 17:31:10,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:31:10,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:31:10,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:31:10,997 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:31:10,998 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:31:10,998 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:31:10,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:31:10,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-09-27 17:31:10,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:31:10,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:31:10,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:31:10,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-09-27 17:31:10,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-09-27 17:31:11,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-09-27 17:31:11,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-09-27 17:31:11,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:31:11,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:31:11,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:31:11,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:31:11,002 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:31:11,002 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:31:11,002 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:31:11,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-09-27 17:31:11,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-09-27 17:31:11,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-09-27 17:31:11,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-09-27 17:31:11,004 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-09-27 17:31:11,004 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-09-27 17:31:11,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:31:11,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:31:11,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:31:11,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:31:11,006 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-09-27 17:31:11,007 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-09-27 17:31:11,008 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-09-27 17:31:11,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:31:11,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-09-27 17:31:11,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-09-27 17:31:11,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:31:11,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:31:11,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-09-27 17:31:11,022 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-09-27 17:31:11,023 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-09-27 17:31:11,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-09-27 17:31:11,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-09-27 17:31:11,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-09-27 17:31:11,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:31:11,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:31:11,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:31:11,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:31:11,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:31:11,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:31:11,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:31:11,028 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-09-27 17:31:11,028 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:31:11,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-09-27 17:31:11,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:31:11,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:31:11,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:31:11,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:31:11,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:31:11,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:31:11,072 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:31:11,072 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:31:11,073 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:31:11,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:31:11,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:31:11,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:31:11,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:31:11,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:31:11,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:31:11,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:31:11,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:31:11,094 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:31:11,094 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:31:11,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:31:11,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:31:11,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,098 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:31:11,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:31:11,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:31:11,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:31:11,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:31:11,100 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:31:11,101 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:31:11,110 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:31:11,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:31:11,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:31:11,113 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:31:11,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:31:11,115 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:31:11,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:31:11,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:31:11,116 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:31:11,116 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:31:11,117 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:31:11,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:31:11,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:31:11,173 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-09-27 17:31:11,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-09-27 17:31:11,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-09-27 17:31:11,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-09-27 17:31:11,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-09-27 17:31:11,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-09-27 17:31:11,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:31:11,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:31:11,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:31:11,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:31:11,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:31:11,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:31:11,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:31:11,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-09-27 17:31:11,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-09-27 17:31:11,178 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-09-27 17:31:11,179 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-09-27 17:31:11,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-09-27 17:31:11,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-09-27 17:31:11,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-09-27 17:31:11,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-09-27 17:31:11,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:31:11,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:31:11,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:31:11,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:31:11,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:31:11,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:31:11,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-09-27 17:31:11,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,197 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-09-27 17:31:11,198 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:31:11,199 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:31:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-09-27 17:31:11,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-09-27 17:31:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-09-27 17:31:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-09-27 17:31:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:31:11,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:31:11,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:31:11,201 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:31:11,201 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:31:11,202 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:31:11,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:31:11,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:31:11,207 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:31:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:31:11,210 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,210 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:31:11,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:31:11,213 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,213 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:31:11,216 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,217 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:31:11,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:31:11,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:31:11,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:31:11,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:31:11,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:31:11,224 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:31:11,224 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:31:11,224 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:31:11,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:31:11,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:31:11,227 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,227 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:31:11,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:31:11,231 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,231 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:31:11,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:31:11,234 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,234 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:31:11,237 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,237 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:31:11,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:31:11,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:31:11,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:31:11,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:31:11,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:31:11,242 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:31:11,242 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:31:11,243 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:31:11,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:31:11,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:31:11,246 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,247 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:31:11,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:31:11,250 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,251 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:31:11,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:31:11,254 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:31:11,258 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,259 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:31:11,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:31:11,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:31:11,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:31:11,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:31:11,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:31:11,267 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:31:11,268 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:31:11,269 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:31:11,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:31:11,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:31:11,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:31:11,273 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,274 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:31:11,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:31:11,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:31:11,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:31:11,278 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,278 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:31:11,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:31:11,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:31:11,283 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,283 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:31:11,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:31:11,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:31:11,288 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,288 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:31:11,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:31:11,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:31:11,293 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,294 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:31:11,299 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,300 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:31:11,304 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,304 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:31:11,308 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,308 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:31:11,316 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,317 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:31:11,319 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,320 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:31:11,322 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,322 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:31:11,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:31:11,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:31:11,324 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:31:11,324 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:31:11,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:31:11,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-09-27 17:31:11,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-09-27 17:31:11,326 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-09-27 17:31:11,327 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-09-27 17:31:11,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-09-27 17:31:11,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-09-27 17:31:11,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-09-27 17:31:11,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-09-27 17:31:11,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,328 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-09-27 17:31:11,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:31:11,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-09-27 17:31:11,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-09-27 17:31:11,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-09-27 17:31:11,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:31:11,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-09-27 17:31:11,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:31:11,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:31:11,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:31:11,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:31:11,332 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-09-27 17:31:11,332 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-09-27 17:31:11,332 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:31:11,332 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-09-27 17:31:11,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-09-27 17:31:11,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-09-27 17:31:11,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-09-27 17:31:11,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-09-27 17:31:11,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-09-27 17:31:11,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:31:11,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:31:11,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:31:11,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:31:11,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-09-27 17:31:11,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-09-27 17:31:11,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-09-27 17:31:11,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1CBA437']
2018-09-27 17:31:11,336 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-09-27 17:31:11,337 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-09-27 17:31:11,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-09-27 17:31:11,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-09-27 17:31:11,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-09-27 17:31:11,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-09-27 17:31:11,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-09-27 17:31:11,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:31:11,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:31:11,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:31:11,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-09-27 17:31:11,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:31:11,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:31:11,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2018-09-27 17:31:11,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:31:11,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2018-09-27 17:31:11,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2018-09-27 17:31:11,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2018-09-27 17:31:11,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2018-09-27 17:31:11,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:31:11,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:31:11,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:31:11,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:31:11,348 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2018-09-27 17:31:11,349 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2018-09-27 17:31:11,350 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2018-09-27 17:31:11,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2018-09-27 17:31:11,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2018-09-27 17:31:11,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2018-09-27 17:31:11,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2018-09-27 17:31:11,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2018-09-27 17:31:11,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2018-09-27 17:31:11,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2018-09-27 17:31:11,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:31:11,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:31:11,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:31:11,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:31:11,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:31:11,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2018-09-27 17:31:11,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:31:11,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:31:11,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:31:11,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-09-27 17:31:11,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-09-27 17:31:11,357 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-09-27 17:31:11,357 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-09-27 17:31:11,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-09-27 17:31:11,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-09-27 17:31:11,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-09-27 17:31:11,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-09-27 17:31:11,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:31:11,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:31:11,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:31:11,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:31:11,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:31:11,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:31:11,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:31:11,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:31:11,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:31:11,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:31:11,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:31:11,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:31:11,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:31:11,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:31:11,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1CBA437']
2018-09-27 17:31:11,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2018-09-27 17:31:11,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:31:11,365 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2018-09-27 17:31:11,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2018-09-27 17:31:11,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2018-09-27 17:31:11,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2018-09-27 17:31:11,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2018-09-27 17:31:11,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2018-09-27 17:31:11,367 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:31:11,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:31:11,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:31:11,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:31:11,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:31:11,375 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2018-09-27 17:31:11,379 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2018-09-27 17:31:11,381 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:31:11,381 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:31:11,382 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:31:11,382 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:31:11,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:31:11,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:31:11,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:31:11,383 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:31:11,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:31:11,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:31:11,384 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:31:11,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:31:11,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:31:11,385 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:31:11,386 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:31:11,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:31:11,386 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2018-09-27 17:31:11,387 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:31:11,387 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:31:11,387 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:31:11,388 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2018-09-27 17:31:11,388 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:31:11,390 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:31:11,391 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:31:11,391 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:31:11,393 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-09-27 17:31:11,393 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:31:11,394 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:31:11,394 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:31:11,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:31:11,395 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:31:11,396 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2018-09-27 17:31:11,396 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2018-09-27 17:31:11,419 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2018-09-27 17:31:11,434 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:31:11,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2018-09-27 17:31:11,435 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2018-09-27 17:31:11,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2018-09-27 17:31:11,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2018-09-27 17:31:11,436 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:31:11,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2018-09-27 17:31:11,437 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2018-09-27 17:31:11,439 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:31:11,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:31:11,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:31:11,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:31:11,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:31:11,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:31:11,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:31:11,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:31:11,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2018-09-27 17:31:11,448 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:31:11,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,449 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:31:11,450 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2018-09-27 17:31:11,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:31:11,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:31:11,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:31:11,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:31:11,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,515 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2018-09-27 17:31:11,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:31:11,516 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:31:11,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:31:11,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:31:11,517 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:31:11,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2018-09-27 17:31:11,526 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-09-27 17:31:11,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:31:11,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-09-27 17:31:11,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:31:11,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:31:11,742 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:31:11,743 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:31:11,743 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:31:11,743 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2018-09-27 17:31:11,743 TRACE [3] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2018-09-27 17:31:11,753 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,753 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,753 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,753 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,756 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,756 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,756 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,756 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,756 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,757 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,757 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,757 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,757 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:31:11,757 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:31:11,758 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:31:11,759 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:31:11,880 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-09-27 17:31:11,880 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-09-27 17:31:11,880 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-09-27 17:33:18,361 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:33:18,385 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:33:18,392 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:33:18,393 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:33:18,394 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:33:18,394 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:33:18,395 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:33:18,395 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:33:18,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:33:18,476 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:33:18,481 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:33:18,495 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:33:18,513 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:33:18,537 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:33:18,539 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:33:18,549 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:33:18,560 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:33:18,562 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:33:18,566 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:33:18,567 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:33:18,568 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:33:18,568 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:33:18,569 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:33:18,569 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:33:18,569 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:33:18,570 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:33:18,570 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:33:18,570 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:33:18,571 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:33:18,571 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:33:18,572 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:33:18,572 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:33:18,573 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:33:18,575 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:33:18,575 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:33:18,576 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:33:18,576 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:33:18,584 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:33:18,587 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:33:18,589 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:33:18,591 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:33:18,593 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:33:18,594 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:33:18,595 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:33:18,596 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:33:18,597 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:33:18,598 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:33:18,598 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:33:18,599 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:33:18,599 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:33:18,616 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:33:18,618 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:33:18,618 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:33:18,619 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:33:18,619 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:33:18,619 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:33:18,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:33:18,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:33:18,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:33:18,639 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:33:18,640 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:33:18,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:33:18,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:33:18,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:33:18,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:33:18,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:33:18,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:33:18,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:33:18,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:33:18,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,649 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:33:18,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:33:18,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:33:18,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,660 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-09-27 17:33:18,660 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:33:18,660 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:33:18,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-09-27 17:33:18,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:33:18,661 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:33:18,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:33:18,662 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:33:18,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:33:18,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-09-27 17:33:18,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-09-27 17:33:18,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-09-27 17:33:18,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:33:18,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-09-27 17:33:18,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-09-27 17:33:18,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-09-27 17:33:18,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:33:18,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-09-27 17:33:18,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:33:18,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:33:18,666 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:33:18,667 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:33:18,667 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:33:18,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-09-27 17:33:18,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-09-27 17:33:18,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-09-27 17:33:18,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:33:18,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,670 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-09-27 17:33:18,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:33:18,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:33:18,671 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:33:18,672 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:33:18,672 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:33:18,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:33:18,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-09-27 17:33:18,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:33:18,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:33:18,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:33:18,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-09-27 17:33:18,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-09-27 17:33:18,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-09-27 17:33:18,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-09-27 17:33:18,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:33:18,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,676 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:33:18,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:33:18,676 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:33:18,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:33:18,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-09-27 17:33:18,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-09-27 17:33:18,677 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-09-27 17:33:18,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-09-27 17:33:18,678 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-09-27 17:33:18,678 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-09-27 17:33:18,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:33:18,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:33:18,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:33:18,681 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-09-27 17:33:18,681 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-09-27 17:33:18,682 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-09-27 17:33:18,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:33:18,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-09-27 17:33:18,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-09-27 17:33:18,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:33:18,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:33:18,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-09-27 17:33:18,697 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-09-27 17:33:18,697 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-09-27 17:33:18,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-09-27 17:33:18,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-09-27 17:33:18,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-09-27 17:33:18,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:33:18,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:33:18,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:33:18,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:33:18,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:33:18,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:33:18,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:33:18,700 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-09-27 17:33:18,700 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:33:18,700 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-09-27 17:33:18,793 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,799 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:33:18,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,800 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:33:18,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:33:18,801 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:33:18,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:33:18,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:33:18,802 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:33:18,803 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:33:18,804 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:33:18,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,805 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:33:18,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:33:18,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:33:18,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:33:18,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:33:18,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:33:18,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:33:18,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:33:18,822 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:33:18,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:33:18,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:33:18,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:33:18,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:33:18,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:33:18,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:33:18,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:33:18,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:33:18,827 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:33:18,827 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:33:18,834 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:33:18,834 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,835 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:33:18,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,836 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:33:18,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,837 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:33:18,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:33:18,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:33:18,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:33:18,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:33:18,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:33:18,839 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:33:18,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:33:18,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:33:18,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:33:18,897 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:33:18,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:33:18,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:33:18,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:33:18,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:33:18,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:33:18,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-09-27 17:33:18,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-09-27 17:33:18,902 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-09-27 17:33:18,902 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:33:18,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:33:18,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:33:18,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:33:18,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:33:18,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:33:18,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-09-27 17:33:18,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:18,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:18,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:18,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:18,917 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-09-27 17:33:18,917 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:33:18,918 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:33:18,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-09-27 17:33:18,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-09-27 17:33:18,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-09-27 17:33:18,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-09-27 17:33:18,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:33:18,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:33:18,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:33:18,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:33:18,920 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:33:18,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:33:18,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:33:18,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:33:18,924 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,924 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:33:18,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:33:18,927 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,927 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:33:18,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:33:18,929 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,930 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:33:18,932 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,933 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,933 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:33:18,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:33:18,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:33:18,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:33:18,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:33:18,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:33:18,939 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:33:18,939 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:33:18,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:33:18,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:33:18,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,942 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:33:18,942 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:33:18,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:33:18,945 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,946 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:33:18,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:33:18,948 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:33:18,951 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,951 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:33:18,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:33:18,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:33:18,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:33:18,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:33:18,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:33:18,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:33:18,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:33:18,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:33:18,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:33:18,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:33:18,961 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,961 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:33:18,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:33:18,965 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,965 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:33:18,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:33:18,969 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:33:18,972 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,973 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:18,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:33:18,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:33:18,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:33:18,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:33:18,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:33:18,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:33:18,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:33:18,982 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:33:18,982 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:33:18,983 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:33:18,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,984 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:33:18,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:33:18,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:33:18,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,987 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:33:18,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:33:18,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:33:18,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:33:18,992 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,992 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:33:18,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:33:18,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:33:18,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:18,996 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:33:18,996 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:18,997 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:18,997 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:33:18,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:33:19,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:33:19,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:33:19,001 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,002 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:19,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:19,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:33:19,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:33:19,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:33:19,007 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,008 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:33:19,012 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,013 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:33:19,017 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,018 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,019 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:33:19,021 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,022 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:33:19,032 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,033 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:33:19,036 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:33:19,038 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,039 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:33:19,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:33:19,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:33:19,041 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:33:19,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:33:19,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:33:19,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-09-27 17:33:19,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-09-27 17:33:19,043 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-09-27 17:33:19,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,045 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-09-27 17:33:19,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:33:19,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-09-27 17:33:19,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-09-27 17:33:19,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-09-27 17:33:19,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:33:19,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-09-27 17:33:19,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:19,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:19,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:19,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:19,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:33:19,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:33:19,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:33:19,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:33:19,050 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-09-27 17:33:19,050 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-09-27 17:33:19,050 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:33:19,051 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:33:19,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-09-27 17:33:19,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-09-27 17:33:19,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-09-27 17:33:19,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-09-27 17:33:19,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:33:19,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-09-27 17:33:19,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-09-27 17:33:19,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-09-27 17:33:19,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-09-27 17:33:19,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-09-27 17:33:19,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-09-27 17:33:19,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:33:19,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:33:19,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:33:19,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:33:19,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-09-27 17:33:19,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-09-27 17:33:19,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-09-27 17:33:19,055 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1CBA437']
2018-09-27 17:33:19,055 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-09-27 17:33:19,056 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-09-27 17:33:19,056 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-09-27 17:33:19,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-09-27 17:33:19,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-09-27 17:33:19,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-09-27 17:33:19,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-09-27 17:33:19,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:33:19,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:33:19,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:33:19,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-09-27 17:33:19,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:33:19,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:33:19,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2018-09-27 17:33:19,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:33:19,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2018-09-27 17:33:19,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2018-09-27 17:33:19,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2018-09-27 17:33:19,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2018-09-27 17:33:19,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:33:19,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:33:19,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:33:19,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:33:19,070 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2018-09-27 17:33:19,070 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2018-09-27 17:33:19,072 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2018-09-27 17:33:19,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2018-09-27 17:33:19,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2018-09-27 17:33:19,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2018-09-27 17:33:19,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2018-09-27 17:33:19,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2018-09-27 17:33:19,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2018-09-27 17:33:19,074 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2018-09-27 17:33:19,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:33:19,075 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:33:19,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:33:19,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:33:19,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:33:19,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2018-09-27 17:33:19,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:33:19,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:33:19,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:33:19,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-09-27 17:33:19,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-09-27 17:33:19,082 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-09-27 17:33:19,084 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-09-27 17:33:19,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-09-27 17:33:19,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-09-27 17:33:19,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-09-27 17:33:19,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-09-27 17:33:19,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:33:19,088 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:33:19,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:33:19,089 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:33:19,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:33:19,090 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:33:19,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:33:19,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:33:19,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:33:19,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:33:19,092 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:33:19,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:33:19,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:33:19,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:33:19,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@1CBA437']
2018-09-27 17:33:19,095 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2018-09-27 17:33:19,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:33:19,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2018-09-27 17:33:19,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2018-09-27 17:33:19,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2018-09-27 17:33:19,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2018-09-27 17:33:19,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2018-09-27 17:33:19,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2018-09-27 17:33:19,098 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:33:19,105 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:33:19,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:33:19,107 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:33:19,108 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:33:19,110 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2018-09-27 17:33:19,115 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2018-09-27 17:33:19,116 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:33:19,117 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:33:19,117 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:33:19,118 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:33:19,118 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:33:19,118 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:33:19,119 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:33:19,119 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:33:19,119 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:33:19,120 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:33:19,120 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:33:19,120 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:33:19,121 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:33:19,121 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:33:19,121 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:33:19,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:33:19,123 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2018-09-27 17:33:19,123 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:33:19,123 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:33:19,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:33:19,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2018-09-27 17:33:19,124 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:33:19,127 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:33:19,128 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:33:19,129 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:33:19,130 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-09-27 17:33:19,131 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:33:19,131 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:33:19,132 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:33:19,132 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:33:19,133 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:33:19,133 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2018-09-27 17:33:19,134 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2018-09-27 17:33:19,158 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2018-09-27 17:33:19,171 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:33:19,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2018-09-27 17:33:19,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2018-09-27 17:33:19,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2018-09-27 17:33:19,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2018-09-27 17:33:19,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:33:19,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2018-09-27 17:33:19,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2018-09-27 17:33:19,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:33:19,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:33:19,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:33:19,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:33:19,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:33:19,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:33:19,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:33:19,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:33:19,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2018-09-27 17:33:19,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:33:19,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:33:19,181 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2018-09-27 17:33:19,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:33:19,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:33:19,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:33:19,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:33:19,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,226 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2018-09-27 17:33:19,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:33:19,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:33:19,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:33:19,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:33:19,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:33:19,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2018-09-27 17:33:19,236 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-09-27 17:33:19,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:33:19,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-09-27 17:33:19,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:33:19,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:33:19,392 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:33:19,392 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:33:19,393 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:33:19,393 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2018-09-27 17:33:19,393 TRACE [3] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2018-09-27 17:33:19,394 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,394 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,394 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,395 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,397 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,397 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,398 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,398 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,398 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,399 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,399 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,399 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,399 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:33:19,400 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:33:19,400 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:33:19,400 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:33:19,405 DEBUG [3] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:33:19,405 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2018-09-27 17:33:19,405 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2018-09-27 17:33:19,405 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2018-09-27 17:33:19,405 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2018-09-27 17:33:19,406 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:33:19,406 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:33:19,406 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:33:19,471 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-09-27 17:33:19,472 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-09-27 17:33:19,472 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-09-27 17:35:55,627 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2018-09-27 17:35:55,651 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2018-09-27 17:35:55,659 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2018-09-27 17:35:55,659 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2018-09-27 17:35:55,660 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2018-09-27 17:35:55,661 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2018-09-27 17:35:55,661 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2018-09-27 17:35:55,661 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2018-09-27 17:35:55,746 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2018-09-27 17:35:55,747 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2018-09-27 17:35:55,752 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2018-09-27 17:35:55,772 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:35:55,796 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:35:55,829 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:35:55,831 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:35:55,843 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:35:55,854 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2018-09-27 17:35:55,857 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:35:55,860 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:35:55,862 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:35:55,862 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:35:55,863 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:35:55,863 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:35:55,863 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:35:55,864 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:35:55,864 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:35:55,864 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:35:55,864 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:35:55,865 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:35:55,866 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:35:55,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:35:55,866 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2018-09-27 17:35:55,866 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:35:55,868 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:35:55,868 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:35:55,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2018-09-27 17:35:55,869 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:35:55,875 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:35:55,876 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2018-09-27 17:35:55,878 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:35:55,880 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2018-09-27 17:35:55,882 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:35:55,883 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:35:55,884 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:35:55,885 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:35:55,886 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2018-09-27 17:35:55,886 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2018-09-27 17:35:55,887 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2018-09-27 17:35:55,887 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2018-09-27 17:35:55,887 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2018-09-27 17:35:55,902 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2018-09-27 17:35:55,904 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2018-09-27 17:35:55,904 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2018-09-27 17:35:55,904 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2018-09-27 17:35:55,904 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2018-09-27 17:35:55,905 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2018-09-27 17:35:55,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:35:55,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:35:55,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2018-09-27 17:35:55,923 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2018-09-27 17:35:55,923 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:55,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2018-09-27 17:35:55,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2018-09-27 17:35:55,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2018-09-27 17:35:55,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2018-09-27 17:35:55,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2018-09-27 17:35:55,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:35:55,930 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:35:55,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2018-09-27 17:35:55,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:35:55,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2018-09-27 17:35:55,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:35:55,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:35:55,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:55,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:55,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:55,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:55,941 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2018-09-27 17:35:55,942 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2018-09-27 17:35:55,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2018-09-27 17:35:55,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:35:55,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:35:55,944 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2018-09-27 17:35:55,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2018-09-27 17:35:55,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2018-09-27 17:35:55,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2018-09-27 17:35:55,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:35:55,947 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2018-09-27 17:35:55,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:35:55,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:35:55,949 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:35:55,949 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2018-09-27 17:35:55,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2018-09-27 17:35:55,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2018-09-27 17:35:55,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2018-09-27 17:35:55,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:35:55,951 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2018-09-27 17:35:55,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:35:55,952 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,953 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:35:55,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:35:55,953 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:35:55,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2018-09-27 17:35:55,954 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2018-09-27 17:35:55,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2018-09-27 17:35:55,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2018-09-27 17:35:55,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:35:55,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,957 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:35:55,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2018-09-27 17:35:55,957 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2018-09-27 17:35:55,957 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2018-09-27 17:35:55,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2018-09-27 17:35:55,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2018-09-27 17:35:55,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2018-09-27 17:35:55,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2018-09-27 17:35:55,959 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2018-09-27 17:35:55,959 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2018-09-27 17:35:55,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2018-09-27 17:35:55,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2018-09-27 17:35:55,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2018-09-27 17:35:55,962 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2018-09-27 17:35:55,962 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2018-09-27 17:35:55,963 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2018-09-27 17:35:55,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:35:55,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2018-09-27 17:35:55,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2018-09-27 17:35:55,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:35:55,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:35:55,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:55,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2018-09-27 17:35:55,976 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2018-09-27 17:35:55,977 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:55,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2018-09-27 17:35:55,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2018-09-27 17:35:55,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2018-09-27 17:35:55,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2018-09-27 17:35:55,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2018-09-27 17:35:55,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:35:55,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2018-09-27 17:35:55,979 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:35:55,980 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2018-09-27 17:35:56,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:35:56,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:35:56,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:35:56,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:35:56,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:35:56,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:35:56,024 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:35:56,024 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:35:56,025 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:35:56,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:35:56,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:35:56,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:35:56,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:35:56,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:35:56,044 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:35:56,045 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:35:56,045 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:35:56,045 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:35:56,045 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:35:56,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,046 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:35:56,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,047 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:35:56,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,048 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:35:56,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:35:56,049 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:35:56,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:35:56,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:35:56,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:35:56,057 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:35:56,057 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:35:56,057 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:35:56,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2018-09-27 17:35:56,059 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2018-09-27 17:35:56,060 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2018-09-27 17:35:56,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2018-09-27 17:35:56,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2018-09-27 17:35:56,061 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2018-09-27 17:35:56,061 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2018-09-27 17:35:56,061 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2018-09-27 17:35:56,062 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2018-09-27 17:35:56,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,062 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2018-09-27 17:35:56,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2018-09-27 17:35:56,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:35:56,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:35:56,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:35:56,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2018-09-27 17:35:56,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2018-09-27 17:35:56,124 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2018-09-27 17:35:56,125 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2018-09-27 17:35:56,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2018-09-27 17:35:56,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2018-09-27 17:35:56,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2018-09-27 17:35:56,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2018-09-27 17:35:56,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:35:56,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:35:56,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:35:56,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:35:56,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:35:56,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:35:56,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2018-09-27 17:35:56,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2018-09-27 17:35:56,140 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2018-09-27 17:35:56,141 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2018-09-27 17:35:56,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2018-09-27 17:35:56,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2018-09-27 17:35:56,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2018-09-27 17:35:56,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2018-09-27 17:35:56,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2018-09-27 17:35:56,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:35:56,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:35:56,143 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:35:56,143 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:35:56,143 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:35:56,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:35:56,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:35:56,146 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,148 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:35:56,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:35:56,150 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,150 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:35:56,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:35:56,153 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,153 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,154 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:35:56,156 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,157 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,158 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:35:56,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:35:56,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:35:56,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:35:56,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:35:56,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:35:56,164 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:35:56,164 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:35:56,164 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:35:56,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:35:56,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:35:56,169 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,170 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:35:56,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:35:56,172 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,173 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:35:56,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:35:56,175 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:35:56,178 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,178 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:35:56,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:35:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:35:56,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:35:56,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:35:56,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:35:56,184 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:35:56,184 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:35:56,185 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:35:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,185 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:35:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:35:56,188 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,189 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:35:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:35:56,192 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,192 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:35:56,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:35:56,196 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,196 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:35:56,200 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,200 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2018-09-27 17:35:56,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2018-09-27 17:35:56,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:35:56,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:35:56,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:35:56,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:35:56,209 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2018-09-27 17:35:56,209 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2018-09-27 17:35:56,210 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2018-09-27 17:35:56,210 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2018-09-27 17:35:56,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2018-09-27 17:35:56,212 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2018-09-27 17:35:56,214 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,214 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2018-09-27 17:35:56,216 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2018-09-27 17:35:56,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2018-09-27 17:35:56,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2018-09-27 17:35:56,219 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,219 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2018-09-27 17:35:56,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2018-09-27 17:35:56,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2018-09-27 17:35:56,223 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,224 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2018-09-27 17:35:56,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2018-09-27 17:35:56,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2018-09-27 17:35:56,228 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,229 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2018-09-27 17:35:56,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2018-09-27 17:35:56,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:35:56,234 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,235 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:35:56,239 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,240 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,242 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:35:56,244 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,244 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:35:56,248 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,248 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:35:56,256 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,257 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:35:56,259 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,260 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2018-09-27 17:35:56,262 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,262 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2018-09-27 17:35:56,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2018-09-27 17:35:56,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2018-09-27 17:35:56,264 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2018-09-27 17:35:56,264 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2018-09-27 17:35:56,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2018-09-27 17:35:56,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2018-09-27 17:35:56,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2018-09-27 17:35:56,266 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2018-09-27 17:35:56,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,268 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2018-09-27 17:35:56,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:35:56,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2018-09-27 17:35:56,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2018-09-27 17:35:56,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2018-09-27 17:35:56,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:35:56,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2018-09-27 17:35:56,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:35:56,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:35:56,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:35:56,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:35:56,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2018-09-27 17:35:56,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2018-09-27 17:35:56,272 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:35:56,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:35:56,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2018-09-27 17:35:56,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2018-09-27 17:35:56,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2018-09-27 17:35:56,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2018-09-27 17:35:56,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2018-09-27 17:35:56,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2018-09-27 17:35:56,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:35:56,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:35:56,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:35:56,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:35:56,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2018-09-27 17:35:56,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2018-09-27 17:35:56,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2018-09-27 17:35:56,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@E6A20C']
2018-09-27 17:35:56,276 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2018-09-27 17:35:56,277 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2018-09-27 17:35:56,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2018-09-27 17:35:56,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2018-09-27 17:35:56,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2018-09-27 17:35:56,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2018-09-27 17:35:56,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2018-09-27 17:35:56,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:35:56,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:35:56,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2018-09-27 17:35:56,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2018-09-27 17:35:56,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2018-09-27 17:35:56,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2018-09-27 17:35:56,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2018-09-27 17:35:56,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:35:56,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2018-09-27 17:35:56,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2018-09-27 17:35:56,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2018-09-27 17:35:56,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2018-09-27 17:35:56,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:35:56,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:35:56,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:35:56,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:35:56,289 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2018-09-27 17:35:56,289 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2018-09-27 17:35:56,291 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2018-09-27 17:35:56,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2018-09-27 17:35:56,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2018-09-27 17:35:56,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2018-09-27 17:35:56,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2018-09-27 17:35:56,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2018-09-27 17:35:56,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2018-09-27 17:35:56,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2018-09-27 17:35:56,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2018-09-27 17:35:56,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2018-09-27 17:35:56,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2018-09-27 17:35:56,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2018-09-27 17:35:56,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2018-09-27 17:35:56,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2018-09-27 17:35:56,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2018-09-27 17:35:56,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2018-09-27 17:35:56,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:35:56,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2018-09-27 17:35:56,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,298 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2018-09-27 17:35:56,298 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2018-09-27 17:35:56,299 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2018-09-27 17:35:56,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2018-09-27 17:35:56,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2018-09-27 17:35:56,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2018-09-27 17:35:56,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2018-09-27 17:35:56,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:35:56,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:35:56,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:35:56,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:35:56,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:35:56,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:35:56,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2018-09-27 17:35:56,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2018-09-27 17:35:56,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2018-09-27 17:35:56,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2018-09-27 17:35:56,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:35:56,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:35:56,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:35:56,305 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:35:56,306 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@E6A20C']
2018-09-27 17:35:56,306 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2018-09-27 17:35:56,306 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2018-09-27 17:35:56,306 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2018-09-27 17:35:56,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2018-09-27 17:35:56,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2018-09-27 17:35:56,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2018-09-27 17:35:56,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2018-09-27 17:35:56,307 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2018-09-27 17:35:56,308 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2018-09-27 17:35:56,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2018-09-27 17:35:56,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2018-09-27 17:35:56,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2018-09-27 17:35:56,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2018-09-27 17:35:56,316 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2018-09-27 17:35:56,321 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2018-09-27 17:35:56,323 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2018-09-27 17:35:56,323 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\CefSharp-67\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2018-09-27 17:35:56,324 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2018-09-27 17:35:56,324 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2018-09-27 17:35:56,325 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2018-09-27 17:35:56,325 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2018-09-27 17:35:56,325 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2018-09-27 17:35:56,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2018-09-27 17:35:56,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2018-09-27 17:35:56,326 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:35:56,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:35:56,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2018-09-27 17:35:56,327 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2018-09-27 17:35:56,328 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2018-09-27 17:35:56,328 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2018-09-27 17:35:56,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2018-09-27 17:35:56,328 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2018-09-27 17:35:56,329 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2018-09-27 17:35:56,329 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2018-09-27 17:35:56,329 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2018-09-27 17:35:56,330 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2018-09-27 17:35:56,330 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2018-09-27 17:35:56,333 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:35:56,336 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2018-09-27 17:35:56,336 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2018-09-27 17:35:56,337 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2018-09-27 17:35:56,338 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2018-09-27 17:35:56,339 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2018-09-27 17:35:56,339 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:35:56,339 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2018-09-27 17:35:56,340 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2018-09-27 17:35:56,341 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2018-09-27 17:35:56,341 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2018-09-27 17:35:56,372 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2018-09-27 17:35:56,386 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2018-09-27 17:35:56,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2018-09-27 17:35:56,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2018-09-27 17:35:56,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2018-09-27 17:35:56,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2018-09-27 17:35:56,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2018-09-27 17:35:56,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2018-09-27 17:35:56,388 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2018-09-27 17:35:56,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2018-09-27 17:35:56,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2018-09-27 17:35:56,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2018-09-27 17:35:56,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2018-09-27 17:35:56,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2018-09-27 17:35:56,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2018-09-27 17:35:56,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2018-09-27 17:35:56,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2018-09-27 17:35:56,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2018-09-27 17:35:56,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:35:56,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:35:56,396 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2018-09-27 17:35:56,455 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:35:56,459 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:35:56,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:35:56,460 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:35:56,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,463 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,464 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,466 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,466 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2018-09-27 17:35:56,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:35:56,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:35:56,467 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:35:56,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2018-09-27 17:35:56,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2018-09-27 17:35:56,468 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2018-09-27 17:35:56,477 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2018-09-27 17:35:56,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2018-09-27 17:35:56,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2018-09-27 17:35:56,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2018-09-27 17:35:56,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2018-09-27 17:35:56,649 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:35:56,650 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:35:56,650 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2018-09-27 17:35:56,650 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2018-09-27 17:35:56,650 TRACE [3] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2018-09-27 17:35:56,651 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,651 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,651 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,652 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,654 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,654 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,654 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,659 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,659 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,659 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,659 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,659 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,660 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:35:56,660 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:35:56,660 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:35:56,660 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:35:56,661 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:35:56,704 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2018-09-27 17:35:56,704 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2018-09-27 17:35:56,705 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2018-09-27 17:36:13,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:13,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:13,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:13,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:13,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:13,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:13,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:13,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:14,585 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:14,585 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:14,585 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:14,585 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:18,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:18,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:18,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:18,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:18,278 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:18,278 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:18,279 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:18,279 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:20,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:20,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:20,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:20,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:20,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:20,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:20,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:20,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:20,254 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:20,254 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:20,254 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:20,254 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:21,647 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:21,648 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:21,648 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:21,648 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:21,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:21,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:21,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:21,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:30,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:30,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:30,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:30,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:30,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:30,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:30,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:30,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:30,118 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:30,119 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:30,119 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:30,119 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:31,501 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:31,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:31,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:31,502 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:31,503 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:31,508 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:31,519 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:31,520 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:38,111 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:38,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:38,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:38,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:38,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:38,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:38,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:38,114 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:38,123 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:38,123 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:38,123 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:38,123 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:39,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:39,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:39,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:39,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:39,686 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:39,687 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:39,721 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:39,721 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:42,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:42,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:42,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:42,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:42,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:42,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:42,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:42,514 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:42,521 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2018-09-27 17:36:42,521 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2018-09-27 17:36:42,521 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2018-09-27 17:36:42,521 DEBUG [3] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2018-09-27 17:36:47,155 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,181 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,182 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,183 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,183 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessage]
2018-09-27 17:36:47,262 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,262 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,263 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,263 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,263 ERROR [5] [DS.AFP.Common.Core.LoggerFacade] [Error] [System.FormatException: 输入字符串的格式不正确。
   在 System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer& number, NumberFormatInfo info, Boolean parseDecimal)
   在 System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   在 System.Int32.Parse(String s)
   在 DS.AFP.Framework.WPF.Browser.DS_AFP_Browser_Common.SendMessage(String playerid, String parameters) 位置 D:\WorkSpace\CefSharp-67\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.WPF\Controls\Browser\DS_AFP_Browser_Common.cs:行号 149]
2018-09-27 17:36:47,551 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,551 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,551 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,551 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,551 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessage]
2018-09-27 17:36:47,569 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,569 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,569 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,570 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,570 ERROR [5] [DS.AFP.Common.Core.LoggerFacade] [Error] [System.FormatException: 输入字符串的格式不正确。
   在 System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer& number, NumberFormatInfo info, Boolean parseDecimal)
   在 System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   在 System.Int32.Parse(String s)
   在 DS.AFP.Framework.WPF.Browser.DS_AFP_Browser_Common.SendMessage(String playerid, String parameters) 位置 D:\WorkSpace\CefSharp-67\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.WPF\Controls\Browser\DS_AFP_Browser_Common.cs:行号 149]
2018-09-27 17:36:47,783 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,783 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,784 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,784 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,784 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessage]
2018-09-27 17:36:47,809 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:47,810 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:47,810 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:47,810 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:47,810 ERROR [5] [DS.AFP.Common.Core.LoggerFacade] [Error] [System.FormatException: 输入字符串的格式不正确。
   在 System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer& number, NumberFormatInfo info, Boolean parseDecimal)
   在 System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   在 System.Int32.Parse(String s)
   在 DS.AFP.Framework.WPF.Browser.DS_AFP_Browser_Common.SendMessage(String playerid, String parameters) 位置 D:\WorkSpace\CefSharp-67\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.WPF\Controls\Browser\DS_AFP_Browser_Common.cs:行号 149]
2018-09-27 17:36:48,007 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:48,007 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:48,007 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:48,007 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:48,007 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessage]
2018-09-27 17:36:48,023 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:48,023 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:48,024 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:48,024 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:48,024 ERROR [5] [DS.AFP.Common.Core.LoggerFacade] [Error] [System.FormatException: 输入字符串的格式不正确。
   在 System.Number.StringToNumber(String str, NumberStyles options, NumberBuffer& number, NumberFormatInfo info, Boolean parseDecimal)
   在 System.Number.ParseInt32(String s, NumberStyles style, NumberFormatInfo info)
   在 System.Int32.Parse(String s)
   在 DS.AFP.Framework.WPF.Browser.DS_AFP_Browser_Common.SendMessage(String playerid, String parameters) 位置 D:\WorkSpace\CefSharp-67\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.WPF\Controls\Browser\DS_AFP_Browser_Common.cs:行号 149]
2018-09-27 17:36:49,146 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:49,146 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:49,146 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:49,147 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:49,147 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessageToBrowser]
2018-09-27 17:36:49,147 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:49,147 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:49,147 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:49,147 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:49,190 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:49,226 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:49,227 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:49,227 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:49,227 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [WebBrowserManager SendMessageToJs:{"head":{"code":"code1","from":"dsweb","tos":["1","2"]},"body":"testbody测试中文<a>测试连接</a>,\\:></  56"}]
2018-09-27 17:36:54,383 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:54,383 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:54,383 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:54,384 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:54,384 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessageToWebSocketClient]
2018-09-27 17:36:54,384 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:54,384 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:54,384 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:54,384 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:56,639 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:56,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:56,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:56,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:56,640 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessageToDSCT]
2018-09-27 17:36:56,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:56,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:56,641 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:56,641 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:57,639 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:57,639 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:57,640 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [SendMessageToBrowser]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2018-09-27 17:36:57,640 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2018-09-27 17:36:57,641 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2018-09-27 17:36:57,641 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2018-09-27 17:36:57,641 DEBUG [5] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2018-09-27 17:36:57,641 INFO  [5] [DS.AFP.Common.Core.LoggerFacade] [Info] [WebBrowserManager SendMessageToJs:{"head":{"code":"code1","from":"dsweb","tos":["1","2"]},"body":"testbody测试中文<a>测试连接</a>,\\:></  56"}]
