2017-12-26 13:26:51,147 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-12-26 13:26:51,264 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-12-26 13:26:51,273 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-12-26 13:26:51,273 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-12-26 13:26:51,277 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-12-26 13:26:51,277 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-12-26 13:26:51,278 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-12-26 13:26:51,278 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-12-26 13:26:51,738 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-12-26 13:26:51,738 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-12-26 13:26:51,743 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-12-26 13:26:51,763 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:26:51,786 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:26:51,858 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:26:51,860 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:26:51,898 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:26:51,985 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:26:51,995 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:26:52,002 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:26:52,006 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:26:52,007 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:26:52,007 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:26:52,008 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:26:52,008 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:26:52,008 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:26:52,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:26:52,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:26:52,009 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:26:52,010 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:26:52,010 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:26:52,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:26:52,011 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-12-26 13:26:52,011 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:26:52,013 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:26:52,013 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:26:52,014 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-12-26 13:26:52,014 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:26:52,024 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:26:52,027 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:26:52,030 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:26:52,032 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-12-26 13:26:52,034 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:26:52,034 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:26:52,035 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:26:52,036 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:26:52,037 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-12-26 13:26:52,037 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-12-26 13:26:52,038 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-12-26 13:26:52,038 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-12-26 13:26:52,039 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-12-26 13:26:52,076 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-12-26 13:26:52,078 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-12-26 13:26:52,078 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-12-26 13:26:52,078 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-12-26 13:26:52,079 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-12-26 13:26:52,079 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-12-26 13:26:52,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:26:52,091 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:26:52,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,093 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-12-26 13:26:52,099 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-12-26 13:26:52,100 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-12-26 13:26:52,101 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-12-26 13:26:52,104 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-12-26 13:26:52,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-12-26 13:26:52,106 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:26:52,109 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:26:52,110 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:26:52,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-12-26 13:26:52,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:26:52,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,112 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-12-26 13:26:52,120 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:26:52,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:26:52,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,121 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,123 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-12-26 13:26:52,123 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:26:52,124 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:26:52,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-12-26 13:26:52,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-12-26 13:26:52,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:26:52,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:26:52,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:26:52,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:26:52,125 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:26:52,125 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:26:52,126 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-12-26 13:26:52,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-12-26 13:26:52,127 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-12-26 13:26:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:26:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-12-26 13:26:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:26:52,128 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,129 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:26:52,129 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:26:52,129 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:26:52,129 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-12-26 13:26:52,130 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-12-26 13:26:52,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-12-26 13:26:52,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:26:52,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,131 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-12-26 13:26:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:26:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,133 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:26:52,134 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:26:52,134 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:26:52,134 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:26:52,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:26:52,134 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-12-26 13:26:52,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:26:52,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:26:52,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:26:52,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-12-26 13:26:52,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-12-26 13:26:52,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-12-26 13:26:52,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-12-26 13:26:52,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:26:52,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:26:52,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:26:52,139 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:26:52,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:26:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-12-26 13:26:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-12-26 13:26:52,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-12-26 13:26:52,142 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-12-26 13:26:52,142 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-12-26 13:26:52,143 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-12-26 13:26:52,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:26:52,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:26:52,144 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:26:52,145 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-12-26 13:26:52,145 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-12-26 13:26:52,146 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-12-26 13:26:52,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:26:52,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-12-26 13:26:52,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-12-26 13:26:52,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:26:52,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:26:52,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-12-26 13:26:52,269 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-12-26 13:26:52,269 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-12-26 13:26:52,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-12-26 13:26:52,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-12-26 13:26:52,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-12-26 13:26:52,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:26:52,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:26:52,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-12-26 13:26:52,271 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:26:52,272 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-12-26 13:26:52,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:26:52,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:26:52,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:26:52,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:26:52,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:26:52,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:26:52,317 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:26:52,318 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:26:52,318 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:26:52,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:26:52,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:26:52,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:26:52,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:26:52,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:26:52,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:26:52,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:26:52,358 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:26:52,358 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:26:52,358 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:26:52,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:26:52,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:26:52,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:26:52,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:26:52,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:26:52,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:26:52,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:26:52,362 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:26:52,362 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:26:52,363 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:26:52,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:26:52,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:26:52,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:26:52,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:26:52,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:26:52,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:26:52,372 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:26:52,373 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:26:52,373 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:26:52,373 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:26:52,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:26:52,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:26:52,518 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-12-26 13:26:52,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-12-26 13:26:52,518 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:26:52,519 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:26:52,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:26:52,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-12-26 13:26:52,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-12-26 13:26:52,524 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-12-26 13:26:52,524 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:26:52,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:26:52,538 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:26:52,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:26:52,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:26:52,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:26:52,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-12-26 13:26:52,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,544 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,544 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-12-26 13:26:52,544 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:26:52,545 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:26:52,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-12-26 13:26:52,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-12-26 13:26:52,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-12-26 13:26:52,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-12-26 13:26:52,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:26:52,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:26:52,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:26:52,547 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:26:52,547 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:26:52,548 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:26:52,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,548 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:26:52,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:26:52,552 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,552 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:26:52,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:26:52,555 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,555 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:26:52,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:26:52,558 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,558 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:26:52,562 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,562 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:26:52,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:26:52,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:26:52,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:26:52,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:26:52,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:26:52,568 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:26:52,568 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:26:52,569 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:26:52,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:26:52,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:26:52,572 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,572 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,572 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:26:52,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:26:52,576 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,576 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:26:52,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:26:52,581 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,581 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:26:52,584 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,584 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:26:52,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:26:52,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:26:52,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:26:52,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:26:52,589 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:26:52,590 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:26:52,590 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:26:52,591 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:26:52,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:26:52,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:26:52,594 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,594 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:26:52,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,597 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:26:52,597 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,598 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:26:52,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,602 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:26:52,602 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,603 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,605 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:26:52,608 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,608 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:26:52,610 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:26:52,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:26:52,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:26:52,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:26:52,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:26:52,614 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:26:52,614 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:26:52,615 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:26:52,615 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:26:52,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:26:52,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:26:52,622 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,622 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,623 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:26:52,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:26:52,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:26:52,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,626 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:26:52,626 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,627 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:26:52,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:26:52,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:26:52,632 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,633 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:26:52,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:26:52,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:26:52,637 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,638 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:26:52,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:26:52,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:26:52,645 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,647 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,647 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,650 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:26:52,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,663 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:26:52,670 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,671 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,674 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:26:52,678 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,679 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,679 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,680 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,681 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:26:52,683 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,683 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:26:52,693 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,693 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:26:52,696 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,696 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:26:52,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:26:52,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:26:52,698 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:26:52,698 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:26:52,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:26:52,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:26:52,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-12-26 13:26:52,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,699 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-12-26 13:26:52,700 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-12-26 13:26:52,700 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-12-26 13:26:52,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-12-26 13:26:52,700 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-12-26 13:26:52,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-12-26 13:26:52,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-12-26 13:26:52,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:26:52,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:26:52,701 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-12-26 13:26:52,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:26:52,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-12-26 13:26:52,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-12-26 13:26:52,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-12-26 13:26:52,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:26:52,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-12-26 13:26:52,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:52,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:52,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:52,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:52,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:26:52,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:26:52,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:26:52,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:26:52,705 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-12-26 13:26:52,705 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-12-26 13:26:52,705 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-12-26 13:26:52,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-12-26 13:26:52,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-12-26 13:26:52,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-12-26 13:26:52,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-12-26 13:26:52,707 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-12-26 13:26:52,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:26:52,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:26:52,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:26:52,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:26:52,709 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-12-26 13:26:52,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-12-26 13:26:52,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-12-26 13:26:52,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:26:52,710 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-12-26 13:26:52,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-12-26 13:26:52,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:26:52,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:26:52,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:26:52,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-12-26 13:26:52,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:26:52,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:26:52,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2017-12-26 13:26:52,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:26:52,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2017-12-26 13:26:52,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2017-12-26 13:26:52,720 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2017-12-26 13:26:52,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2017-12-26 13:26:52,721 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:26:52,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:26:52,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:26:52,722 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:26:52,722 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2017-12-26 13:26:52,722 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2017-12-26 13:26:52,724 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2017-12-26 13:26:52,724 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2017-12-26 13:26:52,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2017-12-26 13:26:52,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2017-12-26 13:26:52,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2017-12-26 13:26:52,725 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2017-12-26 13:26:52,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2017-12-26 13:26:52,726 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2017-12-26 13:26:52,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:26:52,727 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:26:52,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:26:52,729 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:26:52,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:26:52,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2017-12-26 13:26:52,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:26:52,730 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:26:52,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:26:52,732 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-12-26 13:26:52,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:52,733 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-12-26 13:26:52,733 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-12-26 13:26:52,734 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:52,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-12-26 13:26:52,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-12-26 13:26:52,734 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-12-26 13:26:52,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-12-26 13:26:52,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-12-26 13:26:52,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:26:52,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:26:52,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:26:52,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:26:52,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:26:52,736 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:26:52,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:26:52,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:26:52,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:26:52,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:26:52,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:26:52,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:26:52,738 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:26:52,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:26:52,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:26:52,739 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:26:52,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:26:52,740 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:26:52,740 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:26:52,740 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2017-12-26 13:26:52,740 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:26:52,741 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2017-12-26 13:26:52,741 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2017-12-26 13:26:52,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2017-12-26 13:26:52,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2017-12-26 13:26:52,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2017-12-26 13:26:52,742 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2017-12-26 13:26:52,742 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:26:52,784 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:26:52,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:26:52,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:26:52,786 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:26:52,787 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2017-12-26 13:26:52,792 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2017-12-26 13:26:52,794 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:26:52,794 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:26:52,794 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:26:52,795 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:26:52,795 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:26:52,795 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:26:52,796 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:26:52,796 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:26:52,796 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:26:52,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:26:52,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:26:52,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:26:52,797 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:26:52,798 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:26:52,798 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:26:52,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:26:52,798 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2017-12-26 13:26:52,799 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:26:52,799 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:26:52,799 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:26:52,800 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2017-12-26 13:26:52,800 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:26:52,801 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:26:52,803 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:26:52,803 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:26:52,804 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-12-26 13:26:52,805 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:26:52,805 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:26:52,806 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:26:52,806 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:26:52,807 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:26:52,807 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2017-12-26 13:26:52,809 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2017-12-26 13:26:52,886 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2017-12-26 13:26:53,218 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:26:53,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2017-12-26 13:26:53,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2017-12-26 13:26:53,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2017-12-26 13:26:53,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2017-12-26 13:26:53,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:26:53,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2017-12-26 13:26:53,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2017-12-26 13:26:53,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:26:53,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:26:53,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:26:53,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:26:53,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:26:53,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:26:53,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:26:53,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:26:53,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2017-12-26 13:26:53,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:26:53,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:26:53,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:26:53,231 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2017-12-26 13:26:53,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:26:53,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:26:53,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:26:53,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:26:53,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:26:53,303 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:26:53,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:26:53,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:26:53,309 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2017-12-26 13:26:53,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2017-12-26 13:26:53,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:26:53,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:26:53,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:26:53,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:26:53,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:26:53,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2017-12-26 13:26:53,330 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-12-26 13:26:53,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:26:53,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-12-26 13:26:53,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:26:53,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:27:07,313 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:27:07,314 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:27:07,314 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:27:07,314 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-12-26 13:27:07,314 TRACE [8] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-12-26 13:27:07,315 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:27:07,316 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:27:07,316 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:27:07,316 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:27:07,318 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:27:07,319 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:27:07,320 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:27:07,320 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:27:07,358 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:27:07,359 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-12-26 13:27:07,360 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-12-26 13:27:07,361 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:27:07,361 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:27:07,361 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:27:07,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-12-26 13:27:07,417 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-12-26 13:27:07,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-12-26 13:27:21,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:27:22,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:27:22,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:27:22,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:27:22,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:27:22,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:27:22,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:27:22,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:27:29,520 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:27:29,520 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:27:29,520 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:27:29,520 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:28:23,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:28:23,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:28:23,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:28:23,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:29:32,188 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-12-26 13:29:32,235 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-12-26 13:29:32,243 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-12-26 13:29:32,243 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-12-26 13:29:32,245 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-12-26 13:29:32,245 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-12-26 13:29:32,245 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-12-26 13:29:32,246 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-12-26 13:29:32,431 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-12-26 13:29:32,431 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-12-26 13:29:32,435 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-12-26 13:29:32,453 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:29:32,478 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:29:32,515 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:29:32,527 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:29:32,620 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:29:32,729 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:29:32,740 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:29:32,747 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:29:32,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:29:32,750 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:29:32,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:29:32,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:29:32,753 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:29:32,753 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:29:32,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:29:32,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:29:32,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:29:32,754 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:29:32,755 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:29:32,756 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:29:32,756 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-12-26 13:29:32,756 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:29:32,769 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:29:32,769 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:29:32,769 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-12-26 13:29:32,770 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:29:32,780 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:29:32,782 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:29:32,805 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:29:32,808 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-12-26 13:29:32,812 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:29:32,813 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:29:32,814 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:29:32,815 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:29:32,817 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-12-26 13:29:32,818 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-12-26 13:29:32,818 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-12-26 13:29:32,819 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-12-26 13:29:32,820 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-12-26 13:29:32,842 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-12-26 13:29:32,844 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-12-26 13:29:32,845 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-12-26 13:29:32,845 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-12-26 13:29:32,846 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-12-26 13:29:32,846 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-12-26 13:29:32,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:29:32,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:29:32,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-12-26 13:29:32,873 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-12-26 13:29:32,874 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:32,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-12-26 13:29:32,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-12-26 13:29:32,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-12-26 13:29:32,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-12-26 13:29:32,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:29:32,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:29:32,883 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:29:32,884 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-12-26 13:29:32,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:29:32,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-12-26 13:29:32,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:29:32,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:29:32,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:32,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:32,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:32,900 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:32,903 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-12-26 13:29:32,903 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:29:32,909 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:29:32,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-12-26 13:29:32,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-12-26 13:29:32,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:29:32,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:29:32,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:29:32,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:29:32,910 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:29:32,911 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:29:32,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:29:32,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-12-26 13:29:32,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-12-26 13:29:32,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-12-26 13:29:32,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:29:32,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-12-26 13:29:32,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:29:32,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:29:32,916 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:29:32,916 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:29:32,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-12-26 13:29:32,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-12-26 13:29:32,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-12-26 13:29:32,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:29:32,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-12-26 13:29:32,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:29:32,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,920 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:29:32,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:29:32,920 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:29:32,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:29:32,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-12-26 13:29:32,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-12-26 13:29:32,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-12-26 13:29:32,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-12-26 13:29:32,931 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:29:32,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:29:32,932 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:29:32,933 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:29:32,933 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:29:32,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-12-26 13:29:32,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-12-26 13:29:32,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-12-26 13:29:32,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-12-26 13:29:32,936 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-12-26 13:29:32,936 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-12-26 13:29:32,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:29:32,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:29:32,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:29:32,938 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-12-26 13:29:32,938 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-12-26 13:29:32,939 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-12-26 13:29:32,962 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:29:32,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-12-26 13:29:32,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,963 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-12-26 13:29:32,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:29:32,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:29:32,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:32,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-12-26 13:29:32,965 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-12-26 13:29:32,965 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:32,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-12-26 13:29:32,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-12-26 13:29:32,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-12-26 13:29:32,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-12-26 13:29:32,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:29:32,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:29:32,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:29:32,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:29:32,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:29:32,968 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:29:32,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:29:32,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-12-26 13:29:32,969 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:29:32,969 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-12-26 13:29:33,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:29:33,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:29:33,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:29:33,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:29:33,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:29:33,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:29:33,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:29:33,028 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:29:33,029 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:29:33,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:29:33,076 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,077 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:29:33,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,078 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:29:33,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:29:33,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:29:33,079 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:29:33,080 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:29:33,080 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:29:33,080 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:29:33,080 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:29:33,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,081 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:29:33,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:29:33,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:29:33,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:29:33,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:29:33,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:29:33,084 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:29:33,084 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:29:33,085 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:29:33,085 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:29:33,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,085 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:29:33,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,086 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,087 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:29:33,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,094 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:29:33,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:29:33,095 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:29:33,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:29:33,096 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:29:33,096 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:29:33,097 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:29:33,097 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:29:33,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,097 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,099 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:29:33,100 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:29:33,179 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-12-26 13:29:33,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-12-26 13:29:33,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-12-26 13:29:33,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-12-26 13:29:33,180 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:29:33,181 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:29:33,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:29:33,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-12-26 13:29:33,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-12-26 13:29:33,186 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-12-26 13:29:33,187 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-12-26 13:29:33,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-12-26 13:29:33,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-12-26 13:29:33,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-12-26 13:29:33,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-12-26 13:29:33,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:29:33,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:29:33,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:29:33,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:29:33,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:29:33,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:29:33,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-12-26 13:29:33,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,204 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-12-26 13:29:33,204 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:29:33,205 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:29:33,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-12-26 13:29:33,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-12-26 13:29:33,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-12-26 13:29:33,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-12-26 13:29:33,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:29:33,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:29:33,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:29:33,207 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:29:33,208 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:29:33,208 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:29:33,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,209 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:29:33,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:29:33,220 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:29:33,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:29:33,225 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,228 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,230 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:29:33,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,232 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:29:33,232 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,233 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,235 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:29:33,236 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,237 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,238 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:29:33,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:29:33,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:29:33,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:29:33,245 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:29:33,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:29:33,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:29:33,247 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:29:33,247 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:29:33,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:29:33,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:29:33,250 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,251 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:29:33,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:29:33,254 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,255 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:29:33,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:29:33,262 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,262 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:29:33,265 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:29:33,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:29:33,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:29:33,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:29:33,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:29:33,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:29:33,271 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:29:33,271 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:29:33,272 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:29:33,272 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,273 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:29:33,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:29:33,275 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:29:33,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:29:33,280 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,280 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:29:33,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:29:33,283 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,284 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:29:33,287 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,288 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:29:33,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:29:33,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:29:33,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:29:33,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:29:33,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:29:33,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:29:33,298 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:29:33,298 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:29:33,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:29:33,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:29:33,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,304 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:29:33,305 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,305 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:29:33,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:29:33,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:29:33,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:29:33,309 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,310 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:29:33,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:29:33,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,313 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:29:33,313 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,314 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:29:33,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:29:33,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:29:33,317 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,318 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:29:33,320 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:29:33,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:29:33,323 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,323 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,325 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:29:33,328 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,328 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:29:33,332 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,333 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:29:33,336 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,336 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,338 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:29:33,339 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,339 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,339 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,340 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,341 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,348 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:29:33,348 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,349 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,349 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,350 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:29:33,351 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,351 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,351 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:29:33,352 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:29:33,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:29:33,353 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:29:33,354 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:29:33,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:29:33,355 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:33,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-12-26 13:29:33,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,356 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-12-26 13:29:33,356 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-12-26 13:29:33,357 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-12-26 13:29:33,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-12-26 13:29:33,357 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-12-26 13:29:33,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-12-26 13:29:33,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-12-26 13:29:33,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:33,358 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:33,358 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-12-26 13:29:33,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:29:33,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-12-26 13:29:33,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,359 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-12-26 13:29:33,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-12-26 13:29:33,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:29:33,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,360 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-12-26 13:29:33,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,361 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-12-26 13:29:33,362 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-12-26 13:29:33,363 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:29:33,363 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:29:33,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-12-26 13:29:33,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-12-26 13:29:33,363 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-12-26 13:29:33,364 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-12-26 13:29:33,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-12-26 13:29:33,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-12-26 13:29:33,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:29:33,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:29:33,365 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:29:33,366 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:29:33,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-12-26 13:29:33,366 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-12-26 13:29:33,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-12-26 13:29:33,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:29:33,367 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-12-26 13:29:33,367 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-12-26 13:29:33,367 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-12-26 13:29:33,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-12-26 13:29:33,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-12-26 13:29:33,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-12-26 13:29:33,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-12-26 13:29:33,368 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:29:33,369 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:29:33,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:29:33,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-12-26 13:29:33,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:29:33,370 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:29:33,373 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2017-12-26 13:29:33,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:29:33,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,374 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2017-12-26 13:29:33,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2017-12-26 13:29:33,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2017-12-26 13:29:33,376 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2017-12-26 13:29:33,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:29:33,377 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:29:33,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:29:33,378 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:29:33,378 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2017-12-26 13:29:33,378 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2017-12-26 13:29:33,380 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2017-12-26 13:29:33,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2017-12-26 13:29:33,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2017-12-26 13:29:33,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2017-12-26 13:29:33,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2017-12-26 13:29:33,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2017-12-26 13:29:33,381 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2017-12-26 13:29:33,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2017-12-26 13:29:33,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:29:33,382 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:29:33,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:29:33,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:29:33,383 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:29:33,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2017-12-26 13:29:33,384 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:29:33,386 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:29:33,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:29:33,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-12-26 13:29:33,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,387 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-12-26 13:29:33,388 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-12-26 13:29:33,388 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-12-26 13:29:33,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-12-26 13:29:33,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-12-26 13:29:33,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-12-26 13:29:33,389 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-12-26 13:29:33,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:29:33,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:29:33,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:29:33,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:29:33,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:29:33,391 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:29:33,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:29:33,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:29:33,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:29:33,392 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:29:33,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:33,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:33,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:33,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:33,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:29:33,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:29:33,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:29:33,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:29:33,395 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:29:33,395 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2017-12-26 13:29:33,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:29:33,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2017-12-26 13:29:33,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2017-12-26 13:29:33,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2017-12-26 13:29:33,396 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2017-12-26 13:29:33,397 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2017-12-26 13:29:33,397 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2017-12-26 13:29:33,397 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:29:33,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:29:33,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:29:33,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:29:33,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:29:33,430 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2017-12-26 13:29:33,434 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2017-12-26 13:29:33,438 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:29:33,439 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:29:33,439 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:29:33,439 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:29:33,440 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:29:33,440 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:29:33,440 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:29:33,441 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:29:33,441 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:29:33,442 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:29:33,442 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:29:33,443 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:29:33,443 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:29:33,443 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:29:33,444 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:29:33,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:29:33,446 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2017-12-26 13:29:33,446 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:29:33,446 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:29:33,447 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:29:33,447 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2017-12-26 13:29:33,447 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:29:33,449 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:29:33,450 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:29:33,450 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:29:33,451 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-12-26 13:29:33,452 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:29:33,452 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:29:33,453 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:29:33,453 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:29:33,453 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:29:33,454 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2017-12-26 13:29:33,454 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2017-12-26 13:29:33,552 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2017-12-26 13:29:33,831 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:29:33,831 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2017-12-26 13:29:33,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2017-12-26 13:29:33,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2017-12-26 13:29:33,832 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2017-12-26 13:29:33,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:29:33,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2017-12-26 13:29:33,833 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2017-12-26 13:29:33,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:29:33,838 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:29:33,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:29:33,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:29:33,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:29:33,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:29:33,842 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:29:33,843 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:29:33,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2017-12-26 13:29:33,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:29:33,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:33,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:29:33,847 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2017-12-26 13:29:33,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:29:33,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:29:33,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:29:33,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:29:33,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:33,944 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:33,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:33,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:33,948 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:33,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2017-12-26 13:29:33,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:29:33,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:29:33,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:29:33,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:29:33,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:29:33,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2017-12-26 13:29:33,959 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-12-26 13:29:33,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:29:33,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-12-26 13:29:33,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:29:33,961 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:29:37,851 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:29:37,852 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:29:37,852 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:29:37,852 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-12-26 13:29:37,852 TRACE [8] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-12-26 13:29:37,854 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:37,854 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:37,854 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:37,854 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:37,857 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:37,857 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:37,858 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:37,859 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:29:37,859 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:29:37,859 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:29:37,859 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:29:37,866 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:29:38,003 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-12-26 13:29:38,003 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-12-26 13:29:38,004 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-12-26 13:29:42,959 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:29:42,959 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:29:42,960 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:29:42,960 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:29:59,787 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:29:59,787 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:29:59,787 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:29:59,787 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:30:26,531 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:30:26,531 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:30:26,531 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:30:26,531 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:31:11,056 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:31:11,056 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:31:11,056 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:31:11,056 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:38:01,818 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-12-26 13:38:01,918 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-12-26 13:38:01,932 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-12-26 13:38:01,932 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-12-26 13:38:01,937 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-12-26 13:38:01,937 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-12-26 13:38:01,937 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-12-26 13:38:01,938 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-12-26 13:38:02,657 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-12-26 13:38:02,660 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-12-26 13:38:02,670 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-12-26 13:38:02,704 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:38:02,727 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:38:02,790 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:38:02,797 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:38:02,855 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:38:02,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:38:03,006 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:38:03,017 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:38:03,019 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:38:03,020 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:38:03,020 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:38:03,021 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:38:03,021 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:38:03,021 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:38:03,022 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:38:03,022 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:38:03,022 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:38:03,022 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:38:03,024 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:38:03,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:38:03,025 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-12-26 13:38:03,025 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:38:03,027 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:38:03,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:38:03,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-12-26 13:38:03,028 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:38:03,042 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:38:03,045 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:38:03,049 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:38:03,052 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-12-26 13:38:03,054 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:38:03,055 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:38:03,057 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:38:03,060 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:38:03,062 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-12-26 13:38:03,063 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-12-26 13:38:03,064 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-12-26 13:38:03,065 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-12-26 13:38:03,065 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-12-26 13:38:03,184 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-12-26 13:38:03,187 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-12-26 13:38:03,187 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-12-26 13:38:03,187 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-12-26 13:38:03,188 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-12-26 13:38:03,188 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-12-26 13:38:03,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:38:03,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:38:03,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,205 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-12-26 13:38:03,216 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-12-26 13:38:03,218 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,218 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-12-26 13:38:03,219 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-12-26 13:38:03,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-12-26 13:38:03,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-12-26 13:38:03,229 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:38:03,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:38:03,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:38:03,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-12-26 13:38:03,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:38:03,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-12-26 13:38:03,246 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:38:03,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:38:03,247 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,251 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,252 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-12-26 13:38:03,253 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:38:03,253 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:38:03,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-12-26 13:38:03,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:38:03,254 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:38:03,255 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:38:03,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:38:03,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:38:03,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-12-26 13:38:03,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-12-26 13:38:03,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-12-26 13:38:03,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:38:03,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-12-26 13:38:03,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-12-26 13:38:03,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-12-26 13:38:03,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:38:03,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-12-26 13:38:03,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:38:03,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,261 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:38:03,261 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:38:03,261 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:38:03,261 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:38:03,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-12-26 13:38:03,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-12-26 13:38:03,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-12-26 13:38:03,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:38:03,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-12-26 13:38:03,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:38:03,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:38:03,265 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:38:03,266 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:38:03,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:38:03,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:38:03,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-12-26 13:38:03,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:38:03,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:38:03,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:38:03,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-12-26 13:38:03,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-12-26 13:38:03,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-12-26 13:38:03,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-12-26 13:38:03,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:38:03,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:38:03,270 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:38:03,270 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:38:03,270 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:38:03,270 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-12-26 13:38:03,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-12-26 13:38:03,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-12-26 13:38:03,271 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-12-26 13:38:03,272 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-12-26 13:38:03,272 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-12-26 13:38:03,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:38:03,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:38:03,275 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:38:03,276 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-12-26 13:38:03,276 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-12-26 13:38:03,277 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-12-26 13:38:03,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:38:03,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-12-26 13:38:03,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-12-26 13:38:03,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:38:03,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:38:03,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-12-26 13:38:03,333 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-12-26 13:38:03,333 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-12-26 13:38:03,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-12-26 13:38:03,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-12-26 13:38:03,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-12-26 13:38:03,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:38:03,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:38:03,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:38:03,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:38:03,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:38:03,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:38:03,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:38:03,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-12-26 13:38:03,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:38:03,336 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-12-26 13:38:03,390 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,393 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,394 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:38:03,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:38:03,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:38:03,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:38:03,396 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:38:03,397 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:38:03,397 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:38:03,397 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:38:03,398 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:38:03,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,398 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,399 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:38:03,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,421 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:38:03,422 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:38:03,423 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:38:03,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:38:03,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:38:03,424 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:38:03,425 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:38:03,425 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:38:03,425 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:38:03,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,425 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,426 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:38:03,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,427 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:38:03,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,428 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:38:03,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:38:03,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:38:03,429 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:38:03,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:38:03,430 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:38:03,430 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:38:03,430 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:38:03,430 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,431 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:38:03,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,432 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:38:03,440 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:38:03,441 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:38:03,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:38:03,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:38:03,442 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:38:03,443 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:38:03,443 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:38:03,443 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:38:03,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,443 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:38:03,444 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:38:03,504 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-12-26 13:38:03,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-12-26 13:38:03,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-12-26 13:38:03,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-12-26 13:38:03,504 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:38:03,505 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:38:03,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:38:03,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-12-26 13:38:03,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,510 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-12-26 13:38:03,511 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-12-26 13:38:03,511 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:38:03,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:38:03,523 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:38:03,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,524 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:38:03,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:38:03,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:38:03,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,525 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-12-26 13:38:03,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,526 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,527 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,527 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-12-26 13:38:03,527 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:38:03,528 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:38:03,528 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-12-26 13:38:03,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-12-26 13:38:03,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-12-26 13:38:03,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-12-26 13:38:03,529 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:38:03,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:38:03,530 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:38:03,530 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:38:03,530 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:38:03,531 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:38:03,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,531 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,532 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:38:03,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,534 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:38:03,534 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,535 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,535 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:38:03,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,537 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:38:03,538 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,539 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,539 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,540 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:38:03,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,541 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:38:03,542 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,542 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,543 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,545 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:38:03,546 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,546 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,547 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:38:03,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:38:03,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:38:03,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:38:03,552 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:38:03,553 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:38:03,553 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:38:03,553 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:38:03,554 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:38:03,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:38:03,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:38:03,557 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,557 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,557 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,558 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:38:03,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,559 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:38:03,560 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,560 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,560 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,561 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:38:03,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,562 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:38:03,563 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,563 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,563 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,564 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,565 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,566 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:38:03,566 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,566 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,567 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:38:03,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:38:03,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:38:03,570 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:38:03,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:38:03,571 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:38:03,572 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:38:03,572 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:38:03,573 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:38:03,573 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,574 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:38:03,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,575 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,576 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:38:03,576 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,577 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,577 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,578 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:38:03,579 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,580 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:38:03,580 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,581 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,581 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,582 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:38:03,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,583 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,584 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:38:03,584 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,585 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,585 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,586 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,587 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,588 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:38:03,589 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,589 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,590 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,591 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:38:03,592 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,593 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:38:03,594 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:38:03,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:38:03,595 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:38:03,596 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:38:03,596 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:38:03,597 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:38:03,597 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:38:03,598 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,599 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:38:03,600 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:38:03,601 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,603 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,604 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:38:03,605 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,605 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,606 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:38:03,607 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:38:03,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:38:03,608 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,609 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:38:03,610 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,610 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,611 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:38:03,612 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:38:03,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,613 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,614 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:38:03,614 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,615 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,616 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:38:03,617 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:38:03,618 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,619 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:38:03,620 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,620 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,621 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:38:03,622 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:38:03,624 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,625 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:38:03,626 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,626 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,628 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,629 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:38:03,631 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,632 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,634 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,635 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:38:03,636 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,637 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,638 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:38:03,640 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,641 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,641 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,642 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,643 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,644 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:38:03,644 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,645 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,645 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,646 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,653 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,654 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:38:03,654 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,654 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,655 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,656 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,657 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:38:03,657 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,657 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:38:03,658 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:38:03,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,659 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:38:03,659 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:38:03,660 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:38:03,660 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:38:03,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:03,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-12-26 13:38:03,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,661 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-12-26 13:38:03,662 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-12-26 13:38:03,662 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-12-26 13:38:03,662 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-12-26 13:38:03,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-12-26 13:38:03,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-12-26 13:38:03,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-12-26 13:38:03,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:03,663 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:03,663 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-12-26 13:38:03,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:38:03,664 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-12-26 13:38:03,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,665 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-12-26 13:38:03,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-12-26 13:38:03,666 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:38:03,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-12-26 13:38:03,667 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:03,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:03,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:03,668 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:03,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:03,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:03,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:03,669 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:03,669 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-12-26 13:38:03,670 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-12-26 13:38:03,670 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:38:03,670 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:38:03,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-12-26 13:38:03,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-12-26 13:38:03,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-12-26 13:38:03,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-12-26 13:38:03,671 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:38:03,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-12-26 13:38:03,672 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-12-26 13:38:03,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-12-26 13:38:03,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-12-26 13:38:03,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-12-26 13:38:03,673 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-12-26 13:38:03,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:03,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:03,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:03,675 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:03,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-12-26 13:38:03,676 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-12-26 13:38:03,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-12-26 13:38:03,677 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:38:03,677 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-12-26 13:38:03,678 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:38:03,682 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:38:03,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:38:03,683 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-12-26 13:38:03,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:38:03,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:38:03,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2017-12-26 13:38:03,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:38:03,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2017-12-26 13:38:03,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2017-12-26 13:38:03,695 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2017-12-26 13:38:03,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,696 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2017-12-26 13:38:03,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:38:03,697 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:38:03,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:38:03,698 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:38:03,699 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2017-12-26 13:38:03,699 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2017-12-26 13:38:03,701 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2017-12-26 13:38:03,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2017-12-26 13:38:03,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2017-12-26 13:38:03,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2017-12-26 13:38:03,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2017-12-26 13:38:03,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2017-12-26 13:38:03,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2017-12-26 13:38:03,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2017-12-26 13:38:03,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:38:03,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:38:03,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:38:03,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:38:03,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:38:03,705 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2017-12-26 13:38:03,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:38:03,706 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:38:03,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:38:03,708 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-12-26 13:38:03,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:03,709 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-12-26 13:38:03,709 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-12-26 13:38:03,710 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:03,710 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-12-26 13:38:03,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-12-26 13:38:03,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-12-26 13:38:03,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-12-26 13:38:03,711 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-12-26 13:38:03,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:38:03,712 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:38:03,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:38:03,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:38:03,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:38:03,713 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:38:03,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:38:03,714 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:38:03,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:38:03,715 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:38:03,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:03,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:03,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:03,716 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:03,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:03,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:03,717 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:03,718 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:03,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:38:03,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2017-12-26 13:38:03,718 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:38:03,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2017-12-26 13:38:03,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2017-12-26 13:38:03,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2017-12-26 13:38:03,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2017-12-26 13:38:03,719 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2017-12-26 13:38:03,720 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2017-12-26 13:38:03,720 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:38:03,735 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:38:03,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:38:03,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:38:03,737 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:38:03,739 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2017-12-26 13:38:03,746 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2017-12-26 13:38:03,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:38:03,748 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:38:03,748 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:38:03,749 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:38:03,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:38:03,749 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:38:03,750 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:38:03,750 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:38:03,750 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:38:03,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:38:03,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:38:03,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:38:03,751 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:38:03,752 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:38:03,752 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:38:03,752 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:38:03,753 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2017-12-26 13:38:03,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:38:03,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:38:03,753 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:38:03,754 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2017-12-26 13:38:03,754 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:38:03,756 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:38:03,757 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:38:03,759 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:38:03,763 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-12-26 13:38:03,764 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:38:03,764 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:38:03,764 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:38:03,765 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:38:03,765 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:38:03,766 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2017-12-26 13:38:03,766 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2017-12-26 13:38:03,804 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2017-12-26 13:38:04,007 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:38:04,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2017-12-26 13:38:04,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2017-12-26 13:38:04,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2017-12-26 13:38:04,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2017-12-26 13:38:04,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:38:04,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2017-12-26 13:38:04,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2017-12-26 13:38:04,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:38:04,011 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:38:04,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:38:04,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:38:04,012 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:38:04,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:38:04,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:38:04,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:38:04,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2017-12-26 13:38:04,015 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:38:04,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:04,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:38:04,016 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2017-12-26 13:38:04,058 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:04,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:04,063 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:04,064 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:04,066 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:04,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:04,067 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:04,068 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:04,070 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:04,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2017-12-26 13:38:04,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:38:04,071 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:38:04,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:38:04,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:38:04,072 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:38:04,073 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2017-12-26 13:38:04,082 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-12-26 13:38:04,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:38:04,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-12-26 13:38:04,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:38:04,083 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:38:08,830 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:38:08,830 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:38:08,830 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:38:08,831 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-12-26 13:38:08,831 TRACE [8] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-12-26 13:38:08,832 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:08,832 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:08,832 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:08,832 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:08,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:08,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:08,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:08,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:08,840 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:08,841 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:08,841 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:08,841 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:08,842 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:38:08,842 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:38:08,842 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-12-26 13:38:08,850 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-12-26 13:38:08,851 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:38:08,851 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:38:08,851 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:38:08,898 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-12-26 13:38:08,899 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-12-26 13:38:08,899 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-12-26 13:38:27,984 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:38:27,985 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:38:27,985 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:38:27,985 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:38:38,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:38:38,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:38:38,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:38:38,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:38:38,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:38,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:38,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:38,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:38,295 ERROR [1] [DS.AFP.Common.Core.LoggerFacade] [Error] [System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 DS.AFP.Framework.WPF.Browser.DownloadHandler.<OnBeforeDownload>b__5_0() 位置 D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Source\BizApp\DS_AFP-N\DS.AFP.Framework.WPF\Controls\Browser\Download\DownloadHandler.cs:行号 58]
2017-12-26 13:38:52,785 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:38:52,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:38:52,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:38:52,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:38:52,930 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [WebBrowserManager SendMessageToJs:aaaaaaaaaaaaa]
2017-12-26 13:40:54,191 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-12-26 13:40:54,266 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-12-26 13:40:54,275 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-12-26 13:40:54,276 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-12-26 13:40:54,277 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-12-26 13:40:54,277 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-12-26 13:40:54,278 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-12-26 13:40:54,278 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-12-26 13:40:54,428 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-12-26 13:40:54,428 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-12-26 13:40:54,433 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-12-26 13:40:54,462 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:40:54,488 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:40:54,520 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:40:54,523 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:40:54,531 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:40:54,725 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:40:54,734 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:40:54,739 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:40:54,741 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:40:54,742 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:40:54,743 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:40:54,743 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:40:54,744 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:40:54,744 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:40:54,744 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:40:54,745 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:40:54,745 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:40:54,745 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:40:54,746 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:40:54,746 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:40:54,747 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-12-26 13:40:54,747 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:40:54,750 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:40:54,750 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:40:54,750 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-12-26 13:40:54,751 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:40:54,761 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:40:54,763 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:40:54,765 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:40:54,770 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-12-26 13:40:54,776 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:40:54,777 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:40:54,779 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:40:54,780 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:40:54,782 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-12-26 13:40:54,782 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-12-26 13:40:54,783 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-12-26 13:40:54,784 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-12-26 13:40:54,784 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-12-26 13:40:54,809 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-12-26 13:40:54,811 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-12-26 13:40:54,812 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-12-26 13:40:54,812 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-12-26 13:40:54,813 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-12-26 13:40:54,813 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-12-26 13:40:54,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:40:54,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:40:54,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-12-26 13:40:54,838 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-12-26 13:40:54,839 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:54,839 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-12-26 13:40:54,840 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-12-26 13:40:54,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-12-26 13:40:54,847 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-12-26 13:40:54,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:40:54,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:40:54,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:40:54,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-12-26 13:40:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:40:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-12-26 13:40:54,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:40:54,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:40:54,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:54,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:54,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:54,864 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:54,866 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-12-26 13:40:54,866 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:40:54,866 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:40:54,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-12-26 13:40:54,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-12-26 13:40:54,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:40:54,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:40:54,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:40:54,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:40:54,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:40:54,869 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:40:54,869 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:40:54,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:40:54,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-12-26 13:40:54,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-12-26 13:40:54,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-12-26 13:40:54,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:40:54,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-12-26 13:40:54,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-12-26 13:40:54,871 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-12-26 13:40:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:40:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-12-26 13:40:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:40:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:40:54,874 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:40:54,874 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:40:54,874 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:40:54,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:40:54,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-12-26 13:40:54,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:40:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:40:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:40:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-12-26 13:40:54,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-12-26 13:40:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-12-26 13:40:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:40:54,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-12-26 13:40:54,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:40:54,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:40:54,879 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:40:54,880 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:40:54,880 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:40:54,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:40:54,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-12-26 13:40:54,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:40:54,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:40:54,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:40:54,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-12-26 13:40:54,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-12-26 13:40:54,885 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-12-26 13:40:54,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,886 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-12-26 13:40:54,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:40:54,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:40:54,890 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:40:54,890 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:40:54,891 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:40:54,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-12-26 13:40:54,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-12-26 13:40:54,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-12-26 13:40:54,892 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-12-26 13:40:54,892 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-12-26 13:40:54,893 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-12-26 13:40:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:40:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:40:54,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:40:54,895 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-12-26 13:40:54,895 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-12-26 13:40:54,896 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-12-26 13:40:54,934 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:40:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-12-26 13:40:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-12-26 13:40:54,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:40:54,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:40:54,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:54,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-12-26 13:40:54,937 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-12-26 13:40:54,938 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:54,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-12-26 13:40:54,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-12-26 13:40:54,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-12-26 13:40:54,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-12-26 13:40:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:40:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:40:54,939 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-12-26 13:40:54,940 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:40:54,941 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-12-26 13:40:54,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:40:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:40:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:40:55,005 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:40:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:40:55,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:40:55,006 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:40:55,006 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:40:55,007 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:40:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,008 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:40:55,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:40:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:40:55,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:40:55,034 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:40:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:40:55,035 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:40:55,035 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:40:55,035 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:40:55,036 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:40:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,036 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:40:55,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,037 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:40:55,038 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:40:55,039 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:40:55,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:40:55,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:40:55,040 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:40:55,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:40:55,041 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:40:55,041 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:40:55,041 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:40:55,042 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,043 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,050 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:40:55,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,051 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:40:55,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:40:55,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:40:55,052 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:40:55,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:40:55,053 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:40:55,053 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:40:55,053 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:40:55,053 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:40:55,054 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:40:55,116 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-12-26 13:40:55,116 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:40:55,117 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:40:55,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:40:55,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:40:55,118 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:40:55,122 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:40:55,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-12-26 13:40:55,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,123 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-12-26 13:40:55,123 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-12-26 13:40:55,124 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-12-26 13:40:55,124 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-12-26 13:40:55,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-12-26 13:40:55,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-12-26 13:40:55,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-12-26 13:40:55,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:40:55,125 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:40:55,135 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:40:55,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,136 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:40:55,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:40:55,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:40:55,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,137 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-12-26 13:40:55,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,138 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,139 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,139 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-12-26 13:40:55,139 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:40:55,140 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:40:55,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-12-26 13:40:55,140 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-12-26 13:40:55,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-12-26 13:40:55,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-12-26 13:40:55,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:40:55,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:40:55,141 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:40:55,142 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:40:55,142 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:40:55,143 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:40:55,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,143 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:40:55,145 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,146 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:40:55,146 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,147 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,147 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:40:55,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,149 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:40:55,149 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,150 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,150 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:40:55,151 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,152 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:40:55,152 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,152 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,153 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,155 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:40:55,155 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,156 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,156 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,157 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,159 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:40:55,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,160 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:40:55,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:40:55,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:40:55,161 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:40:55,162 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:40:55,162 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:40:55,162 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:40:55,163 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:40:55,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,163 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:40:55,164 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,165 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:40:55,166 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,166 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,166 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,167 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:40:55,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,168 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:40:55,168 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,169 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,169 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:40:55,170 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,171 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:40:55,171 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,172 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,172 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,173 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,174 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:40:55,175 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,175 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,175 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,176 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:40:55,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,177 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:40:55,178 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:40:55,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:40:55,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:40:55,179 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:40:55,180 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:40:55,180 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:40:55,181 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:40:55,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,182 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:40:55,183 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,184 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:40:55,185 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,185 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,186 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,187 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:40:55,188 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:40:55,189 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,190 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,190 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,191 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:40:55,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,192 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,193 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:40:55,193 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,193 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,194 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,195 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,196 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,197 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:40:55,197 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,198 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,198 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,199 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:40:55,200 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,201 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:40:55,202 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:40:55,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:40:55,203 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:40:55,204 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:40:55,204 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:40:55,205 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:40:55,205 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:40:55,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,206 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:40:55,207 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:40:55,208 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,211 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:40:55,212 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,213 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,213 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,214 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:40:55,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:40:55,215 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:40:55,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,217 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:40:55,218 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,220 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,220 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,221 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:40:55,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:40:55,222 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,223 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,224 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:40:55,224 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,225 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,225 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,226 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:40:55,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:40:55,227 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,228 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:40:55,230 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,230 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,231 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,233 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:40:55,234 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:40:55,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,236 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,237 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:40:55,238 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,238 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,239 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,240 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,241 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,243 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,244 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:40:55,245 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,246 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,248 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,249 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,250 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,252 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,253 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,254 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:40:55,255 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,255 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,256 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,257 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,258 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,259 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,260 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:40:55,261 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,262 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,262 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,263 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,264 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,265 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:40:55,265 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,266 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,266 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,267 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,268 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,274 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:40:55,275 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,276 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,276 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,277 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:40:55,278 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,279 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,279 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:40:55,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:40:55,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,280 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:40:55,281 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:40:55,281 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:40:55,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:40:55,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:55,283 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-12-26 13:40:55,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,284 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-12-26 13:40:55,284 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-12-26 13:40:55,285 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-12-26 13:40:55,285 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-12-26 13:40:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-12-26 13:40:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-12-26 13:40:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-12-26 13:40:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:55,286 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:55,287 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-12-26 13:40:55,287 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:40:55,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-12-26 13:40:55,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-12-26 13:40:55,288 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-12-26 13:40:55,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:40:55,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-12-26 13:40:55,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:40:55,291 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:40:55,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:40:55,292 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:40:55,292 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-12-26 13:40:55,292 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-12-26 13:40:55,292 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:40:55,293 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:40:55,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-12-26 13:40:55,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-12-26 13:40:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-12-26 13:40:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-12-26 13:40:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-12-26 13:40:55,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-12-26 13:40:55,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:40:55,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:40:55,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:40:55,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:40:55,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-12-26 13:40:55,297 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-12-26 13:40:55,298 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-12-26 13:40:55,298 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:40:55,298 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-12-26 13:40:55,299 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-12-26 13:40:55,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-12-26 13:40:55,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-12-26 13:40:55,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-12-26 13:40:55,299 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-12-26 13:40:55,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-12-26 13:40:55,300 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:40:55,301 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:40:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:40:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-12-26 13:40:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:40:55,302 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:40:55,306 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2017-12-26 13:40:55,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:40:55,307 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,308 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2017-12-26 13:40:55,309 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2017-12-26 13:40:55,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2017-12-26 13:40:55,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2017-12-26 13:40:55,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:40:55,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:40:55,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:40:55,312 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:40:55,312 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2017-12-26 13:40:55,312 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2017-12-26 13:40:55,314 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2017-12-26 13:40:55,314 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2017-12-26 13:40:55,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2017-12-26 13:40:55,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2017-12-26 13:40:55,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2017-12-26 13:40:55,315 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2017-12-26 13:40:55,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2017-12-26 13:40:55,316 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2017-12-26 13:40:55,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:40:55,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:40:55,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:40:55,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:40:55,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:40:55,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2017-12-26 13:40:55,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:40:55,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:40:55,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:40:55,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-12-26 13:40:55,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-12-26 13:40:55,323 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-12-26 13:40:55,325 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-12-26 13:40:55,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-12-26 13:40:55,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-12-26 13:40:55,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-12-26 13:40:55,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-12-26 13:40:55,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:40:55,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:40:55,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:40:55,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:40:55,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:40:55,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:40:55,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:40:55,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:40:55,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:40:55,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:40:55,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:55,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:55,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:55,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:55,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:40:55,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:40:55,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:40:55,335 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:40:55,335 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:40:55,335 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2017-12-26 13:40:55,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:40:55,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2017-12-26 13:40:55,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2017-12-26 13:40:55,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2017-12-26 13:40:55,337 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2017-12-26 13:40:55,337 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2017-12-26 13:40:55,337 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2017-12-26 13:40:55,337 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:40:55,371 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:40:55,379 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:40:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:40:55,380 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:40:55,383 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2017-12-26 13:40:55,387 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2017-12-26 13:40:55,389 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:40:55,390 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:40:55,390 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:40:55,391 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:40:55,391 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:40:55,392 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:40:55,392 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:40:55,392 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:40:55,392 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:40:55,393 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:40:55,393 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:40:55,393 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:40:55,394 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:40:55,394 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:40:55,394 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:40:55,395 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:40:55,395 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2017-12-26 13:40:55,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:40:55,395 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:40:55,396 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:40:55,396 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2017-12-26 13:40:55,396 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:40:55,399 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:40:55,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:40:55,401 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:40:55,402 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-12-26 13:40:55,407 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:40:55,409 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:40:55,410 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:40:55,411 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:40:55,412 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:40:55,412 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2017-12-26 13:40:55,413 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2017-12-26 13:40:55,507 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2017-12-26 13:40:55,844 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:40:55,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2017-12-26 13:40:55,844 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2017-12-26 13:40:55,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2017-12-26 13:40:55,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2017-12-26 13:40:55,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:40:55,845 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2017-12-26 13:40:55,846 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2017-12-26 13:40:55,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:40:55,848 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:40:55,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:40:55,849 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:40:55,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:40:55,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:40:55,850 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:40:55,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:40:55,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2017-12-26 13:40:55,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:40:55,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:55,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:40:55,856 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2017-12-26 13:40:55,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:40:55,911 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:40:55,912 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:40:55,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:40:55,916 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:55,917 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:55,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:55,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:55,921 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:55,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2017-12-26 13:40:55,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:40:55,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:40:55,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:40:55,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:40:55,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:40:55,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2017-12-26 13:40:55,932 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-12-26 13:40:55,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:40:55,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-12-26 13:40:55,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:40:55,932 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:40:56,279 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:40:56,283 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:40:56,284 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:40:56,284 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-12-26 13:40:56,284 TRACE [8] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-12-26 13:40:56,285 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:56,286 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:56,286 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:56,286 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:56,289 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:56,289 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:56,289 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:56,289 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:56,289 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:56,290 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:56,290 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:56,290 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:56,291 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:40:56,291 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:40:56,291 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:40:56,298 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:40:56,299 DEBUG [8] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:40:56,299 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-12-26 13:40:56,299 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-12-26 13:40:56,299 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-12-26 13:40:56,299 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-12-26 13:40:56,300 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:40:56,300 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:40:56,300 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:40:56,424 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-12-26 13:40:56,425 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-12-26 13:40:56,425 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-12-26 13:41:00,840 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:00,840 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:00,840 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:00,840 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:02,533 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:02,534 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:02,534 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:02,534 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:03,301 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:03,302 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:03,302 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:03,302 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:03,886 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:03,886 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:03,886 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:03,886 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:04,424 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:04,424 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:04,424 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:04,425 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:06,440 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:06,440 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:06,440 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:06,440 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:07,304 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:07,305 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:07,305 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:07,305 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:08,151 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:08,151 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:08,151 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:08,151 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:08,869 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:08,869 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:08,870 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:08,870 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:09,551 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:09,552 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:09,552 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:09,552 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:11,110 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:11,111 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:11,111 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:11,111 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:11,903 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:11,904 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:11,904 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:11,904 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:12,921 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:12,921 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:12,922 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:12,922 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:13,700 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:13,700 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:13,701 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:13,701 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:14,421 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:14,421 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:14,422 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:14,422 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:15,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:15,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:15,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:15,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:16,537 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:16,537 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:16,537 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:16,537 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:17,233 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:17,233 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:17,233 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:17,233 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:17,888 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:17,889 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:17,889 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:17,889 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:18,469 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:18,469 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:18,469 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:18,469 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:19,531 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:19,532 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:19,532 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:19,532 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:20,532 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:20,533 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:20,533 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:20,533 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:21,185 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:21,185 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:21,185 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:21,185 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:21,909 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:21,909 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:21,909 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:21,909 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:22,652 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:22,652 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:22,652 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:22,652 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:23,748 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:23,748 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:23,748 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:23,748 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:24,432 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:24,432 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:24,432 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:24,432 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:25,122 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:25,122 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:25,122 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:25,122 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:26,352 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:26,352 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:26,352 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:26,352 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:29,078 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:29,080 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:29,080 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:29,080 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:30,120 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:30,120 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:30,120 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:30,120 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:30,826 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:30,826 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:30,826 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:30,826 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:31,626 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:31,627 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:31,627 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:31,628 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:32,498 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:32,498 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:32,498 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:32,498 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:33,251 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:33,251 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:33,252 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:33,252 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:34,399 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:34,400 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:34,400 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:34,400 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:35,139 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:35,139 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:35,139 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:35,139 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:35,895 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:35,896 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:35,896 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:35,896 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:36,626 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:36,626 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:36,626 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:36,627 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:37,390 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:37,390 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:37,390 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:37,390 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:38,203 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:38,203 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:38,204 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:38,204 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:38,983 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:38,983 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:38,983 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:38,983 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:41:39,740 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:41:39,740 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:41:39,741 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:41:39,741 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:44:11,363 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器开始启动]
2017-12-26 13:44:11,405 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform began to load and initialize each plug-in ]
2017-12-26 13:44:11,413 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Log creation success.]
2017-12-26 13:44:11,414 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the module directory to start.]
2017-12-26 13:44:11,416 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create module directory end.]
2017-12-26 13:44:11,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory.]
2017-12-26 13:44:11,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration module directory end.]
2017-12-26 13:44:11,417 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre initialization module.]
2017-12-26 13:44:11,860 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [End of pre initialization module.]
2017-12-26 13:44:11,862 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create the Spring container to start.]
2017-12-26 13:44:11,868 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'spring.root']
2017-12-26 13:44:11,886 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:44:11,910 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:44:11,959 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Data.Config.DatabaseNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:44:11,963 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Transaction.Config.TxNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:44:12,014 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [Spring.Aop.Config.AopNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:44:12,163 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Communication.WCF.Config.WcfNamespaceParser] using constructor [Void .ctor()]]
2017-12-26 13:44:12,170 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:44:12,179 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:44:12,183 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:44:12,185 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:44:12,186 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:44:12,186 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:44:12,187 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:44:12,187 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:44:12,188 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:44:12,188 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:44:12,188 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:44:12,188 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:44:12,189 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:44:12,189 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:44:12,190 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'spring.root'.]
2017-12-26 13:44:12,190 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:44:12,194 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:44:12,194 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:44:12,196 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [spring.root].]
2017-12-26 13:44:12,197 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:44:12,207 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:44:12,209 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [spring.root].]
2017-12-26 13:44:12,212 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:44:12,215 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No IMessageSource found with name 'messageSource' : using default 'StaticMessageSource : '.]
2017-12-26 13:44:12,216 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:44:12,217 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:44:12,218 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:44:12,219 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:44:12,220 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'spring.root'.]
2017-12-26 13:44:12,230 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'spring.root']
2017-12-26 13:44:12,231 DEBUG [1] [Spring.Context.Support.ContextRegistry] [GetContext] [Returning context 'Spring.Context.Support.XmlApplicationContext' registered under name 'spring.root'.]
2017-12-26 13:44:12,232 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Create Spring container end.]
2017-12-26 13:44:12,232 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container to start.]
2017-12-26 13:44:12,264 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure the container to start running.]
2017-12-26 13:44:12,266 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration container end run.]
2017-12-26 13:44:12,267 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure Spring container end.]
2017-12-26 13:44:12,267 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service loader to start.]
2017-12-26 13:44:12,267 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The allocation of the singleton service end loader.]
2017-12-26 13:44:12,268 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure adapter map area to start.]
2017-12-26 13:44:12,269 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:44:12,278 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:44:12,281 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionAdapterMappings' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionAdapterMappings]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,282 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionAdapterMappings'.]
2017-12-26 13:44:12,288 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionAdapterMappings] using constructor [Void .ctor()]]
2017-12-26 13:44:12,289 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionAdapterMappings' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,289 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'RegionAdapterMappings' to allow for resolving potential circular references]
2017-12-26 13:44:12,290 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionAdapterMappings']
2017-12-26 13:44:12,293 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionAdapterMappings']
2017-12-26 13:44:12,294 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionAdapterMappings']
2017-12-26 13:44:12,295 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'RegionAdapterMappings']
2017-12-26 13:44:12,296 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:44:12,297 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:44:12,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SelectorRegionAdapter => canonical name SelectorRegionAdapter]
2017-12-26 13:44:12,310 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:44:12,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SelectorRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.SelectorRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,311 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SelectorRegionAdapter'.]
2017-12-26 13:44:12,317 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:44:12,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:44:12,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionBehaviorFactory' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionBehaviorFactory]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,318 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,319 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,320 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionBehaviorFactory' via constructor to object named 'IServiceLocator']
2017-12-26 13:44:12,320 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionBehaviorFactory] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:44:12,321 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionBehaviorFactory' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:44:12,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionBehaviorFactory' to allow for resolving potential circular references]
2017-12-26 13:44:12,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionBehaviorFactory']
2017-12-26 13:44:12,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:44:12,321 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionBehaviorFactory']
2017-12-26 13:44:12,322 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionBehaviorFactory']
2017-12-26 13:44:12,323 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,324 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:44:12,324 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'SelectorRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:44:12,325 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.SelectorRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:44:12,325 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SelectorRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:44:12,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'SelectorRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:44:12,326 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SelectorRegionAdapter']
2017-12-26 13:44:12,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SelectorRegionAdapter']
2017-12-26 13:44:12,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SelectorRegionAdapter']
2017-12-26 13:44:12,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'SelectorRegionAdapter']
2017-12-26 13:44:12,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'SelectorRegionAdapter'.]
2017-12-26 13:44:12,327 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SelectorRegionAdapter]
2017-12-26 13:44:12,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ItemsControlRegionAdapter => canonical name ItemsControlRegionAdapter]
2017-12-26 13:44:12,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:44:12,328 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ItemsControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ItemsControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ItemsControlRegionAdapter'.]
2017-12-26 13:44:12,329 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:44:12,330 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:44:12,331 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ItemsControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:44:12,331 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ItemsControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:44:12,331 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ItemsControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:44:12,331 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ItemsControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ItemsControlRegionAdapter']
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ItemsControlRegionAdapter']
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ItemsControlRegionAdapter']
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ItemsControlRegionAdapter'.]
2017-12-26 13:44:12,332 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ItemsControlRegionAdapter]
2017-12-26 13:44:12,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ContentControlRegionAdapter => canonical name ContentControlRegionAdapter]
2017-12-26 13:44:12,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:44:12,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ContentControlRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.ContentControlRegionAdapter]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,333 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ContentControlRegionAdapter'.]
2017-12-26 13:44:12,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:44:12,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,334 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:44:12,334 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'ContentControlRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:44:12,334 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.ContentControlRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:44:12,336 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ContentControlRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:44:12,337 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ContentControlRegionAdapter' to allow for resolving potential circular references]
2017-12-26 13:44:12,342 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ContentControlRegionAdapter']
2017-12-26 13:44:12,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:44:12,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ContentControlRegionAdapter']
2017-12-26 13:44:12,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ContentControlRegionAdapter']
2017-12-26 13:44:12,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ContentControlRegionAdapter'.]
2017-12-26 13:44:12,343 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ContentControlRegionAdapter]
2017-12-26 13:44:12,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WindowRegionAdapter => canonical name WindowRegionAdapter]
2017-12-26 13:44:12,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WindowRegionAdapter' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,344 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WindowRegionAdapter'.]
2017-12-26 13:44:12,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:44:12,345 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,346 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:44:12,346 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WindowRegionAdapter' via constructor to object named 'IRegionBehaviorFactory']
2017-12-26 13:44:12,346 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.WindowRegionAdapter] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)]]
2017-12-26 13:44:12,346 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WindowRegionAdapter' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionBehaviorFactory)].]
2017-12-26 13:44:12,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WindowRegionAdapter']
2017-12-26 13:44:12,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WindowRegionAdapter']
2017-12-26 13:44:12,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WindowRegionAdapter']
2017-12-26 13:44:12,347 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WindowRegionAdapter]
2017-12-26 13:44:12,351 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configuration adapter map area end.]
2017-12-26 13:44:12,351 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Configure default behavior for the region to begin.]
2017-12-26 13:44:12,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionBehaviorFactory => canonical name IRegionBehaviorFactory]
2017-12-26 13:44:12,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,353 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionBehaviorFactory'.]
2017-12-26 13:44:12,354 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionBehaviorFactory]
2017-12-26 13:44:12,354 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the behavior of the default zone.]
2017-12-26 13:44:12,354 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Register frame exception type start.]
2017-12-26 13:44:12,355 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [The end of the abnormal type of registration framework.]
2017-12-26 13:44:12,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:44:12,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IShell']
2017-12-26 13:44:12,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IShell' with merged definition [RootObjectDefinition : Class [DS.AFP.WPF.App.MainWindow]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,507 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IShell'.]
2017-12-26 13:44:12,508 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:44:12,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:44:12,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IDsEnvironment' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.DsEnvironment]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,509 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IDsEnvironment'.]
2017-12-26 13:44:12,509 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.DsEnvironment] using constructor [Void .ctor()]]
2017-12-26 13:44:12,510 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IDsEnvironment' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IDsEnvironment' to allow for resolving potential circular references]
2017-12-26 13:44:12,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IDsEnvironment']
2017-12-26 13:44:12,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IDsEnvironment']
2017-12-26 13:44:12,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IDsEnvironment']
2017-12-26 13:44:12,511 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IDsEnvironment']
2017-12-26 13:44:12,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:44:12,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:44:12,512 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:44:12,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:44:12,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:44:12,513 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:44:12,513 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsEnvironment']
2017-12-26 13:44:12,513 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IShell' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:44:12,515 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WPF.App.MainWindow] using constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)]]
2017-12-26 13:44:12,627 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,630 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,631 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,632 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:44:12,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,633 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:44:12,636 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:44:12,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:44:12,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:44:12,637 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:44:12,637 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:44:12,638 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:44:12,638 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:44:12,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,639 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,640 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:44:12,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,684 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:44:12,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,685 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:44:12,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:44:12,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:44:12,686 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:44:12,687 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:44:12,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:44:12,687 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:44:12,687 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:44:12,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,688 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:44:12,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,689 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:44:12,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:44:12,690 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:44:12,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:44:12,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:44:12,691 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:44:12,691 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:44:12,691 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:44:12,692 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:44:12,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,692 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:44:12,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,693 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,694 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name DelayedRegionCreationBehavior => canonical name DelayedRegionCreationBehavior]
2017-12-26 13:44:12,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DelayedRegionCreationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,701 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DelayedRegionCreationBehavior'.]
2017-12-26 13:44:12,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name RegionAdapterMappings => canonical name RegionAdapterMappings]
2017-12-26 13:44:12,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'RegionAdapterMappings'.]
2017-12-26 13:44:12,702 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'RegionAdapterMappings'.]
2017-12-26 13:44:12,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname RegionAdapterMappings]
2017-12-26 13:44:12,703 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'DelayedRegionCreationBehavior' via constructor to object named 'RegionAdapterMappings']
2017-12-26 13:44:12,703 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.DelayedRegionCreationBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)]]
2017-12-26 13:44:12,703 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DelayedRegionCreationBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.RegionAdapterMappings)].]
2017-12-26 13:44:12,703 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DelayedRegionCreationBehavior']
2017-12-26 13:44:12,704 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname DelayedRegionCreationBehavior]
2017-12-26 13:44:12,796 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IShell' instantiated via constructor [Void .ctor(DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection)].]
2017-12-26 13:44:12,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IShell' to allow for resolving potential circular references]
2017-12-26 13:44:12,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IShell']
2017-12-26 13:44:12,796 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IShell']
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IShell']
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IShell']
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:44:12,797 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:44:12,798 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:44:12,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:44:12,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionManager']
2017-12-26 13:44:12,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,802 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionManager'.]
2017-12-26 13:44:12,802 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionManager] using constructor [Void .ctor()]]
2017-12-26 13:44:12,803 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionManager' to allow for resolving potential circular references]
2017-12-26 13:44:12,803 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionManager']
2017-12-26 13:44:12,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionManager']
2017-12-26 13:44:12,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionManager']
2017-12-26 13:44:12,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionManager']
2017-12-26 13:44:12,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:44:12,804 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:44:12,814 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:44:12,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,815 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:44:12,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:44:12,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:44:12,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IRegionViewRegistry' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.RegionViewRegistry]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,816 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IRegionViewRegistry'.]
2017-12-26 13:44:12,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:12,817 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:12,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:12,818 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:12,818 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IRegionViewRegistry' via constructor to object named 'IServiceLocator']
2017-12-26 13:44:12,818 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.RegionViewRegistry] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)]]
2017-12-26 13:44:12,819 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IRegionViewRegistry' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator)].]
2017-12-26 13:44:12,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IRegionViewRegistry' to allow for resolving potential circular references]
2017-12-26 13:44:12,819 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IRegionViewRegistry']
2017-12-26 13:44:12,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IRegionViewRegistry']
2017-12-26 13:44:12,820 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IRegionViewRegistry']
2017-12-26 13:44:12,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IRegionViewRegistry']
2017-12-26 13:44:12,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:44:12,821 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:44:12,821 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:44:12,821 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:44:12,822 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:44:12,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,822 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,823 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:44:12,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,824 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:44:12,825 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,825 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,825 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,826 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:44:12,827 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:44:12,828 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,828 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,828 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:44:12,829 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,830 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:44:12,830 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,851 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,851 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,852 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,853 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,854 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:44:12,854 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,855 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,855 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,856 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,859 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:44:12,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,861 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:44:12,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:44:12,862 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:44:12,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:44:12,863 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:44:12,863 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:44:12,864 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:44:12,864 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:44:12,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,865 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:44:12,866 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,867 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:44:12,867 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,868 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,868 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,869 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:44:12,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,870 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:44:12,871 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,871 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,872 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:44:12,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,873 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:44:12,874 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,874 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,874 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,875 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,876 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,877 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:44:12,877 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,877 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,878 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:44:12,879 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:44:12,880 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:44:12,881 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:44:12,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:44:12,882 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:44:12,886 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:44:12,886 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:44:12,887 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:44:12,887 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,888 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:44:12,889 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,890 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,891 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:44:12,892 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,892 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,893 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,894 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:44:12,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,895 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:44:12,896 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,896 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,897 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:44:12,898 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,899 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:44:12,900 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,901 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,901 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,902 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,903 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,904 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:44:12,904 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,905 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,905 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,906 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name AutoPopulateRegionBehavior => canonical name AutoPopulateRegionBehavior]
2017-12-26 13:44:12,907 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'AutoPopulateRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,908 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'AutoPopulateRegionBehavior'.]
2017-12-26 13:44:12,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:44:12,909 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:44:12,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:44:12,910 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:44:12,911 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'AutoPopulateRegionBehavior' via constructor to object named 'IRegionViewRegistry']
2017-12-26 13:44:12,912 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.AutoPopulateRegionBehavior] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)]]
2017-12-26 13:44:12,912 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'AutoPopulateRegionBehavior' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionViewRegistry)].]
2017-12-26 13:44:12,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,913 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'AutoPopulateRegionBehavior']
2017-12-26 13:44:12,914 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname AutoPopulateRegionBehavior]
2017-12-26 13:44:12,915 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name BindRegionContextToDependencyObjectBehavior => canonical name BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,918 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'BindRegionContextToDependencyObjectBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,919 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'BindRegionContextToDependencyObjectBehavior'.]
2017-12-26 13:44:12,920 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.BindRegionContextToDependencyObjectBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,920 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'BindRegionContextToDependencyObjectBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,921 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'BindRegionContextToDependencyObjectBehavior']
2017-12-26 13:44:12,922 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname BindRegionContextToDependencyObjectBehavior]
2017-12-26 13:44:12,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionActiveAwareBehavior => canonical name RegionActiveAwareBehavior]
2017-12-26 13:44:12,923 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionActiveAwareBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,924 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionActiveAwareBehavior'.]
2017-12-26 13:44:12,924 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionActiveAwareBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,925 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionActiveAwareBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,925 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,926 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionActiveAwareBehavior']
2017-12-26 13:44:12,927 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionActiveAwareBehavior]
2017-12-26 13:44:12,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name SyncRegionContextWithHostBehavior => canonical name SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,928 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'SyncRegionContextWithHostBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,929 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'SyncRegionContextWithHostBehavior'.]
2017-12-26 13:44:12,929 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.SyncRegionContextWithHostBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,930 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'SyncRegionContextWithHostBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,935 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,936 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'SyncRegionContextWithHostBehavior']
2017-12-26 13:44:12,937 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname SyncRegionContextWithHostBehavior]
2017-12-26 13:44:12,938 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionManagerRegistrationBehavior => canonical name RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,941 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionManagerRegistrationBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,943 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionManagerRegistrationBehavior'.]
2017-12-26 13:44:12,943 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionManagerRegistrationBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,944 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionManagerRegistrationBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,945 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionManagerRegistrationBehavior']
2017-12-26 13:44:12,946 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionManagerRegistrationBehavior]
2017-12-26 13:44:12,948 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,949 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,950 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:44:12,952 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,953 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,955 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,956 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,958 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,959 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,960 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:44:12,961 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,962 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,964 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,965 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,966 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,967 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:44:12,968 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,968 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,969 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,970 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,971 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:44:12,972 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,972 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,972 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,973 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,974 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,975 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:44:12,975 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,976 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,976 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,977 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,978 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,983 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:44:12,984 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,985 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,985 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,986 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name RegionMemberLifetimeBehavior => canonical name RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'RegionMemberLifetimeBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,987 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'RegionMemberLifetimeBehavior'.]
2017-12-26 13:44:12,987 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.RegionMemberLifetimeBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,988 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'RegionMemberLifetimeBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'RegionMemberLifetimeBehavior']
2017-12-26 13:44:12,988 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname RegionMemberLifetimeBehavior]
2017-12-26 13:44:12,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ClearChildViewsRegionBehavior => canonical name ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ClearChildViewsRegionBehavior' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior]; Abstract = False; Parent = ; Scope = prototype; Singleton = False; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,989 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ClearChildViewsRegionBehavior'.]
2017-12-26 13:44:12,989 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Regions.Behaviors.ClearChildViewsRegionBehavior] using constructor [Void .ctor()]]
2017-12-26 13:44:12,990 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ClearChildViewsRegionBehavior' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ClearChildViewsRegionBehavior']
2017-12-26 13:44:12,990 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ClearChildViewsRegionBehavior]
2017-12-26 13:44:12,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:12,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IEventAggregator']
2017-12-26 13:44:12,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IEventAggregator' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Events.EventAggregator]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,991 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IEventAggregator'.]
2017-12-26 13:44:12,991 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Events.EventAggregator] using constructor [Void .ctor()]]
2017-12-26 13:44:12,992 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IEventAggregator' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:12,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IEventAggregator' to allow for resolving potential circular references]
2017-12-26 13:44:12,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IEventAggregator']
2017-12-26 13:44:12,992 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IEventAggregator']
2017-12-26 13:44:12,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IEventAggregator']
2017-12-26 13:44:12,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IEventAggregator']
2017-12-26 13:44:12,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:12,993 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:12,993 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module.]
2017-12-26 13:44:12,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:44:12,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleManager']
2017-12-26 13:44:12,994 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,995 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleManager'.]
2017-12-26 13:44:12,998 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleInitializer => canonical name IModuleInitializer]
2017-12-26 13:44:12,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:44:12,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IModuleInitializer' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.Modularity.ModuleInitializer]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:12,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IModuleInitializer'.]
2017-12-26 13:44:12,999 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:13,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:13,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:13,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:13,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:44:13,000 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:44:13,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:44:13,001 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:44:13,001 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'IServiceLocator']
2017-12-26 13:44:13,001 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleInitializer' via constructor to object named 'ILoggerFacade']
2017-12-26 13:44:13,001 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleInitializer] using constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleInitializer' instantiated via constructor [Void .ctor(Microsoft.Practices.ServiceLocation.IServiceLocator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleInitializer' to allow for resolving potential circular references]
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleInitializer']
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleInitializer']
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleInitializer']
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleInitializer']
2017-12-26 13:44:13,002 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleInitializer'.]
2017-12-26 13:44:13,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleInitializer]
2017-12-26 13:44:13,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IModuleCatalog => canonical name IModuleCatalog]
2017-12-26 13:44:13,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleCatalog'.]
2017-12-26 13:44:13,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleCatalog'.]
2017-12-26 13:44:13,003 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IModuleCatalog]
2017-12-26 13:44:13,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:44:13,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:44:13,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:44:13,004 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:44:13,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleInitializer']
2017-12-26 13:44:13,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'IModuleCatalog']
2017-12-26 13:44:13,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'ILoggerFacade']
2017-12-26 13:44:13,005 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IModuleManager' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:44:13,006 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.Modularity.ModuleManager] using constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)]]
2017-12-26 13:44:13,006 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IModuleManager' instantiated via constructor [Void .ctor(DS.AFP.Framework.Modularity.IModuleInitializer, DS.AFP.Framework.Modularity.IModuleCatalog, DS.AFP.Common.Core.ILoggerFacade, Spring.Context.IApplicationContext)].]
2017-12-26 13:44:13,006 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IModuleManager' to allow for resolving potential circular references]
2017-12-26 13:44:13,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IModuleManager']
2017-12-26 13:44:13,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IModuleManager']
2017-12-26 13:44:13,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IModuleManager']
2017-12-26 13:44:13,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IModuleManager']
2017-12-26 13:44:13,007 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:44:13,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:44:13,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IModuleManager => canonical name IModuleManager]
2017-12-26 13:44:13,009 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IModuleManager'.]
2017-12-26 13:44:13,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IModuleManager'.]
2017-12-26 13:44:13,010 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IModuleManager]
2017-12-26 13:44:13,013 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserModule => canonical name WebBrowserModule]
2017-12-26 13:44:13,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:44:13,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserModule' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.WebBrowserModule]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:13,014 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserModule'.]
2017-12-26 13:44:13,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IPortal => canonical name IPortal]
2017-12-26 13:44:13,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'IPortal']
2017-12-26 13:44:13,016 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'IPortal' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Portal.MainPortal]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:13,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'IPortal'.]
2017-12-26 13:44:13,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [         GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:44:13,017 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:44:13,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:44:13,018 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:44:13,018 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'IPortal' via constructor to object named 'IRegionManager']
2017-12-26 13:44:13,018 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Portal.MainPortal] using constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)]]
2017-12-26 13:44:13,020 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'IPortal' instantiated via constructor [Void .ctor(DS.AFP.Framework.Regions.IRegionManager)].]
2017-12-26 13:44:13,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'IPortal' to allow for resolving potential circular references]
2017-12-26 13:44:13,020 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'IPortal']
2017-12-26 13:44:13,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'IPortal']
2017-12-26 13:44:13,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'IPortal']
2017-12-26 13:44:13,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'IPortal']
2017-12-26 13:44:13,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IPortal'.]
2017-12-26 13:44:13,021 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IPortal]
2017-12-26 13:44:13,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsConfigurationSection => canonical name IDsConfigurationSection]
2017-12-26 13:44:13,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsConfigurationSection'.]
2017-12-26 13:44:13,022 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsConfigurationSection'.]
2017-12-26 13:44:13,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsConfigurationSection]
2017-12-26 13:44:13,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IShell => canonical name IShell]
2017-12-26 13:44:13,023 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IShell'.]
2017-12-26 13:44:13,024 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IShell'.]
2017-12-26 13:44:13,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IShell]
2017-12-26 13:44:13,025 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:44:13,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'ILoadingManage']
2017-12-26 13:44:13,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'ILoadingManage' with merged definition [RootObjectDefinition : Class [DS.AFP.Common.Core.Loader.LoadingManage]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:13,026 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'ILoadingManage'.]
2017-12-26 13:44:13,026 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Common.Core.Loader.LoadingManage] using constructor [Void .ctor()]]
2017-12-26 13:44:13,027 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'ILoadingManage' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:13,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'ILoadingManage' to allow for resolving potential circular references]
2017-12-26 13:44:13,027 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'ILoadingManage']
2017-12-26 13:44:13,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'ILoadingManage']
2017-12-26 13:44:13,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'ILoadingManage']
2017-12-26 13:44:13,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'ILoadingManage']
2017-12-26 13:44:13,028 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:44:13,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:44:13,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:44:13,029 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:44:13,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:44:13,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:44:13,030 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IRegionManager => canonical name IRegionManager]
2017-12-26 13:44:13,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionManager'.]
2017-12-26 13:44:13,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionManager'.]
2017-12-26 13:44:13,031 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IRegionManager]
2017-12-26 13:44:13,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,032 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:44:13,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:44:13,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:44:13,033 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:44:13,033 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'Spring.Context.Support.XmlApplicationContext@212CD02']
2017-12-26 13:44:13,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IPortal']
2017-12-26 13:44:13,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsConfigurationSection']
2017-12-26 13:44:13,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IShell']
2017-12-26 13:44:13,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoadingManage']
2017-12-26 13:44:13,034 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IDsEnvironment']
2017-12-26 13:44:13,035 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IRegionManager']
2017-12-26 13:44:13,035 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'IEventAggregator']
2017-12-26 13:44:13,035 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [CreateArgumentArray] [Autowiring by type from object name 'WebBrowserModule' via constructor to object named 'ILoggerFacade']
2017-12-26 13:44:13,035 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.WebBrowserModule] using constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)]]
2017-12-26 13:44:13,065 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IDsEnvironment => canonical name IDsEnvironment]
2017-12-26 13:44:13,069 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IDsEnvironment'.]
2017-12-26 13:44:13,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IDsEnvironment'.]
2017-12-26 13:44:13,070 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IDsEnvironment]
2017-12-26 13:44:13,072 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-ins start loading]
2017-12-26 13:44:13,076 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [creating context 'ds.afp.webbrowser']
2017-12-26 13:44:13,078 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Refreshing object factory ]
2017-12-26 13:44:13,078 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [LoadObjectDefinitions] [Loading XML object definitions from config [D:\WorkSpace\DS.AFP-N\Trunk\DS.AFP-N\Bin\BizApp\DS_AFP-N\DS.AFP.WPF.App.exe.Config#spring/objects]]
2017-12-26 13:44:13,079 DEBUG [1] [Spring.Objects.Factory.Xml.XmlObjectDefinitionReader] [CreateValidatingReader] [Using the following XmlReader implementation : System.Xml.XsdValidatingReader]
2017-12-26 13:44:13,079 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Loading object definitions.]
2017-12-26 13:44:13,079 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Loading object definitions...]
2017-12-26 13:44:13,080 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default lazy init ''.]
2017-12-26 13:44:13,080 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default dependency check ''.]
2017-12-26 13:44:13,080 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire ''.]
2017-12-26 13:44:13,080 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default merge ''.]
2017-12-26 13:44:13,081 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:44:13,081 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:44:13,081 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default autowire candidates ''.]
2017-12-26 13:44:13,081 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default init method ''.]
2017-12-26 13:44:13,082 DEBUG [1] [Spring.Objects.Factory.Xml.ObjectDefinitionParserHelper] [InitDefaults] [Default destroy method ''.]
2017-12-26 13:44:13,082 DEBUG [1] [Spring.Objects.Factory.Xml.DefaultObjectDefinitionDocumentReader] [RegisterObjectDefinitions] [Found 0 <object> elements defining objects.]
2017-12-26 13:44:13,082 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectDefinitionReader] [LoadObjectDefinitions] [Loaded 0 object definitions from location [config://spring/objects]]
2017-12-26 13:44:13,082 DEBUG [1] [Spring.Context.Support.AbstractXmlApplicationContext] [RefreshObjectFactory] [Refreshed ObjectFactory for application context 'ds.afp.webbrowser'.]
2017-12-26 13:44:13,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Registering well-known processors and objects]
2017-12-26 13:44:13,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Custom post processing object factory]
2017-12-26 13:44:13,083 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using pre-registered processors]
2017-12-26 13:44:13,084 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [No objects defined in application context [ds.afp.webbrowser].]
2017-12-26 13:44:13,084 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Post processing object factory using defined processors]
2017-12-26 13:44:13,087 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InvokeObjectFactoryPostProcessors] [processed 0 IFactoryObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:44:13,089 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [RegisterObjectPostProcessors] [processed 0 IObjectPostProcessors defined in application context [ds.afp.webbrowser].]
2017-12-26 13:44:13,090 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitEventRegistry] [No IEventRegistry found with name 'eventRegistry' : using default 'Spring.Objects.Events.Support.EventRegistry'.]
2017-12-26 13:44:13,093 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [InitMessageSource] [No message source found in the current context: using parent context's message source 'Spring.Context.Support.DelegatingMessageSource'.]
2017-12-26 13:44:13,095 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Preinstantiating singletons]
2017-12-26 13:44:13,096 DEBUG [1] [Spring.Objects.Factory.Support.DefaultListableObjectFactory] [PreInstantiateSingletons] [Pre-instantiating singletons in factory [Spring.Objects.Factory.Support.DefaultListableObjectFactory]]
2017-12-26 13:44:13,097 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [ds.afp.webbrowser] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:44:13,098 DEBUG [1] [Spring.Context.Support.AbstractApplicationContext] [PublishEvent] [Publishing event in context [spring.root] : ContextRefreshedEventArgs [Refreshed]]
2017-12-26 13:44:13,098 INFO  [1] [Spring.Context.Support.AbstractApplicationContext] [Refresh] [ApplicationContext Refresh: Completed]
2017-12-26 13:44:13,099 DEBUG [1] [Spring.Context.Support.ContextRegistry] [RegisterContext] [Registering context 'Spring.Context.Support.XmlApplicationContext' under name 'ds.afp.webbrowser'.]
2017-12-26 13:44:13,099 DEBUG [1] [Spring.Context.Support.ContextHandler] [Create] [context 'Spring.Context.Support.XmlApplicationContext' created for name 'ds.afp.webbrowser']
2017-12-26 13:44:13,169 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WebBrowser Plug-in loaded]
2017-12-26 13:44:13,471 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserModule' instantiated via constructor [Void .ctor(Spring.Context.IApplicationContext, DS.AFP.Framework.WPF.Portal.IPortal, DS.AFP.Common.Core.ConfigurationNameSpace.IDsConfigurationSection, DS.AFP.Framework.WPF.IShell, DS.AFP.Common.Core.Loader.ILoadingManage, DS.AFP.Common.Core.IDsEnvironment, DS.AFP.Framework.Regions.IRegionManager, DS.AFP.Framework.Events.IEventAggregator, DS.AFP.Common.Core.ILoggerFacade)].]
2017-12-26 13:44:13,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserModule' to allow for resolving potential circular references]
2017-12-26 13:44:13,471 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserModule']
2017-12-26 13:44:13,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserModule']
2017-12-26 13:44:13,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserModule']
2017-12-26 13:44:13,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserModule']
2017-12-26 13:44:13,472 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserModule'.]
2017-12-26 13:44:13,473 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserModule]
2017-12-26 13:44:13,475 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IServiceLocator => canonical name IServiceLocator]
2017-12-26 13:44:13,476 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IServiceLocator'.]
2017-12-26 13:44:13,476 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IServiceLocator'.]
2017-12-26 13:44:13,476 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IServiceLocator]
2017-12-26 13:44:13,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name IRegionViewRegistry => canonical name IRegionViewRegistry]
2017-12-26 13:44:13,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IRegionViewRegistry'.]
2017-12-26 13:44:13,477 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IRegionViewRegistry'.]
2017-12-26 13:44:13,478 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname IRegionViewRegistry]
2017-12-26 13:44:13,479 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name DS.AFP.WebBrowser.Browser => canonical name DS.AFP.WebBrowser.Browser]
2017-12-26 13:44:13,480 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:44:13,481 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'DS.AFP.WebBrowser.Browser' with merged definition [RootObjectDefinition : Class [DS.AFP.WebBrowser.Browser]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:13,481 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:44:13,481 TRACE [1] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.WebBrowser.Browser] using constructor [Void .ctor()]]
2017-12-26 13:44:13,536 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name ILoggerFacade => canonical name ILoggerFacade]
2017-12-26 13:44:13,542 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoggerFacade'.]
2017-12-26 13:44:13,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoggerFacade'.]
2017-12-26 13:44:13,546 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname ILoggerFacade]
2017-12-26 13:44:13,549 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,550 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,551 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,553 DEBUG [1] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'DS.AFP.WebBrowser.Browser' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:13,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'DS.AFP.WebBrowser.Browser' to allow for resolving potential circular references]
2017-12-26 13:44:13,554 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:44:13,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:44:13,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:44:13,555 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'DS.AFP.WebBrowser.Browser']
2017-12-26 13:44:13,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'DS.AFP.WebBrowser.Browser'.]
2017-12-26 13:44:13,556 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname DS.AFP.WebBrowser.Browser]
2017-12-26 13:44:13,568 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Initialization module end.]
2017-12-26 13:44:13,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name ILoadingManage => canonical name ILoadingManage]
2017-12-26 13:44:13,568 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'ILoadingManage'.]
2017-12-26 13:44:13,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'ILoadingManage'.]
2017-12-26 13:44:13,569 DEBUG [1] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname ILoadingManage]
2017-12-26 13:44:13,815 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:44:13,816 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Creating shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:44:13,816 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Creating instance of Object 'WebBrowserManager' with merged definition [RootObjectDefinition : Class [DS.AFP.Framework.WPF.Browser.WebBrowserManager]; Abstract = False; Parent = ; Scope = singleton; Singleton = True; LazyInit = False; Autowire = Constructor; Autowire-Candidate = True; Primary = False; DependencyCheck = None; InitMethodName = ; DestroyMethodName = ; FactoryMethodName = ; FactoryObjectName = ].]
2017-12-26 13:44:13,816 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInstantiation] [Invoking IInstantiationAwareObjectPostProcessors before the instantiation of 'WebBrowserManager'.]
2017-12-26 13:44:13,816 TRACE [8] [Spring.Util.ObjectUtils] [InstantiateType] [instantiating type [DS.AFP.Framework.WPF.Browser.WebBrowserManager] using constructor [Void .ctor()]]
2017-12-26 13:44:13,817 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,821 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,821 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,821 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,821 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,823 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,823 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,823 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,823 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,835 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [      GetObjectInternal: obtaining instance for name IEventAggregator => canonical name IEventAggregator]
2017-12-26 13:44:13,835 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'IEventAggregator'.]
2017-12-26 13:44:13,836 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'IEventAggregator'.]
2017-12-26 13:44:13,836 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: returning instance for objectname IEventAggregator]
2017-12-26 13:44:13,836 DEBUG [8] [Spring.Objects.Factory.Support.ConstructorResolver] [AutowireConstructor] [Object 'WebBrowserManager' instantiated via constructor [Void .ctor()].]
2017-12-26 13:44:13,836 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [InstantiateObject] [Eagerly caching object 'WebBrowserManager' to allow for resolving potential circular references]
2017-12-26 13:44:13,836 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ConfigureObject] [Configuring object using definition 'WebBrowserManager']
2017-12-26 13:44:13,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsBeforeInitialization] [Invoking IObjectPostProcessors before initialization of object 'WebBrowserManager']
2017-12-26 13:44:13,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractAutowireCapableObjectFactory] [ApplyObjectPostProcessorsAfterInitialization] [Invoking IObjectPostProcessors after initialization of object 'WebBrowserManager']
2017-12-26 13:44:13,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [CreateAndCacheSingletonInstance] [Cached shared instance of singleton object 'WebBrowserManager']
2017-12-26 13:44:13,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:44:13,837 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:44:14,022 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [Pre load program has been completed.]
2017-12-26 13:44:14,022 INFO  [1] [DS.AFP.Common.Core.LoggerFacade] [Info] [Platform loaded]
2017-12-26 13:44:14,022 DEBUG [1] [DS.AFP.Common.Core.LoggerFacade] [Debug] [WPF宿主容器启动完成，运行正常!]
2017-12-26 13:44:18,818 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:44:18,825 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:44:18,825 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:44:18,825 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
2017-12-26 13:44:23,491 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [   GetObjectInternal: obtaining instance for name WebBrowserManager => canonical name WebBrowserManager]
2017-12-26 13:44:23,491 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [Returning cached instance of singleton object 'WebBrowserManager'.]
2017-12-26 13:44:23,492 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectForInstance] [Calling code asked for normal instance for name 'WebBrowserManager'.]
2017-12-26 13:44:23,492 DEBUG [8] [Spring.Objects.Factory.Support.AbstractObjectFactory] [GetObjectInternal] [GetObjectInternal: returning instance for objectname WebBrowserManager]
